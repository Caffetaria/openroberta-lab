// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.de');

goog.require('Blockly.Msg');

Blockly.Msg.ABOUT = "über";
Blockly.Msg.ACCELERATION_TOOLTIP = "Gibt die aktuelle Beschleunigung zurück.";
Blockly.Msg.ACCELEROMETER_ROTATION_TOOLTIP = "Gibt den Wert für Neigung und Drehung zurück.";
Blockly.Msg.ACTION_ANALOGIN = "Aktor analog";
Blockly.Msg.ACTION_BUZZER = "Summer";
Blockly.Msg.ACTION_BUZZER_ARDUINO = "Summer HYT120";
Blockly.Msg.ACTION_DIGITALIN = "Aktor digital";
Blockly.Msg.ACTION_EVAL = "werte";
Blockly.Msg.ACTION_EVAL_AS = "als";
Blockly.Msg.ACTION_IN = "Aktor";
Blockly.Msg.ACTION_INFRARED = "Infrarotstrahler";
Blockly.Msg.ACTION_LCD = "LCD 1602";
Blockly.Msg.ACTION_LCDI2C = "LCD 1602 I²C";
Blockly.Msg.ACTION_LCDI2C_SENSEBOX = "OLED Bildschirm I²C";
Blockly.Msg.ACTION_LED = "LED";
Blockly.Msg.ACTION_MOTOR = "Motor";
Blockly.Msg.ACTION_PLAY = "Spiele";
Blockly.Msg.ACTION_PLOTTING = "plot";
Blockly.Msg.ACTION_PLOT_CLEAR = "clear the plot";
Blockly.Msg.ACTION_PLOT_POINT = "plot a point";
Blockly.Msg.ACTION_PLOT_POINT_TOOLTIP = "plot a point with specified value (Y axis) at the specified tickmark (X axis)";
Blockly.Msg.ACTION_PLOT_TICKMARK = "at tickmark";
Blockly.Msg.ACTION_RELAY = "Relais";
Blockly.Msg.ACTION_RGBLED = "RGB LED";
Blockly.Msg.ACTION_SDCARD = "SD Karte";
Blockly.Msg.ACTION_SERIAL_PRINT = "Zeige auf Serial Monitor";
Blockly.Msg.ACTION_SERIAL_PRINT_TOOLTIP = "Zeige Daten auf dem Serial Monitor. Im USB Programm findest du den Serial Monitor oben, unter Anzeige.";
Blockly.Msg.ACTION_SERVO = "Servomotor";
Blockly.Msg.ACTION_SERVO_ARDUINO = "Servomotor SG90";
Blockly.Msg.ACTION_STEPMOTOR = "Schrittmotor";
Blockly.Msg.ACTION_WIRELESS = "WLAN Verbindung";
Blockly.Msg.ACTIVITY_TOOLTIP = "Block für eine zusätzliche Aktivität.";
Blockly.Msg.ACTOR_MODE_ANALOGIN_TOOLTIP = "Schreibt einen analogen Wert (PWM wave) auf einen Pin. Werte zwischen 0 und 255 können eingegeben werden.";
Blockly.Msg.ACTOR_MODE_DIGITALIN_TOOLTIP = "Schreibt einen digitalen Wert auf einen Pin. Die Werte HIGH »1« oder LOW »0« können eingegeben werden.";
Blockly.Msg.ACTOR_TOOLTIP = "Represents any actor.";
Blockly.Msg.ADD_COMMENT = "Add Comment";  // untranslated
Blockly.Msg.ANALOG = "analogen";
Blockly.Msg.ANALOGIN_TOOLTIP = "Block für einen beliebigen Aktor, der mit einem analogen Signal gesteuert wird.";
Blockly.Msg.ANALOGOUT_TOOLTIP = "Block für einen beliebigen Sensor, der ein analoges Signal zurückgibt.";
Blockly.Msg.AND = "und";
Blockly.Msg.ARDUBRICK_TOOLTIP = "Block für das Bot'n Roll board mit den angeschlossenen Aktoren und Sensoren. Es gibt auch weitere eingebaute Aktoren und Sensoren, wie z. B. das Display, die Tasten ...";
Blockly.Msg.AUTH = "Please authorize this app to enable your work to be saved and to allow it to be shared by you.";  // untranslated
Blockly.Msg.BATTERY_GETSAMPLE_TOOLTIP = "Gets the current voltage from the battery.";  // untranslated
Blockly.Msg.BLOCK_NOT_EXECUTED = "Überprüfe die Einstellungen bei diesem Block. Er wird so nichts ausführen können.";
Blockly.Msg.BOB3_READNUMBER_TOOLTIP = "Gibt die zuvor gespeicherte Zahl zurück.";
Blockly.Msg.BOB3_RECALL_NUMBER = "lese Zahl aus Speicher";
Blockly.Msg.BOB3_REMEMBER_NUMBER = "Speichere Zahl";
Blockly.Msg.BOB3_SAVENUMBER_TOOLTIP = "Hier kannst du eine Zahl dauerhaft speichern. Sie sollte ganzzahlig sein und einen Wert zwischen 0 und 255 haben.";
Blockly.Msg.BOTH = "beide";
Blockly.Msg.BOX_ID = "Gerät ID";
Blockly.Msg.BRICKLIGHT = "Statusleuchte";
Blockly.Msg.BRICKLIGHT_BLUE = "blau";
Blockly.Msg.BRICKLIGHT_COLOR = "Farbe";
Blockly.Msg.BRICKLIGHT_DOUBLE_FLASH = "doppel blinkend";
Blockly.Msg.BRICKLIGHT_FLASH = "blinkend";
Blockly.Msg.BRICKLIGHT_GREEN = "grün";
Blockly.Msg.BRICKLIGHT_OFF_TOOLTIP = "Schaltet die Statusleuchte aus.";
Blockly.Msg.BRICKLIGHT_ON = "an";
Blockly.Msg.BRICKLIGHT_ON_TOOLTIP = "Schaltet die Statusleuchte ein.";
Blockly.Msg.BRICKLIGHT_ORANGE = "orange";
Blockly.Msg.BRICKLIGHT_RED = "rot";
Blockly.Msg.BRICKLIGHT_RESET_TOOLTIP = "Setzt die Statusleuchte zurück auf grün und blinkend.";
Blockly.Msg.BRICKNAME_WEDO = "WeDo";
Blockly.Msg.BRICK_IPADDRESS = "IP-Adresse";
Blockly.Msg.BRICK_PASSWORD = "Passwort";
Blockly.Msg.BRICK_PHENOMENON = "Phänomen";
Blockly.Msg.BRICK_PORT = "Port";
Blockly.Msg.BRICK_TRACK_WIDTH = "Spurbreite";
Blockly.Msg.BRICK_USERNAME = "Benutzername";
Blockly.Msg.BRICK_WHEEL_DIAMETER = "Raddurchmesser";
Blockly.Msg.BRUSH_OFF = "Stoppe Staubbürste";
Blockly.Msg.BRUSH_OFF_TOOLTIP = "Turns the brush off.";
Blockly.Msg.BRUSH_ON = "Stelle Staubbürste an (RPM)";
Blockly.Msg.BRUSH_ON_TOOLTIP = "Turns on the brush with RPM of the motor (0<=RPM<=10000)";
Blockly.Msg.BUTTON_DO_UPLOAD_GALLERY = "»$« in die Galerie hochladen";
Blockly.Msg.BUTTON_EMPTY_LIST = "Liste leeren";
Blockly.Msg.BUZZER_TOOLTIP = "Block für den Summer";
Blockly.Msg.CALLIOPEBRICK_TOOLTIP = "Block für Calliope, einen Mini-Computer. Es gibt auch weitere eingebaute Aktoren und Sensoren, wie z. B. das Display, die Tasten ...";
Blockly.Msg.CB_ALL = "Calli:bot alle";
Blockly.Msg.CB_BOTH = "Calli:bot beide";
Blockly.Msg.CB_LEFT = "Calli:bot links";
Blockly.Msg.CB_RIGHT = "Calli:bot rechts";
Blockly.Msg.CENTER = "mitte";
Blockly.Msg.CHANGE_VALUE_TITLE = "Change value:";  // untranslated
Blockly.Msg.CHAT = "Chat with your collaborator by typing in this box!";  // untranslated
Blockly.Msg.CLEAN_UP = "Clean up Blocks";  // untranslated
Blockly.Msg.COLLAPSE_ALL = "Collapse Blocks";  // untranslated
Blockly.Msg.COLLAPSE_BLOCK = "Collapse Block";  // untranslated
Blockly.Msg.COLON = "Doppelpunkt";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "colour 1";  // untranslated
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "colour 2";  // untranslated
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";  // untranslated
Blockly.Msg.COLOUR_BLEND_RATIO = "ratio";  // untranslated
Blockly.Msg.COLOUR_BLEND_TITLE = "blend";  // untranslated
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Blends two colours together with a given ratio (0.0 - 1.0).";  // untranslated
Blockly.Msg.COLOUR_GETSAMPLE_TOOLTIP = "Gibt den aktuellen Wert des Farbsensors zurück.";
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://en.wikipedia.org/wiki/Color";  // untranslated
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Choose a colour from the palette.";  // untranslated
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "random colour";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Choose a colour at random.";  // untranslated
Blockly.Msg.COLOUR_RGB_BLUE = "blue";  // untranslated
Blockly.Msg.COLOUR_RGB_GREEN = "green";  // untranslated
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";  // untranslated
Blockly.Msg.COLOUR_RGB_RED = "red";  // untranslated
Blockly.Msg.COLOUR_RGB_TITLE = "colour with";  // untranslated
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Erstellt eine Farbe mit den Werten für rot, grün und blau. Die Werte sollten zwischen 0 und 255 liegen.";
Blockly.Msg.COLOUR_RGB_WHITE = "weiß";
Blockly.Msg.COLOUR_TOOLTIP = "Block für den Farbsensor";
Blockly.Msg.COMPASS_CALIBRATE_TOOLTIP = "Kalibriert den Kompass. Drehe den Kompass Sensor zwei Mal GANZ langsam (ca. 40 Sekunden).";
Blockly.Msg.COMPASS_GETSAMPLE_TOOLTIP = "Gibt den aktuellen Wert des Kompasssensors zurück.";
Blockly.Msg.COMPASS_TOOLTIP = "Block für den Kompasssensor.";
Blockly.Msg.COMPASS_TOOLTIP_EV3 = "Block für den HiTechnic NXT Kompasssensor.";
Blockly.Msg.CONFIGURATION_ERROR_ACTOR_MISSING = "In der Roboterkonfiguration ist dieser Aktuator nicht mit einem Actorport verbunden!";
Blockly.Msg.CONFIGURATION_ERROR_MOTORS_ROTATION_DIRECTION = "Die Drehrichtung des linken und rechten Motors ist nicht gleich!";
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_LEFT_MISSING = "In der Roboterkonfiguration ist kein linker Motor angegeben!";
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_LEFT_UNREGULATED = "Beim linken Motor ist die Regulierung ausgestellt!";
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_MISSING = "In der Roboterkonfiguration ist kein Motor an diesem Motorport angeschlossen!";
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_RIGHT_MISSING = "In der Roboterkonfiguration ist kein rechter Motor angegeben!";
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_RIGHT_UNREGULATED = "Beim rechten Motor ist die Regulierung ausgestellt!";
Blockly.Msg.CONFIGURATION_ERROR_MULTIPLE_LEFT_MOTORS = "Es kann nur ein linker Motor in der Roboterkonfiguration sein!";
Blockly.Msg.CONFIGURATION_ERROR_MULTIPLE_RIGHT_MOTORS = "Es kann nur ein rechter Motor in der Roboterkonfiguration sein!";
Blockly.Msg.CONFIGURATION_ERROR_OTHER_NOT_SUPPORTED = "Anderer Stromverbraucher unterstützt diese Art von Block nicht!";
Blockly.Msg.CONFIGURATION_ERROR_SENSOR_MISSING = "In der Roboterkonfiguration ist dieser Sensor nicht mit einem Sensorport verbunden!";
Blockly.Msg.CONFIGURATION_ERROR_SENSOR_WRONG = "In der Roboterkonfiguration ist ein anderer Sensor mit diesem Sensorport verbunden!";
Blockly.Msg.CONFIGURATION_ERROR_WLAN_CREDENTIALS_MISSING = "WLAN Zugangsdaten fehlen, bitte unter dem »Robot -> WLAN Zugangsdaten« ... Menupunkt eingeben!";
Blockly.Msg.CONFIGURATION_NO_PHENOMENON = "no phenomenon";  // untranslated
Blockly.Msg.CONFIGURATION_NO_PORT = "no port";  // untranslated
Blockly.Msg.CONFIGURATION_PORT = "Port1";  // untranslated
Blockly.Msg.CONFLIST_DELETE_ALL_TOOLTIP = "Klicke hier um alle ausgewählten Roboterkonfigurationen zu löschen.";
Blockly.Msg.CONFLIST_DELETE_TOOLTIP = "Klicke hier um deine Roboterkonfiguration zu löschen.";
Blockly.Msg.CONFLIST_LOAD_TOOLTIP = "Klicke hier um deine Roboterkonfiguration in die Konfigurationsumgebung zu laden.";
Blockly.Msg.CONNECTION_CHECK = "Verbindung zu Roboter %1 aktiv?";
Blockly.Msg.CONNECTION_CHECK_TOOLTIP = "Prüft, ob die Verbindung zu dem Roboter aktiv ist.";
Blockly.Msg.CONNECTION_CONNECT = "Verbinde mit Robotername";
Blockly.Msg.CONNECTION_FROM_CONNECTION = "von Verbindung";
Blockly.Msg.CONNECTION_FROM_ROBOT = "von Roboter";
Blockly.Msg.CONNECTION_MBED_RECEIVE_TOOLTIP = "Liest eine Nachricht über Kanal 0 bis 255. Der voreingestellte Kanal ist 0.";
Blockly.Msg.CONNECTION_MBED_SEND_TOOLTIP = "Sendet eine Nachricht zu einem anderen System über Kanal 0 bis 255 mit einer Signalstärke von 0 bis 7. Wobei 0 ist ein schwaches Signal und 7 das stärkste Signal ist.";
Blockly.Msg.CONNECTION_OVER_CHANNEL = "über Kanal";
Blockly.Msg.CONNECTION_POWER = "mit Stärke";
Blockly.Msg.CONNECTION_PROTOCOL_BLUETOOTH = "Bluetooth";
Blockly.Msg.CONNECTION_RECEIVED_DATA = "Empfange Nachricht";
Blockly.Msg.CONNECTION_RECEIVE_TOOLTIP = "Wartet auf eine Nachricht aus der Verbindung, die am Eingang Verbindung angegeben wird.";
Blockly.Msg.CONNECTION_RECEIVE_TOOLTIP_BOB3 = "Wartet auf eine Nachricht. Nachrichten sind vom Typ Zahl.";
Blockly.Msg.CONNECTION_RECEIVE_TOOLTIP_MBOT = "Wartet auf eine Nachricht. Nachrichten sind vom Typ Text.";
Blockly.Msg.CONNECTION_SEND_DATA = "Sende Nachricht";
Blockly.Msg.CONNECTION_SEND_TOOLTIP = "Sendet eine Nachricht zu einem anderen Roboter.";
Blockly.Msg.CONNECTION_SEND_TOOLTIP_BOB3 = "Sendet eine Zahl an einen anderen Bob3. Halte die Bob3's gegenüber, damit die Nachricht empfangen werden kann!";
Blockly.Msg.CONNECTION_SEND_TOOLTIP_MBOT = "Sendet einen Text an einen anderen mBot. Halte die mBot's gegenüber, damit die Nachricht empfangen werden kann!";
Blockly.Msg.CONNECTION_SET_CHANNEL = "setze Kanal auf %1";
Blockly.Msg.CONNECTION_SET_CHANNEL_TOOLTIP = "Bestimmt den Kanal für die Nachrichtenübertragung für ein- und ausgehende Nachrichten. Mögliche Kanäle sind 0 bis 255.";
Blockly.Msg.CONNECTION_START_TOOLTIP = "Baut eine Verbindung per Bluetooth zu einem anderen Roboter auf.";
Blockly.Msg.CONNECTION_TOOLTIP = "Verbindung zu einem Roboter";
Blockly.Msg.CONNECTION_TO_CONNECTION = "zu Verbindung";
Blockly.Msg.CONNECTION_TO_ROBOT = "zu Roboter";
Blockly.Msg.CONNECTION_WAIT_FOR_CONNECTION = "Warte auf Verbindung";
Blockly.Msg.CONNECTION_WAIT_TOOLTIP = "Wartet der Roboter auf die Verbindungsanfrage eines anderen Roboters.";
Blockly.Msg.CONNECTOR = "Anschluss";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "break out of loop";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "continue with next iteration of loop";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Break out of the containing loop.";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Skip the rest of this loop, and continue with the next iteration.";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Warning: This block may only be used within a loop.";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_TITLE = "for each item %1 in list %2";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "For each item in a list, set the variable '%1' to the item, and then do some statements.";  // untranslated
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg.CONTROLS_FOR_TITLE = "count with %1 from %2 while counter < %3 by %4";  // untranslated
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Have the variable '%1' take on the values from the start number as long as it is less than the end number, counting by the specified interval, and do the specified blocks.";  // untranslated
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Add a condition to the if block.";  // untranslated
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Add a final, catch-all condition to the if block.";  // untranslated
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Add, remove, or reorder sections to reconfigure this if block.";  // untranslated
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "else";  // untranslated
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "else if";  // untranslated
Blockly.Msg.CONTROLS_IF_MSG_IF = "if";  // untranslated
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "If a value is true, then do some statements.";  // untranslated
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "If a value is true, then do the first block of statements. Otherwise, do the second block of statements.";  // untranslated
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements.";  // untranslated
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements. If none of the values are true, do the last block of statements.";  // untranslated
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://en.wikipedia.org/wiki/For_loop";  // untranslated
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "do";  // untranslated
Blockly.Msg.CONTROLS_REPEAT_TITLE = "repeat %1 times";  // untranslated
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Do some statements several times.";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "repeat until";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "repeat while";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "While a value is false, then do some statements.";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "While a value is true, then do some statements.";  // untranslated
Blockly.Msg.DATATABLE_ACTUALIZATION = "Letzte Aktualisierung";
Blockly.Msg.DATATABLE_CONFIGURATIONS = "Konfigurationen";
Blockly.Msg.DATATABLE_CONFIGURATION_NAME = "Name der Konfiguration";
Blockly.Msg.DATATABLE_CREATED_BY = "Erzeugt von";
Blockly.Msg.DATATABLE_CREATED_ON = "Erzeugt am";
Blockly.Msg.DATATABLE_PROGRAMS = "Programme";
Blockly.Msg.DATATABLE_PROGRAM_NAME = "Name des Programms";
Blockly.Msg.DATATABLE_SHARED = "Geteilt";
Blockly.Msg.DATATABLE_SHARED_WITH = "Geteilt mit";
Blockly.Msg.DELETE_ALL_BLOCKS = "Delete all %1 blocks?";  // untranslated
Blockly.Msg.DELETE_BLOCK = "Delete Block";  // untranslated
Blockly.Msg.DELETE_X_BLOCKS = "Delete %1 Blocks";  // untranslated
Blockly.Msg.DIGITAL = "digitalen";
Blockly.Msg.DIGITALIN_TOOLTIP = "Block für einen beliebigen Aktor, der mit einem digitales Signal gesteuert wird.";
Blockly.Msg.DIGITALOUT_TOOLTIP = "Block für einen beliebigen Sensor, der ein digitales Signal zurückgibt.";
Blockly.Msg.DISABLE_BLOCK = "Disable Block";  // untranslated
Blockly.Msg.DISPLAY_ANIMATION = "Animation";
Blockly.Msg.DISPLAY_CHARACTER = "Zeichen";
Blockly.Msg.DISPLAY_CLEAR = "Lösche Bildschirm";
Blockly.Msg.DISPLAY_CLEAR_TOOLTIP = "Löscht die Anzeige auf dem Bildschirm.";
Blockly.Msg.DISPLAY_COL = "in Spalte";
Blockly.Msg.DISPLAY_GET_BRIGHTNESS_TOOLTIP = "Gibt den Helligkeitswert aller LED's des Displays zurück. Bei 0 sind alle LED's aus, 9 ist der höchste Helligkeitswert.";
Blockly.Msg.DISPLAY_GET_PIXEL_TOOLTIP = "Gibt den Helligkeitswert der LED zurück. Bei 0 ist die LED aus, 9 ist der höchste Helligkeitswert.";
Blockly.Msg.DISPLAY_IMAGE = "Bild";
Blockly.Msg.DISPLAY_PICTURE = "Bild";
Blockly.Msg.DISPLAY_PICTURE_EYES_CLOSED = "Augen zu";
Blockly.Msg.DISPLAY_PICTURE_EYES_OPEN = "Augen auf";
Blockly.Msg.DISPLAY_PICTURE_FLOWERS = "Blumen";
Blockly.Msg.DISPLAY_PICTURE_GLASSES = "Brille";
Blockly.Msg.DISPLAY_PICTURE_TACHO = "Tacho";
Blockly.Msg.DISPLAY_PICTURE_TOOLTIP = "Zeigt ein Bild auf dem Bildschirm an.";
Blockly.Msg.DISPLAY_PIXEL_BRIGHTNESS = "Helligkeit";
Blockly.Msg.DISPLAY_PIXEL_TITLE = "LED";  // untranslated
Blockly.Msg.DISPLAY_ROW = "in Zeile";
Blockly.Msg.DISPLAY_SET_BRIGHTNESS_TOOLTIP = "Setzt den Helligkeitswert aller LED's des Displays. Bei 0 sind alle LED's aus, 9 ist der höchste Helligkeitswert.";
Blockly.Msg.DISPLAY_SET_PIXEL_TOOLTIP = "Setzt den Helligkeitswert der LED. Bei 0 ist die LED aus, 9 ist der höchste Helligkeitswert. Mit x und y kannst du die LED aus dem Display bestimmen, oben links z. B. ist x 0 und y 9.";
Blockly.Msg.DISPLAY_SHOW = "Zeige";
Blockly.Msg.DISPLAY_TEXT = "Text";
Blockly.Msg.DISPLAY_TEXT_TOOLTIP = "Zeigt einen Text auf dem Bildschirm an.";
Blockly.Msg.DROP_TOOLTIP = "Block für den Tropfensensor.";
Blockly.Msg.DUPLICATE_BLOCK = "Duplicate";  // untranslated
Blockly.Msg.ENABLE_BLOCK = "Enable Block";  // untranslated
Blockly.Msg.ENCODER_GETSAMPLE_TOOLTIP = "Gibt den aktuellen Wert des Drehsensors zurück.";
Blockly.Msg.ENCODER_RESET_TOOLTIP = "Setzt den Drehsensor zurück.";
Blockly.Msg.ENCODER_TOOLTIP = "Block für den Drehsensor.";
Blockly.Msg.ERROR_MISSING_PARAMETER = "Ein Eingabewert fehlt!";
Blockly.Msg.ERROR_MISSING_RETURN = "Der Funktionsrückgabewert fehlt!";
Blockly.Msg.EV3BRICK_TOOLTIP = "Block für den EV3 Stein mit den angeschlossenen Aktoren und Sensoren. Es gibt auch weitere eingebaute Aktoren und Sensoren, wie z. B. das Display, die Tasten ...";
Blockly.Msg.EXPAND_ALL = "Expand Blocks";  // untranslated
Blockly.Msg.EXPAND_BLOCK = "Expand Block";  // untranslated
Blockly.Msg.EXTERNAL_INPUTS = "External Inputs";  // untranslated
Blockly.Msg.FLAME_GETSAMPLE_TOOLTIP = "Gets the current reading from the flame sensor.";  // untranslated
Blockly.Msg.FLAME_TOOLTIP = "Block für den Flammensensor.";
Blockly.Msg.FLYOUT_VARIABLE_TEXT = "Du möchtest mit Variablen arbeiten? Erzeuge sie zuerst mit einem Klick auf das + Zeichen im »Startblock«.";
Blockly.Msg.FOR = "für";
Blockly.Msg.FOURDIGITDISPLAY = "4-Ziffern Display";
Blockly.Msg.FOURDIGITDISPLAY_CLEAR_TOOLTIP = "Löscht die Anzeige des Grove 4-Digit Display von Seeed.";
Blockly.Msg.FOURDIGITDISPLAY_SHOW_TOOLTIP = "Zeigt die Zahl [0-9999] auf dem Grove 4-Digit Display von Seeed an. Position [0-3] gibt dabei die Startposition der Zahl an. Das Display muss mit dem A1 (rechten) Grove Anschluss verbunden werden.";
Blockly.Msg.FROM_POSITION = "ab Position";
Blockly.Msg.FSR_TOOLTIP = "Get the current reading from the force sensitive resistor under the feet of the robot.";  // untranslated
Blockly.Msg.GALLERY_BY = "von";
Blockly.Msg.GALLERY_DATE = "erstellt";
Blockly.Msg.GALLERY_DISLIKE = "gefällt mir nicht mehr";
Blockly.Msg.GALLERY_LIKE = "gefällt mir";
Blockly.Msg.GALLERY_SHARED_ALREADY = "Dieses Programm hast du bereits in die Gallerie hochgeladen. Wenn du es ändern willst, ändere die Kopie der Gallerie. Du kannst das Programm auch wieder aus der Gallerie herausnehmen indem du die Kopie von der Gallerie löscht.";
Blockly.Msg.GEARED_MOTOR = "Getriebemotor";
Blockly.Msg.GET = "gib";
Blockly.Msg.GETSAMPLE_TOOLTIP = "Gibt den aktuellen Wert des ausgewählten Sensors zurück.";
Blockly.Msg.GET_CODE_TOOLTIP = "Gibt den gelöteten Binär-Code des Kopfes zurück. Der Wert ist zwischen 0 und 31.";
Blockly.Msg.GO_TO_GROUPS = "Zu den Gruppen gehen";
Blockly.Msg.GYRO_GETSAMPLE_TOOLTIP = "Gibt den aktuellen Wert des Kreiselensors zurück.";
Blockly.Msg.GYRO_RESET_TOOLTIP = "Setzt den Kreiselensor zurück.";
Blockly.Msg.GYRO_TOOLTIP = "Block für den Kreiselsensor.";
Blockly.Msg.GYRO_TOOLTIP_WEDO = "Block für den Neigungssensor.";
Blockly.Msg.HELP = "Help";  // untranslated
Blockly.Msg.HINT_USER_ACCOUNT = "»IchBinBotman« oder »RobellaStracciatella«? Deinen richtigen Namen muss nicht jeder kennen. Denk dir lieber einen Spitznamen aus, an den du dich gut erinnern kannst!";
Blockly.Msg.HINT_USER_AGE = "Bist du jünger als 16 Jahre? Dann bitte deine Eltern, dir zu helfen. Sie können oben ihre E-Mail-Adresse zur Bestätigung deines Kontos angeben.";
Blockly.Msg.HINT_USER_EMAIL = "Diese Angabe ist freiwillig! Einige Funktionen sind aber nur mit E-Mail möglich. Du bist unter 16 Jahre alt? Dann bitte deine Eltern, dir bei der Anmeldung zu helfen, und gib ihre Mail-Adresse ein. <br><a href='https://www.roberta-home.de/index.php?id=138' target='_blank'>Mehr Infos ...</a>";
Blockly.Msg.HINT_USER_NAME = "In diesem Feld kannst du deinen richtigen Namen eintragen, aber nur wenn du möchtest. Dieser Name wird nur dir angezeigt, z. B. wenn das Lab dich begrüßt.";
Blockly.Msg.HINT_USER_PASSWORT = "12345 ist kein gutes Passwort ,-)! Such dir lieber eine sichere Kombination aus Zahlen und Buchstaben aus, die du gut behalten kannst! Es muss mindestens sechs Zeichen lang sein!";
Blockly.Msg.HINT_USER_PASSWORT_CONFIRM = "Alles richtig geschrieben? Gib dein Passwort vorsichtshalber nochmal ein.";
Blockly.Msg.HUMIDITY_TOOLTIP = "Block für den Luftfeuchtigkeitsensor.";
Blockly.Msg.ICON_BLOCKING_TOOLTIP = "Blockierender Block! Dieser Block benötigt einige Zeit um ausgeführt zu werden. Andere Blöcke müssen warten, bis dieser Block die Kontrolle an die aufrufende Funktion zurückgibt.";
Blockly.Msg.ID = "ID";
Blockly.Msg.IF_TOOLTIP = "Prüft die Bedingung in wenn. Falls die Bedingung wahr ist, führt die dann-Aktion aus.";
Blockly.Msg.IMAGE_GET_TOOLTIP = "Gibt das ausgewählte Bild zurück.";
Blockly.Msg.IMAGE_GET_TOOLTIP_ANGRY = "böse";
Blockly.Msg.IMAGE_GET_TOOLTIP_ASLEEP = "schlafend";
Blockly.Msg.IMAGE_GET_TOOLTIP_BUTTERFLY = "Schmetterling";
Blockly.Msg.IMAGE_GET_TOOLTIP_CHESSBOARD = "Schachbrett";
Blockly.Msg.IMAGE_GET_TOOLTIP_CONFUSED = "verwirrt";
Blockly.Msg.IMAGE_GET_TOOLTIP_COW = "Kuh";
Blockly.Msg.IMAGE_GET_TOOLTIP_DIAMOND = "Diamant";
Blockly.Msg.IMAGE_GET_TOOLTIP_DIAMOND_SMALL = "kleiner Diamant";
Blockly.Msg.IMAGE_GET_TOOLTIP_DUCK = "Ente";
Blockly.Msg.IMAGE_GET_TOOLTIP_FABULOUS = "toll";
Blockly.Msg.IMAGE_GET_TOOLTIP_GHOST = "Geist";
Blockly.Msg.IMAGE_GET_TOOLTIP_GIRAFFE = "Giraffe";
Blockly.Msg.IMAGE_GET_TOOLTIP_HEART = "Herz";
Blockly.Msg.IMAGE_GET_TOOLTIP_HEART_SMALL = "kleines Herz";
Blockly.Msg.IMAGE_GET_TOOLTIP_HOUSE = "haus";
Blockly.Msg.IMAGE_GET_TOOLTIP_MEH = "egal!";
Blockly.Msg.IMAGE_GET_TOOLTIP_MUSIC_CROTCHET = "music crotchet";
Blockly.Msg.IMAGE_GET_TOOLTIP_MUSIC_QUAVER = "music quaver";
Blockly.Msg.IMAGE_GET_TOOLTIP_MUSIC_QUAVERS = "music quavers";
Blockly.Msg.IMAGE_GET_TOOLTIP_NO = "nein";
Blockly.Msg.IMAGE_GET_TOOLTIP_PACMAN = "Pacman";
Blockly.Msg.IMAGE_GET_TOOLTIP_PITCHFORK = "Mistgabel";
Blockly.Msg.IMAGE_GET_TOOLTIP_RABBIT = "Kaninchen";
Blockly.Msg.IMAGE_GET_TOOLTIP_ROLLERSKATE = "Rollschuh";
Blockly.Msg.IMAGE_GET_TOOLTIP_SAD = "traurig";
Blockly.Msg.IMAGE_GET_TOOLTIP_SILLY = "verrückt";
Blockly.Msg.IMAGE_GET_TOOLTIP_SKULL = "Schädel";
Blockly.Msg.IMAGE_GET_TOOLTIP_SMILE = "Lächeln";
Blockly.Msg.IMAGE_GET_TOOLTIP_SNAKE = "Schnecke";
Blockly.Msg.IMAGE_GET_TOOLTIP_SQUARE = "Quadrat";
Blockly.Msg.IMAGE_GET_TOOLTIP_SQUARE_SMALL = "kleines Quadrat";
Blockly.Msg.IMAGE_GET_TOOLTIP_STICKFIGURE = "Strichmännchen";
Blockly.Msg.IMAGE_GET_TOOLTIP_SWORD = "Schwert";
Blockly.Msg.IMAGE_GET_TOOLTIP_TARGET = "Zielscheibe";
Blockly.Msg.IMAGE_GET_TOOLTIP_TORTOISE = "Schildkröte";
Blockly.Msg.IMAGE_GET_TOOLTIP_TRIANGLE = "Dreieck";
Blockly.Msg.IMAGE_GET_TOOLTIP_TRIANGLE_LEFT = "Dreieck links";
Blockly.Msg.IMAGE_GET_TOOLTIP_TSHIRT = "T-shirt";
Blockly.Msg.IMAGE_GET_TOOLTIP_UMBRELLA = "Regenschirm";
Blockly.Msg.IMAGE_GET_TOOLTIP_XMAS = "Weihnachtsbaum";
Blockly.Msg.IMAGE_GET_TOOLTIP_YES = "ja";
Blockly.Msg.IMAGE_INVERT = "invertiere";
Blockly.Msg.IMAGE_INVERT_TOOLTIP = "Invertiert das Bild. Pixel mit dem Wert 0 oder Leerzeichen werden auf # oder 9 gesetzt. Pixel mit dem Wert # oder 9 werden auf 0 bzw. Leerzeichen gesetzt.";
Blockly.Msg.IMAGE_SHIFT = "verschiebe";
Blockly.Msg.IMAGE_SHIFT_TOOLTIP = "Verschiebt das Bild in die angegebene Richtung um die angegebene Anzahl von Pixeln.";
Blockly.Msg.IMAGE_TOOLTIP = "Erstellt ein neues Bild für das Display. Setze den Helligkeitswert für jedes Pixel einzeln: 0 oder leer bedeutet die entsprechende LED ist aus, 1 bedeutet sie leuchtet ein bisschen und 9 oder # bedeutet sie leuchtet so hell wie es geht.";
Blockly.Msg.INFO_DOCUMENTATION_HINT = "Beschreibe dein Programm hier ...";
Blockly.Msg.INFO_TAGS = "Tags";
Blockly.Msg.INFRARED_DISTANCE_GETSAMPLE_TOOLTIP = "Gibt die relative Entfernung in cm vom Infrarotsensor zurück. Die Werte können zwischen 1 und 75 cm liegen.";
Blockly.Msg.INFRARED_GETSAMPLE_TOOLTIP = "Gibt den aktuellen Wert des Infrarotsensors zurück.";
Blockly.Msg.INFRARED_GETSAMPLE_TOOLTIP_MBOT = "Gibt den aktuellen Wert des Lichtsensors zurück, ob es eine schwarze Linie gibt (wahr/falsch).";
Blockly.Msg.INFRARED_PRESENCE_GETSAMPLE_TOOLTIP = "Gibt eine Liste von Werten des Infrarotsensors zurück, wenn ein Beacon anwesend ist.";
Blockly.Msg.INFRARED_TOOLTIP = "Block für den Infrarotsensor.";
Blockly.Msg.INIT_FAIL_HTTPSESSION_EXPECTED_BUT_NOT_FOUND = "Die Verbindung zum openroberta-lab wurde unerwartet beendet. Dies ist sehr selten und kann passieren, wenn der openroberta-lab-Server neu gestartet wird. Bitte verbinde dich komplett neu mit dem openroberta-lab, z.B. durch Beenden und Neustarten des Browser oder über den »reload«-Button.";
Blockly.Msg.INIT_FAIL_MULTIPLE_FRONTENDS_ONE_HTTPSESSION = "Du versuchst dich mehrfach mit dem openroberta-lab zu verbinden, z.B. über mehrere Tabs. Das unterstützen wir zur Zeit nicht. Bitte schließe diese Ansicht.";
Blockly.Msg.INLINE_INPUTS = "Inline Inputs";  // untranslated
Blockly.Msg.INPUT = "Eingang";
Blockly.Msg.INTERNAL_PORT = "innere";
Blockly.Msg.IRSEEKER_TOOLTIP = "Block für den HiTechnic NXT IRSeeker V2 Sensor.";
Blockly.Msg.JOYSTICK_GETSAMPLE_TOOLTIP = "Gets the current reading of one of the axises of the joystick";
Blockly.Msg.KEY_ISPRESSED_TOOLTIP = "Ist die ausgewählte Taste gedrückt?";
Blockly.Msg.KEY_TOOLTIP = "Block für die Taste.";
Blockly.Msg.LANGUAGE = "Sprache";
Blockly.Msg.LANGUAGE_ARABIC = "Arabisch";
Blockly.Msg.LANGUAGE_BRAZILIAN = "Brasilianisch";
Blockly.Msg.LANGUAGE_CHINESE = "Chinesisch";
Blockly.Msg.LANGUAGE_CZECH = "Tschechisch";
Blockly.Msg.LANGUAGE_DANISH = "Dänisch";
Blockly.Msg.LANGUAGE_DUTCH = "Niederländisch";
Blockly.Msg.LANGUAGE_ENGLISH = "Englisch";
Blockly.Msg.LANGUAGE_FINNISH = "Finnisch";
Blockly.Msg.LANGUAGE_FRENCH = "Französisch";
Blockly.Msg.LANGUAGE_GERMAN = "Deutsch";
Blockly.Msg.LANGUAGE_GREEK = "Griechisch";
Blockly.Msg.LANGUAGE_ITALIAN = "Italienisch";
Blockly.Msg.LANGUAGE_JAPANESE = "Japanisch";
Blockly.Msg.LANGUAGE_KOREAN = "Koreanisch";
Blockly.Msg.LANGUAGE_NORWEGIAN = "Norwegisch";
Blockly.Msg.LANGUAGE_POLISH = "Polnisch";
Blockly.Msg.LANGUAGE_PORTUGUESE = "Portugiesisch";
Blockly.Msg.LANGUAGE_RUSSIAN = "Russisch";
Blockly.Msg.LANGUAGE_SPANISH = "Spanisch";
Blockly.Msg.LANGUAGE_SWEDISH = "Schwedisch";
Blockly.Msg.LANGUAGE_TURKISH = "Türkisch";
Blockly.Msg.LCDI2C_TOOLTIP = "Block für den LCD Bildschirm mit angelötetem I²C Modul.";
Blockly.Msg.LCD_TOOLTIP = "Block für den LCD Bildschirm.";
Blockly.Msg.LED = "LED";
Blockly.Msg.LEDBAR = "LED Leiste";
Blockly.Msg.LEDBAR_SET_TOOLTIP = "Setzt die angegebene LED [0-9] auf der Grove LED Bar v2.0 von Seeed auf die gewünschte Helligkeit [0-8]. Die LED Leiste muss mit dem A1 (rechten) Grove Anschluss verbunden werden.";
Blockly.Msg.LED_MATRIX = "LED Matrix";
Blockly.Msg.LED_OFF = "Schalte LED aus";
Blockly.Msg.LED_OFF_TOOLTIP = "Schaltet die LED aus.";
Blockly.Msg.LED_ON = "Schalte LED an";
Blockly.Msg.LED_ON_TOOLTIP = "Schaltet die LED an und wechselt zur angegebenen Farbe.";
Blockly.Msg.LED_ON_TOOLTIP_CB = "Schaltet die LED an und wechselt zur angegebenen Farbe. Achtung: calli:Bot hat nur 7 Farben, die naheliegenste wird ausgewählt.";
Blockly.Msg.LED_ON_WHITE_TOOLTIP = "Schaltet die LED an. Achtung, sehr hell!";
Blockly.Msg.LED_TOOLTIP = "Block für den LED.";
Blockly.Msg.LEFT = "links";
Blockly.Msg.LIGHT_ARDU_TOOLTIP = "Block, der für insgesamt 8 Lichtsensoren steht.";
Blockly.Msg.LIGHT_GETSAMPLE_TOOLTIP = "Gibt den aktuellen Wert des Lichtsensors in Prozent zurück.";
Blockly.Msg.LIGHT_TOOLTIP = "Block für den Lichtsensor.";
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "create empty list";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Returns a list, of length 0, containing no data records";  // untranslated
Blockly.Msg.LISTS_CREATE_TITLE = "Liste";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "list";  // untranslated
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Add, remove, or reorder sections to reconfigure this list block.";  // untranslated
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "create list with";  // untranslated
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Add an item to the list.";  // untranslated
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Create a list with any number of items.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_FIRST = "first";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# from end";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_GET = "get";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "get and remove";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_LAST = "last";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "random";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "remove";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Returns the first item in a list.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Returns the item at the specified position in a list. #1 is the last item.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Returns the item at the specified position in a list. #1 is the first item.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Returns the last item in a list.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Returns a random item in a list.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Removes and returns the first item in a list.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Removes and returns the item at the specified position in a list. #1 is the last item.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Removes and returns the item at the specified position in a list. #1 is the first item.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Removes and returns the last item in a list.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Removes and returns a random item in a list.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Removes the first item in a list.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Removes the item at the specified position in a list. #1 is the last item.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Removes the item at the specified position in a list. #1 is the first item.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Removes the last item in a list.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Removes a random item in a list.";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "to # from end";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "to #";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "to last";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "get sub-list from first";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "get sub-list from # from end";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "get sub-list from #";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Creates a copy of the specified portion of a list.";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_FIRST = "find first occurrence of item";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_LAST = "find last occurrence of item";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Returns the index of the first/last occurrence of the item in the list. Returns -1 if item is not found.";  // untranslated
Blockly.Msg.LISTS_INLIST = "in list";  // untranslated
Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 is empty";  // untranslated
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Returns true if the list is empty.";  // untranslated
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg.LISTS_LENGTH_TITLE = "length of %1";  // untranslated
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Returns the length of a list.";  // untranslated
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_REPEAT_TITLE = "create list with item %1 repeated %2 times";  // untranslated
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Creates a list consisting of the given value repeated the specified number of times.";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "as";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INSERT = "insert at";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_SET = "set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Inserts the item at the start of a list.";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Inserts the item at the specified position in a list. #1 is the last item.";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Inserts the item at the specified position in a list. #1 is the first item.";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Append the item to the end of a list.";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Inserts the item randomly in a list.";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Sets the first item in a list.";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Sets the item at the specified position in a list. #1 is the last item.";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Sets the item at the specified position in a list. #1 is the first item.";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Sets the last item in a list.";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Sets a random item in a list.";  // untranslated
Blockly.Msg.LISTS_SORT_HELPURL = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";  // untranslated
Blockly.Msg.LISTS_SORT_ORDER_ASCENDING = "ascending";  // untranslated
Blockly.Msg.LISTS_SORT_ORDER_DESCENDING = "descending";  // untranslated
Blockly.Msg.LISTS_SORT_TITLE = "sort %1 %2 %3";  // untranslated
Blockly.Msg.LISTS_SORT_TOOLTIP = "Sort a copy of a list.";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE = "alphabetic, ignore case";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = "numeric";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_TEXT = "alphabetic";  // untranslated
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "make list from text";  // untranslated
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "make text from list";  // untranslated
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Join a list of texts into one text, separated by a delimiter.";  // untranslated
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Split text into a list of texts, breaking at each delimiter.";  // untranslated
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "with delimiter";  // untranslated
Blockly.Msg.LIST_BACK_TOOLTIP = "Zurück zur vorherigen Auswahl.";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "false";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Returns either true or false.";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "true";  // untranslated
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";  // untranslated
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Return true if both inputs equal each other.";  // untranslated
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Return true if the first input is greater than the second input.";  // untranslated
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Return true if the first input is greater than or equal to the second input.";  // untranslated
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Return true if the first input is smaller than the second input.";  // untranslated
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Return true if the first input is smaller than or equal to the second input.";  // untranslated
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Return true if both inputs are not equal to each other.";  // untranslated
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "not %1";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Returns true if the input is false. Returns false if the input is true.";  // untranslated
Blockly.Msg.LOGIC_NULL = "null";  // untranslated
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Returns null.";  // untranslated
Blockly.Msg.LOGIC_OPERATION_AND = "and";  // untranslated
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "or";  // untranslated
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Return true if both inputs are true.";  // untranslated
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Return true if at least one of the inputs is true.";  // untranslated
Blockly.Msg.LOGIC_TERNARY_CONDITION = "test";  // untranslated
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "if false";  // untranslated
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "if true";  // untranslated
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Check the condition in 'test'. If the condition is true, returns the 'if true' value; otherwise returns the 'if false' value.";  // untranslated
Blockly.Msg.LOOP = "Wiederhole bis";
Blockly.Msg.LOOPFOREVER_TOOLTIP = "Wiederholt unendlich oft die Aktion.";
Blockly.Msg.LOOP_FOREVER = "Wiederhole unendlich oft";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://en.wikipedia.org/wiki/Arithmetic";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Return the sum of the two numbers.";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Return the quotient of the two numbers.";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Return the difference of the two numbers.";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Return the product of the two numbers.";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Return the first number raised to the power of the second number.";  // untranslated
Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";  // untranslated
Blockly.Msg.MATH_CHANGE_TITLE = "change %1 by %2";  // untranslated
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Add a number to variable '%1'.";  // untranslated
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://en.wikipedia.org/wiki/Mathematical_constant";  // untranslated
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Return one of the common constants: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (infinity).";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TITLE = "constrain %1 low %2 high %3";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Constrain a number to be between the specified limits (inclusive).";  // untranslated
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";  // untranslated
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "is divisible by";  // untranslated
Blockly.Msg.MATH_IS_EVEN = "is even";  // untranslated
Blockly.Msg.MATH_IS_NEGATIVE = "is negative";  // untranslated
Blockly.Msg.MATH_IS_ODD = "is odd";  // untranslated
Blockly.Msg.MATH_IS_POSITIVE = "is positive";  // untranslated
Blockly.Msg.MATH_IS_PRIME = "is prime";  // untranslated
Blockly.Msg.MATH_IS_TOOLTIP = "Check if a number is an even, odd, prime, whole, positive, negative, or if it is divisible by certain number. Returns true or false.";  // untranslated
Blockly.Msg.MATH_IS_WHOLE = "is whole";  // untranslated
Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";  // untranslated
Blockly.Msg.MATH_MODULO_TITLE = "remainder of %1 ÷ %2";  // untranslated
Blockly.Msg.MATH_MODULO_TOOLTIP = "Return the remainder from dividing the two numbers.";  // untranslated
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";  // untranslated
Blockly.Msg.MATH_NUMBER_HELPURL = "https://en.wikipedia.org/wiki/Number";  // untranslated
Blockly.Msg.MATH_NUMBER_TOOLTIP = "A number.";  // untranslated
Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "average of list";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "max of list";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "median of list";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "min of list";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "modes of list";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "random item of list";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "standard deviation of list";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "sum of list";  // untranslated
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Return the average (arithmetic mean) of the numeric values in the list.";  // untranslated
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Return the largest number in the list.";  // untranslated
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Return the median number in the list.";  // untranslated
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Return the smallest number in the list.";  // untranslated
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Return a list of the most common item(s) in the list.";  // untranslated
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Return a random element from the list.";  // untranslated
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Return the standard deviation of the list.";  // untranslated
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Return the sum of all the numbers in the list.";  // untranslated
Blockly.Msg.MATH_POWER_SYMBOL = "^";  // untranslated
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";  // untranslated
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "random fraction";  // untranslated
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Return a random fraction between 0.0 (inclusive) and 1.0 (exclusive).";  // untranslated
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";  // untranslated
Blockly.Msg.MATH_RANDOM_INT_TITLE = "random integer from %1 to %2";  // untranslated
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Return a random integer between the two specified limits, inclusive.";  // untranslated
Blockly.Msg.MATH_ROUND_HELPURL = "https://en.wikipedia.org/wiki/Rounding";  // untranslated
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "round";  // untranslated
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "round down";  // untranslated
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "round up";  // untranslated
Blockly.Msg.MATH_ROUND_TOOLTIP = "Round a number up or down.";  // untranslated
Blockly.Msg.MATH_SINGLE_HELPURL = "https://en.wikipedia.org/wiki/Square_root";  // untranslated
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "absolute";  // untranslated
Blockly.Msg.MATH_SINGLE_OP_ROOT = "square root";  // untranslated
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Return the absolute value of a number.";  // untranslated
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Return e to the power of a number.";  // untranslated
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Return the natural logarithm of a number.";  // untranslated
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Return the base 10 logarithm of a number.";  // untranslated
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Return the negation of a number.";  // untranslated
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Return 10 to the power of a number.";  // untranslated
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Return the square root of a number.";  // untranslated
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";  // untranslated
Blockly.Msg.MATH_TRIG_ACOS = "acos";  // untranslated
Blockly.Msg.MATH_TRIG_ASIN = "asin";  // untranslated
Blockly.Msg.MATH_TRIG_ATAN = "atan";  // untranslated
Blockly.Msg.MATH_TRIG_COS = "cos";  // untranslated
Blockly.Msg.MATH_TRIG_HELPURL = "https://en.wikipedia.org/wiki/Trigonometric_functions";  // untranslated
Blockly.Msg.MATH_TRIG_SIN = "sin";  // untranslated
Blockly.Msg.MATH_TRIG_TAN = "tan";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Return the arccosine of a number.";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Return the arcsine of a number.";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Return the arctangent of a number.";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Return the cosine of a degree (not radian).";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Return the sine of a degree (not radian).";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Return the tangent of a degree (not radian).";  // untranslated
Blockly.Msg.ME = "Me";  // untranslated
Blockly.Msg.MENU_ABOUT = "Über das Open Roberta Lab";
Blockly.Msg.MENU_ABOUT_PROJECT = "Über das Open Roberta Projekt";
Blockly.Msg.MENU_ATTACH = "anhängen ...";
Blockly.Msg.MENU_BEGINNER = "Anfänger";
Blockly.Msg.MENU_CHANGE = "ändern ...";
Blockly.Msg.MENU_CHECK = "check";
Blockly.Msg.MENU_CODE_DOWNLOAD_TOOLTIP = "Lade den Quellcode auf deinen Computer herunter.";
Blockly.Msg.MENU_CODE_REFRESH_TOOLTIP = "Aktualisiere den Quellcode, wenn du an den Programmierblöcken etwas geändert hast.";
Blockly.Msg.MENU_CONNECT = "verbinden ...";
Blockly.Msg.MENU_CREATE_LINK = "erstelle Programmlink  ...";
Blockly.Msg.MENU_DELETE_USER = "Benutzer löschen ...";
Blockly.Msg.MENU_EDIT = "Bearbeiten";
Blockly.Msg.MENU_EDIT_TOOLTIP = "Bearbeiten";
Blockly.Msg.MENU_EV3 = "Roboter vorbereiten";
Blockly.Msg.MENU_EXPERT = "Experte";
Blockly.Msg.MENU_EXPORT_PROG = "exportiere Programm";
Blockly.Msg.MENU_FAQ = "FAQ";
Blockly.Msg.MENU_GALLERY = "Galerie";
Blockly.Msg.MENU_GALLERY_TOOLTIP = "Galerie";
Blockly.Msg.MENU_GENERAL = "Allgemeine Hilfe";
Blockly.Msg.MENU_HELP = "Hilfe";
Blockly.Msg.MENU_HELP_TOOLTIP = "Hilfe";
Blockly.Msg.MENU_IMPORT_PROG = "importiere Programm ...";
Blockly.Msg.MENU_LANGUAGE = "Sprachen";
Blockly.Msg.MENU_LANGUAGE_TOOLTIP = "Spachauswahl";
Blockly.Msg.MENU_LIST = "Liste ...";
Blockly.Msg.MENU_LIST_CONF = "meine Roboterkonfigurationen ...";
Blockly.Msg.MENU_LIST_PROG = "meine Programme ...";
Blockly.Msg.MENU_LIST_PROG_EXAMPLES = "Beispielprogramme ...";
Blockly.Msg.MENU_LOGGING = "Logging";
Blockly.Msg.MENU_LOG_IN = "anmelden ...";
Blockly.Msg.MENU_LOG_OUT = "abmelden";
Blockly.Msg.MENU_MESSAGE_DOWNLOAD = "Dein Programm wurde gerade heruntergeladen";
Blockly.Msg.MENU_NEW = "neu";
Blockly.Msg.MENU_PROGRAMMING = "Programmieren mit NEPO";
Blockly.Msg.MENU_PROPERTIES = "Eigenschaften";
Blockly.Msg.MENU_RIGHT_CODE_TOOLTIP = "Öffne/schließe die Ansicht des Quellcodes.";
Blockly.Msg.MENU_RIGHT_HELP_TOOLTIP = "Öffne/schließe die Hilfeansicht.";
Blockly.Msg.MENU_RIGHT_INFO_TOOLTIP = "Öffne/schließe die Beschreibungsansicht deines Programmes.";
Blockly.Msg.MENU_RIGHT_SIM_TOOLTIP = "Open/close the simulation view.";  // untranslated
Blockly.Msg.MENU_RIGHT_TUTORIAL_TOOLTIP = "Öffne/schließe die Ansicht des Tutorials.";
Blockly.Msg.MENU_ROBOT = "Roboter";
Blockly.Msg.MENU_ROBOT_STATE_INFO = "Info";
Blockly.Msg.MENU_ROBOT_STATE_TOOLTIP = "Roboter Infos";
Blockly.Msg.MENU_ROBOT_STOP_HINT_EV3 = "Drücke die<span class='typcn typcn-media-stop'></span>+<span class='typcn typcn-arrow-sorted-down'></span> Tasten am Roboter um das Programm zu beenden!";
Blockly.Msg.MENU_ROBOT_STOP_HINT_NXT = "Drücke die<span class='typcn typcn-media-cancel'></span>Taste am Roboter um das Programm zu beenden!";
Blockly.Msg.MENU_ROBOT_TOOLTIP = "Roboter";
Blockly.Msg.MENU_ROBOT_WLAN = "WLAN Zugangsdaten ...";
Blockly.Msg.MENU_RUN_MULT_SIM = "mehrere Roboter simulieren ...";
Blockly.Msg.MENU_SAVE = "speichern";
Blockly.Msg.MENU_SAVE_AS = "speichern unter ...";
Blockly.Msg.MENU_SHOW_AGAIN = "Starthinweis anzeigen";
Blockly.Msg.MENU_SHOW_CODE = "zeige Quellcode";
Blockly.Msg.MENU_SIM_BACK = "Zurück";
Blockly.Msg.MENU_SIM_DRAW = "Zeichnen Umgebung";
Blockly.Msg.MENU_SIM_IMPORT_TOOLTIP = "Lade dein eigenes Hintergrundbild hoch, es wird am Ende der Liste der Roboterumgebungen gespeichert.";
Blockly.Msg.MENU_SIM_MATH = "Koordinaten Umgebung";
Blockly.Msg.MENU_SIM_POSE_TOOLTIP = "Verschiebe den Roberta wieder an die Ausgangsposition.";
Blockly.Msg.MENU_SIM_RESCUE = "Rescue Umgebung";
Blockly.Msg.MENU_SIM_ROBERTA = "Roberta Umgebung";
Blockly.Msg.MENU_SIM_ROBOT_TOOLTIP = "Öffne/schließe die Ansicht deines Systems.";
Blockly.Msg.MENU_SIM_SCENE_TOOLTIP = "Wechsle die Umgebung.";
Blockly.Msg.MENU_SIM_SIMPLE = "Einfache Umgebung";
Blockly.Msg.MENU_SIM_START_TOOLTIP = "Starte dein Programm in der Simulation.";
Blockly.Msg.MENU_SIM_STOP = "Stop";
Blockly.Msg.MENU_SIM_STOP_TOOLTIP = "Stoppe das Programm in der Simulation.";
Blockly.Msg.MENU_SIM_VALUES_TOOLTIP = "Öffne/schließe die Ansicht der Sensordaten.";
Blockly.Msg.MENU_SIM_WRO = "World Robot Olympiad Umgebung.";
Blockly.Msg.MENU_START_BRICK = "starte auf »$«";
Blockly.Msg.MENU_START_SIM = "öffne/schließe die Simulation";
Blockly.Msg.MENU_STATE_INFO = "Statusinformationen";
Blockly.Msg.MENU_STOP_BRICK = "stoppe Program auf »$«";
Blockly.Msg.MENU_TOOLBOX = "NEPO-Blöcke";
Blockly.Msg.MENU_TOOLBOX_BEGINNER = "NEPO-Blöcke Anfänger";
Blockly.Msg.MENU_TOOLBOX_EXPERT = "NEPO-Blöcke Experte";
Blockly.Msg.MENU_TUTORIAL = "Tutorials";
Blockly.Msg.MENU_TUTORIAL_TOOLTIP = "Tutorials";
Blockly.Msg.MENU_USER = "Anmelden";
Blockly.Msg.MENU_USER_STATE_TOOLTIP = "Benutzer Infos";
Blockly.Msg.MENU_USER_TOOLTIP = "Benutzer";
Blockly.Msg.MENU_WLAN_CREDENTIALS = "WLAN Zugangsdaten";
Blockly.Msg.MENU_ZOOM = "zoomen";
Blockly.Msg.MENU_ZOOM_IN = "vergrößern";
Blockly.Msg.MENU_ZOOM_OUT = "verkleinern";
Blockly.Msg.MENU_ZOOM_RESET = "zurücksezten";
Blockly.Msg.MESSAGE_ADDED_USER = "Der nutzer »$« wurde hinzufügt";
Blockly.Msg.MESSAGE_CONFIGURATION_DELETED = "Du hast die Roboterkonfiguration »$« gelöscht.";
Blockly.Msg.MESSAGE_EDIT_CHECK = "Dein Programm wird nun überprüft!";
Blockly.Msg.MESSAGE_EDIT_SAVE_CONFIGURATION = "Deine Konfiguration »$« wurde gespeichert!";
Blockly.Msg.MESSAGE_EDIT_SAVE_CONFIGURATION_AS = "Deine Konfiguration wurde als »$« gespeichert!";
Blockly.Msg.MESSAGE_EDIT_SAVE_GROUP_AS = "Die Gruppe wurde angelegt";
Blockly.Msg.MESSAGE_EDIT_SAVE_PROGRAM = "Dein Programm »$« wurde gespeichert!";
Blockly.Msg.MESSAGE_EDIT_SAVE_PROGRAM_AS = "Dein Programm wurde als »$« gespeichert!";
Blockly.Msg.MESSAGE_EDIT_START = "Dein Programm »$« startet gleich auf dem Roboter!";
Blockly.Msg.MESSAGE_FIRMWARE_ERROR = "Die Firmware deines Roboters ist neuer als die des Open Roberta Labs. Bitte melde dem Betreiber deines Servers, dass der Server geupdated werden muss.";
Blockly.Msg.MESSAGE_GROUP_DELETED = "Die Groupe »$« wurde gelöscht";
Blockly.Msg.MESSAGE_INVALID_CONF_NAME = "Der Name kann nur aus Buchstaben und Zahlen bestehen. Wichtig ist auch, dass ein Buchstabe an erster Stelle steht und der Standardname »[Roboter]basis« nicht verwendet wird. Versuche es nochmal.";
Blockly.Msg.MESSAGE_INVALID_NAME = "Der Name kann nur aus Buchstaben und Zahlen bestehen. Wichtig ist auch, dass ein Buchstabe an erster Stelle steht. Versuche es nochmal.";
Blockly.Msg.MESSAGE_NOT_AVAILABLE = "Diese Funktion gibt es leider noch nicht.";
Blockly.Msg.MESSAGE_PROGRAM_DELETED = "Du hast das Programm »$« gelöscht.";
Blockly.Msg.MESSAGE_RESTART_ROBOT = "Bitte verbinde deinen Roboter erneut mit dem Open Roberta Lab.";
Blockly.Msg.MESSAGE_ROBOT_CONNECTED = "Dein Roboter »$« ist jetzt verbunden!";
Blockly.Msg.MESSAGE_ROBOT_DISCONNECTED = "An active robot was disconnected";  // untranslated
Blockly.Msg.MESSAGE_USER_DELETED = "Du hast dein Benutzerkonto »$« gelöscht. Hoffentlich kommst du bald wieder!";
Blockly.Msg.MESSAGE_USER_GROUP_DELETED = "Der Nutzer »$« wurde gelöschts";
Blockly.Msg.MESSAGE_USER_LOGIN = "Hallo »$«!";
Blockly.Msg.MESSAGE_USER_LOGOUT = "Du bist nun nicht mehr angemeldet!";
Blockly.Msg.MICROBITBRICK_TOOLTIP = "Block für micro:bit, einen Mini-Computer. Es gibt auch weitere eingebaute Aktoren und Sensoren, wie z. B. das Display, die Tasten ...";
Blockly.Msg.MICROPHONE_GETSAMPLE_TOOLTIP = "Gibt die aktuellen Lautstärke des Mikrofons in % zurück (0-100). Sollte bei deinem Calliope der Wert immer sehr niedrig sein, fehlt hardwareseitig die Verstärkung. Multipliziere den gemessenen Wert dann einfach mit 10.";
Blockly.Msg.MODE = "Modus";
Blockly.Msg.MODE_ACCELERATION = "Beschleunigung";
Blockly.Msg.MODE_AMBIENTLIGHT = "Umgebungslicht";
Blockly.Msg.MODE_ANALOG = "analogen Wert";
Blockly.Msg.MODE_ANGLE = "Winkel";
Blockly.Msg.MODE_CLOSE = "schließen";
Blockly.Msg.MODE_COLOUR = "Farbe";
Blockly.Msg.MODE_COMPASS = "Kompass";
Blockly.Msg.MODE_CURRENT = "current";  // untranslated
Blockly.Msg.MODE_DEGREE = "Grad";
Blockly.Msg.MODE_DIGITAL = "digitalen Wert";
Blockly.Msg.MODE_DISTANCE = "Abstand";
Blockly.Msg.MODE_HUMIDITY = "Luftfeuchtigkeit";
Blockly.Msg.MODE_IDALL = "IDs (Liste)";
Blockly.Msg.MODE_IDONE = "ID";
Blockly.Msg.MODE_INFO = "Informationen";
Blockly.Msg.MODE_LIGHT = "Licht";
Blockly.Msg.MODE_LINE = "Linie";
Blockly.Msg.MODE_MODULATED = "Moduliert";
Blockly.Msg.MODE_MOISTURE = "moisture";  // untranslated
Blockly.Msg.MODE_NAMEALL = "Namen (Liste)";
Blockly.Msg.MODE_NAMEONE = "Name";
Blockly.Msg.MODE_OBSTACLE = "Hindernis";
Blockly.Msg.MODE_OPEN = "öffnen";
Blockly.Msg.MODE_ORIENTATION = "orientation";  // untranslated
Blockly.Msg.MODE_PRESENCE = "Anwesenheit";
Blockly.Msg.MODE_PRESSED = "gedrückt";
Blockly.Msg.MODE_PRESSURE = "Luftdruck";
Blockly.Msg.MODE_PULSEHIGH = "Pulszeit HIGH";
Blockly.Msg.MODE_PULSELOW = "Pulszeit LOW";
Blockly.Msg.MODE_RATE = "Drehrate";
Blockly.Msg.MODE_REFLEXION = "Reflektiertes licht";
Blockly.Msg.MODE_RGB = "RGB";  // untranslated
Blockly.Msg.MODE_ROTATION = "Umdrehungen";
Blockly.Msg.MODE_SENSOR1 = "Licht Sensor1";
Blockly.Msg.MODE_SENSOR2 = "Licht Sensor2";
Blockly.Msg.MODE_SOUND = "Geräusch";
Blockly.Msg.MODE_TEMPERATURE = "Temperatur";
Blockly.Msg.MODE_TILTED = "(geneigt)";
Blockly.Msg.MODE_UNMODULATED = "Unmoduliert";
Blockly.Msg.MODE_UVLIGHT = "UV Licht";
Blockly.Msg.MODE_VALUE = "Wert";
Blockly.Msg.MODE_WORD = "Wort";
Blockly.Msg.MODE_X = "X-Wert";
Blockly.Msg.MODE_Y = "Y-Wert";
Blockly.Msg.MODE_Z = "Z-Wert";
Blockly.Msg.MOISTURE_TOOLTIP = "Block für den Feuchtigkeitsensor.";
Blockly.Msg.MOTION_TOOLTIP = "Block für den Bewegungssensor.";
Blockly.Msg.MOTOR = "Motor";
Blockly.Msg.MOTORDIFF_ON_FOR_TOOLTIP = "Startet den Roboter mit einer bestimmten Geschwindigkeit und stoppt nach einer bestimmten Strecke.";
Blockly.Msg.MOTORDIFF_ON_TOOLTIP = "Startet den Roboter mit einer bestimmten Geschwindigkeit.";
Blockly.Msg.MOTORDIFF_STOP_TOOLTIP = "Stoppt den Roboter.";
Blockly.Msg.MOTORDIFF_TURN_FOR_TOOLTIP = "Dreht den Roboter um angegebene Grad.";
Blockly.Msg.MOTORDIFF_TURN_TOOLTIP = "Dreht den Roboter.";
Blockly.Msg.MOTORS_ON_TOOLTIP_CALLIOPE = "Startet Motor A und B mit einer bestimmten Leistung. Die Motoren drehen nur in eine Richtung mit einer Leistung von 0 - 100%.";
Blockly.Msg.MOTORS_ON_TOOLTIP_CALLIOPE_CB = "Startet beide Motoren mit einer bestimmten Leistung. Die Motoren drehen vorwärts mit einer Leistung von 0 - 100% oder rückwärts mit einer Leistung von 0 - -100%.";
Blockly.Msg.MOTORS_STOP_TOOLTIP = "Stops both motors, A and B.";  // untranslated
Blockly.Msg.MOTOR_ARDU_TOOLTIP = "Block a Bot'n Roll chassis motor.";
Blockly.Msg.MOTOR_BACKWARD = "rückwärts";
Blockly.Msg.MOTOR_BIG = "Großer";
Blockly.Msg.MOTOR_BIG_TOOLTIP = "Block für den großen Motor.";
Blockly.Msg.MOTOR_BRAKE = "bremsen";
Blockly.Msg.MOTOR_DEGREE = "Grad";
Blockly.Msg.MOTOR_DISTANCE = "Strecke cm";
Blockly.Msg.MOTOR_DRIVE = "Fahre";
Blockly.Msg.MOTOR_FLOAT = "auslaufen";
Blockly.Msg.MOTOR_FOREWARD = "vorwärts";
Blockly.Msg.MOTOR_GETPOWER_TOOLTIP = "Liefert aktuelle Leistung dieses Motors.";
Blockly.Msg.MOTOR_LEFT = "links";
Blockly.Msg.MOTOR_MIDDLE = "Mittlerer";
Blockly.Msg.MOTOR_MIDDLE_TOOLTIP = "Block für den mittleren Motor.";
Blockly.Msg.MOTOR_NONE = "keine";
Blockly.Msg.MOTOR_ON_FOR_TOOLTIP = "Startet den Motor und stoppt den Motor nach Ausführung von Drehungen (kompletten oder nach angegebenen Grad).";
Blockly.Msg.MOTOR_ON_FOR_TOOLTIP_MS = "Startet den Motor und stoppt den Motor nachdem die Zeit verstrichen ist.";
Blockly.Msg.MOTOR_ON_FOR_TOOLTIP_RPM = "Startet den Motor mit einer Geschwindigkeit in rpms (engl. revolutions per minute, „Umdrehungen pro Minute“ (UpM)) und stoppt den Motor nach Ausführung von Drehungen (kompletten oder nach angegebenen Grad).";
Blockly.Msg.MOTOR_ON_FOR_TOOLTIP_SERVO = "Setzt den Servomotor auf eine bestimmte Position in Grad.";
Blockly.Msg.MOTOR_ON_TOOLTIP = "Startet Motor mit einer bestimmten Leistung.";
Blockly.Msg.MOTOR_ON_TOOLTIP_CALLIOPE = "Startet Motor A, B oder A+B mit einer bestimmten Leistung. Die Motoren drehen nur in eine Richtung mit einer Leistung von 0 - 100%.";
Blockly.Msg.MOTOR_ON_TOOLTIP_CALLIOPE_CB = "Startet den rechten oder den linken Motor mit einer bestimmten Leistung. Die Motoren drehen vorwärts mit einer Leistung von 0 - 100% oder rückwärts mit einer Leistung von 0 - -100%.";
Blockly.Msg.MOTOR_OTHER = "Anderer Stromverbraucher";
Blockly.Msg.MOTOR_PAN = "schwenk";
Blockly.Msg.MOTOR_PORT = "Motor Port";
Blockly.Msg.MOTOR_PORT_ARDUINO = "Motor 28BYJ-48 Port";
Blockly.Msg.MOTOR_REGULATION = "Regulierung";
Blockly.Msg.MOTOR_RIGHT = "rechts";
Blockly.Msg.MOTOR_ROTATION = "Umdrehungen";
Blockly.Msg.MOTOR_ROTATION_PER_MINUTE = "rpm";  // untranslated
Blockly.Msg.MOTOR_ROTATION_REVERSE = "Drehrichtung";
Blockly.Msg.MOTOR_SETPOWER_TOOLTIP = "Setzt Leistung dieses Motors.";
Blockly.Msg.MOTOR_SIDE = "Seite";
Blockly.Msg.MOTOR_SPEED = "Tempo %";
Blockly.Msg.MOTOR_SPEED_0 = "Motor Speed is 0!";  // untranslated
Blockly.Msg.MOTOR_STEER = "Steure";
Blockly.Msg.MOTOR_STOP = "Stoppe";
Blockly.Msg.MOTOR_STOP_TOOLTIP = "Stoppt die beiden Motoren A und B.";
Blockly.Msg.MOTOR_TILT = "neige";
Blockly.Msg.MOTOR_TURN = "Drehe";
Blockly.Msg.NAO_ABSOLUTE = "absolut";
Blockly.Msg.NAO_ACCELEROMETER = "Beschleunigungssensor";
Blockly.Msg.NAO_ACCELEROMETER_TOOLTIP = "Get the current reading from the accelerometer in the given direction";  // untranslated
Blockly.Msg.NAO_ANIMATION_TOOLTIP = "Perform the selected animation. TaiChi is a complex and artistic set of moves. Blink will only make the robot blink by using its LEDs. The wink and wipe forehead animation can be performed while siting and standing.";  // untranslated
Blockly.Msg.NAO_ANSWER = "Antwort";
Blockly.Msg.NAO_APPLYPOSTURE = "Lasse NAO";
Blockly.Msg.NAO_APPLYPOSTURE_TOOLTIP = "Robot will take the selected posture or position. Use the dropdown menu to choose one.";  // untranslated
Blockly.Msg.NAO_AUTONOMOUS = "Schalte autonomes Verhalten";
Blockly.Msg.NAO_AUTONOMOUS_TOOLTIP = "Turn the robots autonomous behaviour on or off. While 'on' the robot will react to sounds, move slightly from side to side and try to track faces. Turn it off if this behaviour interrupts your program.";  // untranslated
Blockly.Msg.NAO_BLINK = "blinken";
Blockly.Msg.NAO_CAMERA = "Kamera";
Blockly.Msg.NAO_CAMERA_BOTTOM = "untere";
Blockly.Msg.NAO_CAMERA_TOP = "obere";
Blockly.Msg.NAO_FACE_GET_INFORMATION_TOOLTIP = "Gibt Zusatzinformationen über das bereits erkannten Gesicht im Kamerabild als Liste zurück. Folgende Werte sind enthalten: [XWinkel, YWinkel, XGröße, YGröße, Ausrichtung]. Die Angaben sind alle Kamerawinkel";
Blockly.Msg.NAO_FILENAME = "Dateiname";
Blockly.Msg.NAO_FORGETFACEOF = "Vergesse Gesicht von";
Blockly.Msg.NAO_FORGETFACE_TOOLTIP = "Delete a face previously saved under a given name from the vision recognition database on the robot. ";  // untranslated
Blockly.Msg.NAO_FRAME = "Koordinatensystem";
Blockly.Msg.NAO_FRAME_TORSO = "Oberkörper";
Blockly.Msg.NAO_FRAME_WORLD = "Welt";
Blockly.Msg.NAO_FSR = "Drucksensor";
Blockly.Msg.NAO_GETLANGUAGE_TOOLTIP = "Get the active language. This is the language the robot is currently using for Text to Speech and Voice recognition.";  // untranslated
Blockly.Msg.NAO_GETVOLUME_TOOLTIP = "Get current volume.";  // untranslated
Blockly.Msg.NAO_GYROMETER = "Gyroskop";
Blockly.Msg.NAO_GYROMETER_TOOLTIP = "Get the current reading from the gyrometer in the given direction.";  // untranslated
Blockly.Msg.NAO_HAND = "Hand";
Blockly.Msg.NAO_HAND_TOOLTIP = "Open or close a single hand (wrist) of the robot.";  // untranslated
Blockly.Msg.NAO_HEADSENSOR = "Kopfsensor";
Blockly.Msg.NAO_INTENSITY = "Intensität";
Blockly.Msg.NAO_JOINT_ANKLEPITCH = "ankle pitch";  // untranslated
Blockly.Msg.NAO_JOINT_ANKLEROLL = "ankle roll";  // untranslated
Blockly.Msg.NAO_JOINT_ELBOWROLL = "elbow roll";  // untranslated
Blockly.Msg.NAO_JOINT_ELBOWYAW = "elbow yaw";  // untranslated
Blockly.Msg.NAO_JOINT_HAND = "hand";  // untranslated
Blockly.Msg.NAO_JOINT_HEADPITCH = "head pitch";
Blockly.Msg.NAO_JOINT_HEADYAW = "head yaw";
Blockly.Msg.NAO_JOINT_HIPPITCH = "hip pitch";  // untranslated
Blockly.Msg.NAO_JOINT_HIPROLL = "hip roll";  // untranslated
Blockly.Msg.NAO_JOINT_HIPYAWPITCH = "hip yaw pitch";  // untranslated
Blockly.Msg.NAO_JOINT_KNEEPITCH = "knee pitch";  // untranslated
Blockly.Msg.NAO_JOINT_SHOULDERPITCH = "shoulder pitch";  // untranslated
Blockly.Msg.NAO_JOINT_SHOULDERROLL = "shoulder roll";  // untranslated
Blockly.Msg.NAO_JOINT_WRISTYAW = "wrist yaw";  // untranslated
Blockly.Msg.NAO_LEARNFACEOF = "Merke Gesicht von";
Blockly.Msg.NAO_LEARNFACE_TOOLTIP = "Learn and save a face under a given name in the vision recognition database on the robot.";  // untranslated
Blockly.Msg.NAO_LED = "LED";
Blockly.Msg.NAO_LEDOFF_TOOLTIP = "Turn the selected LED(s) off.";  // untranslated
Blockly.Msg.NAO_LEDRESET_TOOLTIP = "Reset the selected LEDs to their original state regarding colour and intensity.";  // untranslated
Blockly.Msg.NAO_LED_ALL = "alle";
Blockly.Msg.NAO_LED_CHEST = "Brust";
Blockly.Msg.NAO_LED_EAR = "Ohr";
Blockly.Msg.NAO_LED_EARS = "Ohren";
Blockly.Msg.NAO_LED_EYE = "Auge";
Blockly.Msg.NAO_LED_EYES = "Augen";
Blockly.Msg.NAO_LED_FOOT = "Fuß";
Blockly.Msg.NAO_LED_HEAD = "Kopf";
Blockly.Msg.NAO_LED_TOOLTIP = "Set the color of selected LED(s). Eyes and feet LEDs are available.";  // untranslated
Blockly.Msg.NAO_LOOKAT = "Schaue auf";
Blockly.Msg.NAO_MARK_GET_INFORMATION_TOOLTIP = "Gibt Zusatzinformationen über den bereits erkannten NAO Marker im Kamerabild als Liste zurück. Folgende Werte sind enthalten: [XWinkel, YWinkel, XGröße, YGröße, Ausrichtung]. Die Angaben sind alle Kamerawinkel";
Blockly.Msg.NAO_MOVE = "Bewege";
Blockly.Msg.NAO_MOVEJOINT_TOOLTIP = "Move a single joint of the robot. A relative movement means that the current position of the selected joint is used to calculate the new position. Be aware that every joint has different limits. Therefore the input range for the degerees varies.";  // untranslated
Blockly.Msg.NAO_PART_ARM = "Arm";
Blockly.Msg.NAO_PART_ARMS = "Arme";
Blockly.Msg.NAO_PART_BODY = "Körper";
Blockly.Msg.NAO_PART_HEAD = "Kopf";
Blockly.Msg.NAO_PART_LEG = "Bein";
Blockly.Msg.NAO_PART_LEGS = "Beine";
Blockly.Msg.NAO_PERFORM = "Führe aus";
Blockly.Msg.NAO_PHRASE = "Ausdruck";
Blockly.Msg.NAO_PLAYFILE_TOOLTIP = "Plays a sound file from the robot. Enter the name of the file. The file needs to be transferred to the robot beforehand.";  // untranslated
Blockly.Msg.NAO_PLAY_FILE = "Spiele Datei";
Blockly.Msg.NAO_POINTAT = "Zeige auf";
Blockly.Msg.NAO_POINTLOOKAT_TOOLTIP = "Robot points or looks at a given position. The robot will move one of its hands or the head. Select the frame that is the point of reference. The values are entered in centimeter. Refer to the wiki for more information about the coordinate systems.";  // untranslated
Blockly.Msg.NAO_POSTURE_CROUCH = "hocken";
Blockly.Msg.NAO_POSTURE_LYINGBACK = "auf dem Rücken liegen";
Blockly.Msg.NAO_POSTURE_LYINGBELLY = "auf dem Bauch liegen";
Blockly.Msg.NAO_POSTURE_REST = "ruhen";
Blockly.Msg.NAO_POSTURE_SIT = "sitzen";
Blockly.Msg.NAO_POSTURE_SITRELAX = "sitzen (entspannt)";
Blockly.Msg.NAO_POSTURE_STAND = "stehen";
Blockly.Msg.NAO_POSTURE_STANDINIT = "stehen (init)";
Blockly.Msg.NAO_POSTURE_STANDZERO = "stehen (zero)";
Blockly.Msg.NAO_QQVGA = "160*120";
Blockly.Msg.NAO_QVGA = "320*240";
Blockly.Msg.NAO_RANDOMEYES = "Zufällige Animation der Augen";
Blockly.Msg.NAO_RANDOMEYES_TOOLTIP = "The color of the eyes is changed randomly for a specified amount of time entered in milliseconds.";  // untranslated
Blockly.Msg.NAO_RASTA = "Abwechselnde Animation aller LEDs";
Blockly.Msg.NAO_RASTA_TOOLTIP = "The color of the eyes is changed between green, yellow and red for a specified amount of time entered in milliseconds.";  // untranslated
Blockly.Msg.NAO_RECOGNIZEWORD = "Spracherkennnung von";
Blockly.Msg.NAO_RECOGNIZEWORD_TOOLTIP = "Gibt das Wort zurück, dass von der Spracherkennung erkannt wurde. Es können nur Wörter erkannt werden, die mit dem Aufruf mitgegeben wurden.";
Blockly.Msg.NAO_RECORDVIDEO = "Nehme Video auf mit";
Blockly.Msg.NAO_RECORDVIDEO_TOOLTIP = "Records a video and saves it on the robot. Access the robots file system to view the video.";  // untranslated
Blockly.Msg.NAO_RELATIVE = "relativ";
Blockly.Msg.NAO_RESOLUTION = "Auflösung";
Blockly.Msg.NAO_SETINTENSITY_TOOLTIP = "Set the intensity of selected LED(s) in a range from 0 to 100. Ears, head and chest LEDs are available";  // untranslated
Blockly.Msg.NAO_SETLANGUAGE_TOOLTIP = "Set the language. Be aware that it is necessary to download the language pack before you can use it. For more information refer to the manual of your robot.";  // untranslated
Blockly.Msg.NAO_SETVOLUME_TOOLTIP = "Set the volume in a range from 0 to 100.";  // untranslated
Blockly.Msg.NAO_STIFFNESS = "Blockiere Motoren";
Blockly.Msg.NAO_STIFFNESS_TOOLTIP = "The stiffness of the selected body part of the robot will be turned on or off. Be aware that releasing the leg motors while the robot is standing may result in robot collapsing.";  // untranslated
Blockly.Msg.NAO_STOP = "Stoppe Bewegung";
Blockly.Msg.NAO_STOP_TOOLTIP = "The robot immediately stops all movement. Be aware that this can lead to situations where downfall is possible.";  // untranslated
Blockly.Msg.NAO_TAI_CHI = "Tai Chi";
Blockly.Msg.NAO_TAKEPICTURE = "Mache Foto mit";
Blockly.Msg.NAO_TAKEPICTURE_TOOLTIP = "Takes a picture and saves it on the robot. Access the robots file system to view the picture.";  // untranslated
Blockly.Msg.NAO_TOUCHSENSOR_TOOLTIP = "Is true if the selected touchsensor on the robot was touched.";  // untranslated
Blockly.Msg.NAO_TURN_TOOLTIP = "Turns the robot for number of degrees. Only enter positive values and use the dropdown to select the direction. It is possible to enter values up to 360 degrees.";  // untranslated
Blockly.Msg.NAO_VGA = "640*480";
Blockly.Msg.NAO_WALK = "Gehe";
Blockly.Msg.NAO_WALKTO = "Gehe zu";
Blockly.Msg.NAO_WALKTO_TOOLTIP = "The robot walks to the given position. The values are entered in cm and radians and are based on the coordinate system in NAOs body. Please refer to the wiki for more information on the coordinate system and how to calculate the coordinates.";  // untranslated
Blockly.Msg.NAO_WALK_ASYNC_TOOLTIP = "Der Roboter geht unendlich.";
Blockly.Msg.NAO_WALK_TOOLTIP = "Makes the robot walk a distance entered in cm. Distances below 10cm might lead to no movement at all. Depending on your robot and the surface the robots is walking on the distance might not be exact.";  // untranslated
Blockly.Msg.NAO_WAVE = "winken";
Blockly.Msg.NAO_WIPE_FOREHEAD = "Stirn wischen";
Blockly.Msg.NEW_VARIABLE = "New variable...";  // untranslated
Blockly.Msg.NEW_VARIABLE_TITLE = "New variable name:";  // untranslated
Blockly.Msg.NO = "nein";
Blockly.Msg.NXTBRICK_TOOLTIP = "Block für den NXT Stein mit den angeschlossenen Aktoren und Sensoren. Es gibt auch weitere eingebaute Aktoren und Sensoren, wie z. B. das Display, die Tasten ...";
Blockly.Msg.OFF = "aus";
Blockly.Msg.OLDER_THEN_14 = "Ich bin 16 oder älter!";
Blockly.Msg.ON = "an";
Blockly.Msg.ORA_ACCESS_RIGHT_CHANGED = "Das Programm wurde geteilt.";
Blockly.Msg.ORA_ACCESS_RIGHT_DELETED = "Das Programm wird nicht mehr geteilt!";
Blockly.Msg.ORA_ACCOUNT_NOT_ACTIVATED_TO_SHARE = "Du kannst Programme nur teilen oder in die Gallerie hochladen, wenn dein Benutzerkonto verifiziert wurde.<br><a href='https://www.roberta-home.de/index.php?id=138' target='_blank'>Mehr Infos ...</a>";
Blockly.Msg.ORA_COMMAND_INVALID = "Dein Konfigurationsname ist vom System reserviert. Wähle bitte einen anderen Namen und versuche es noch einmal!";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_CONFIGURATION_NOT_FOUND = "Der Server konnte die Roboterkonfiguration nicht finden.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_CONFIGURATION_TRANSFORM_FAILED = "Die Roboterkonfiguration konnte nicht in die entsprechende Programmiersprache übertragen werden.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_COMPILE_FAILED = "Das Programm kann nicht auf dem Roboter oder in der Simulation ausgeführt werden. Das Program kann nicht übersetzt werden. Die Fehlermeldung ist: <span style='background-color:#ddd;font-family:courier;'>{MESSAGE}</span>";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_GENERATION_FAILED = "Das Programm konnte nicht generiert werden.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_GENERATION_FAILED_WITH_PARAMETERS = "Das Programm konnte nicht generiert werden. Es gibt Fehler in den block {BLOCK} mit dem pin {PIN}";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_NOT_FOUND = "Das Programm konnte in der Datenbank nicht gefunden werden.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_STORE_FAILED = "Ein Fehler ist beim internen Speichern des Programmes aufgetreten.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_TRANSFORM_FAILED = "Das Programm konnte nicht in die entsprechende Programmiersprache übertragen werden.";
Blockly.Msg.ORA_CONFIGURATION_DELETE_ERROR = "Ein Fehler ist beim Löschen der Roboterkonfiguration aufgetreten, versuche es noch einmal!";
Blockly.Msg.ORA_CONFIGURATION_DELETE_SUCCESS = "Du hast die Roboterkonfiguration »$« gelöscht.";
Blockly.Msg.ORA_CONFIGURATION_ERROR_ID_INVALID = "Konfigurationsname ist kein valider Identifikator.";
Blockly.Msg.ORA_CONFIGURATION_GET_ALL_SUCCESS = "Du hast deine Roboterkonfigurationen geladen.";
Blockly.Msg.ORA_CONFIGURATION_GET_ONE_ERROR_NOT_FOUND = "Die Roboterkonfiguration konnte nicht in der Datenbank gefunden werden.";
Blockly.Msg.ORA_CONFIGURATION_GET_ONE_SUCCESS = "Du hast die Roboterkonfigurationen »$« geladen.";
Blockly.Msg.ORA_CONFIGURATION_SAVE_ERROR = "Fehler beim Speichern der Konfiguration.";
Blockly.Msg.ORA_CONFIGURATION_SAVE_ERROR_NOT_SAVED_TO_DB = "Ein Fehler ist beim Speichern des Roboterkonfiguration aufgetreten.";
Blockly.Msg.ORA_CONFIGURATION_SAVE_SUCCESS = "Die Roboterkonfiguration »$« wurde gespeichert.";
Blockly.Msg.ORA_EXPRBLOCK_PARSE_ERROR = "Could not parse the expression.";  // untranslated
Blockly.Msg.ORA_EXPRBLOCK_TYPECHECK_ERROR = "Errors where produced when typecheking the expression.";  // untranslated
Blockly.Msg.ORA_EXPRBLOCK_TYPECHECK_ERROR_INVALID_ARGUMENT_NUMBER = "Wrong number of arguents in function call (Check help for more info on the arguments of the function).";  // untranslated
Blockly.Msg.ORA_EXPRBLOCK_TYPECHECK_ERROR_INVALID_ARGUMENT_TYPE = "The expression »$« has the wrong type of argument in function call.";  // untranslated
Blockly.Msg.ORA_EXPRBLOCK_TYPECHECK_ERROR_INVALID_OPERAND_TYPE = "Invalid type of operand in expression!";  // untranslated
Blockly.Msg.ORA_EXPRBLOCK_TYPECHECK_ERROR_INVALID_TYPE_FOR_LIST_ELEMENT = "All elements on the list must have the same type.";  // untranslated
Blockly.Msg.ORA_EXPRBLOCK_TYPECHECK_ERROR_SYNTAX_ERROR = "Syntax error in expression!";  // untranslated
Blockly.Msg.ORA_EXPRBLOCK_TYPECHECK_ERROR_UNDECLARED_VARIABLE = "Variable »$« not declared";  // untranslated
Blockly.Msg.ORA_EXPRBLOCK_TYPECHECK_ERROR_UNEXPECTED_METHOD = "You cannot use void methods in that expression.";  // untranslated
Blockly.Msg.ORA_EXPRBLOCK_TYPECHECK_ERROR_UNEXPECTED_RETURN_TYPE = "Wrong type of return value from expression!";  // untranslated
Blockly.Msg.ORA_GALLERY_UPLOAD_ERROR = "Dein Programm »$« konnte nicht in die Galerie hochgeladen werden, vielleicht hast du es bereits hochgeladen.";
Blockly.Msg.ORA_GALLERY_UPLOAD_SUCCESS = "Dein Programm »$« ist nun in der Galerie!";
Blockly.Msg.ORA_GROUP_CREATE_ERROR_NOT_SAVED_TO_DB = "Es gibt bereits eine Gruppe mit diesem Namen, versuche es mit einem anderen Gruppesnamen.";
Blockly.Msg.ORA_LIKE_DELETE_SUCCESS = "Dir gefällt »$« nicht mehr!";
Blockly.Msg.ORA_LIKE_SAVE_ERROR_EXISTS = "Etwas ist schiefgegangen, vielleicht hattest du bereits auf gefällt mir geklickt.";
Blockly.Msg.ORA_LIKE_SAVE_SUCCESS = "Dir gefällt »$« ab jetzt!";
Blockly.Msg.ORA_LIST_CREATE_WITH_ERROR = "Fehler: Dieser Block kann nur an einen Block angefügt werden, der eine Variable erzeugt.";
Blockly.Msg.ORA_OWNER_DOES_NOT_EXIST = "Dieser Benutzer existiert leider nicht.";
Blockly.Msg.ORA_PROGRAM_CONFIGURATION_NOT_COMPATIBLE = "Das Programm passt nicht zur Roboter Konfiguration";
Blockly.Msg.ORA_PROGRAM_DELETE_ERROR = "Ein Fehler ist beim Löschen des Programmes aufgetreten, versuche es nochmal!";
Blockly.Msg.ORA_PROGRAM_DELETE_SUCCESS = "Du hast das Programm »$« gelöscht.";
Blockly.Msg.ORA_PROGRAM_ERROR_ID_INVALID = "Dein Programmname ist vom System reserviert. Wähle bitte einen anderen Namen und versuche es noch einmal!";
Blockly.Msg.ORA_PROGRAM_GET_ALL_SUCCESS = "Du hast deine Programme geladen.";
Blockly.Msg.ORA_PROGRAM_GET_ONE_ERROR_NOT_FOUND = "Das Programm konnte nicht in der Datenbank gefunden werden.";
Blockly.Msg.ORA_PROGRAM_GET_ONE_ERROR_NOT_LOGGED_IN = "Du bist nicht angemeldet, bitte melde dich mit deinem Benutzernamen und dem Passwort an oder erstelle dir ein neues Benutzerkonto.";
Blockly.Msg.ORA_PROGRAM_GET_ONE_SUCCESS = "Du hast das Programm »$« geladen.";
Blockly.Msg.ORA_PROGRAM_IMPORT_ERROR = "»$.xml« ist kein gültiges NEPO Programm und kann nicht hochgeladen werden!";
Blockly.Msg.ORA_PROGRAM_IMPORT_ERROR_WRONG_ROBOT_TYPE = "Der Robotertyp, den du im Menü ausgewählt hast, passt nicht zu dem Programm, dass du importieren möchtest.<br>Wähle den richtigen Robotertyp im Robotermenü aus und versuche es noch einmal!";
Blockly.Msg.ORA_PROGRAM_INVALID_STATEMETNS = "There are errors in your program. Please check the messages";  // untranslated
Blockly.Msg.ORA_PROGRAM_SAVE_AS_ERROR_PROGRAM_EXISTS = "Dieses Programm existiert bereits.";
Blockly.Msg.ORA_PROGRAM_SAVE_ERROR_NO_WRITE_PERMISSION = "You don't have the permission to modify this program!";  // untranslated
Blockly.Msg.ORA_PROGRAM_SAVE_ERROR_OPTIMISTIC_TIMESTAMP_LOCKING = "Dein Programm wurde kürzlich von jemand anderem geändert. Du kannst deine Änderungen jetzt nur in einem neuen Program speichern, >speichern unter<!";
Blockly.Msg.ORA_PROGRAM_SAVE_ERROR_PROGRAM_TO_UPDATE_NOT_FOUND = "Das Programm konnte nicht gefunden werden, ein Update ist unmöglich.";
Blockly.Msg.ORA_PROGRAM_SAVE_SUCCESS = "Das Programm »$« wurde gespeichert.";
Blockly.Msg.ORA_PROGRAM_TO_SHARE_DOES_NOT_EXIST = "Das Programm »$«, das du teilen möchtest, gibt es leider nicht.";
Blockly.Msg.ORA_ROBOT_DOES_NOT_EXIST = "Das ausgewählte Robotersystem wird nicht vom Open Roberta Lab unterstützt!<br>Bitte wähle ein anderes.";
Blockly.Msg.ORA_ROBOT_FIRMWAREUPDATE_IMPOSSIBLE = "Ein Fehler ist beim Herunterladen des neuen Systems für deinen Roboter aufgetreten.";
Blockly.Msg.ORA_ROBOT_FIRMWAREUPDATE_POSSIBLE = "Dein Roboter hat nun die aktuellste Version des Betriebssytems.";
Blockly.Msg.ORA_ROBOT_NOT_CONNECTED = "Du hast gerade keinen Roboter mit dem Server verbunden. Schau nach, ob der Roboter eingeschaltet ist, melde ihn am Server an und gib das Kennwort unter Roboter - Verbinden ein.<br />Wenn das nicht klappt, schau in der Hilfe nach.";
Blockly.Msg.ORA_ROBOT_NOT_WAITING = "Dein Roboter ist gerade nicht aktiv.";
Blockly.Msg.ORA_ROBOT_PUSH_RUN = "Dein Roboter bekommt jetzt dein Programm und startet gleich.";
Blockly.Msg.ORA_ROBOT_PUSH_RUN_CALLIOPE2016 = "Dein Programm »$« wird auf Calliope übertragen, drücke »Reset« zum Starten!";
Blockly.Msg.ORA_ROBOT_PUSH_RUN_NXT = "Dein Programm »$« wird auf den NXT übertragen, starte es auf dem Roboter!";
Blockly.Msg.ORA_ROBOT_SET_SUCCESS = "Das System »$« ist ausgewählt!";
Blockly.Msg.ORA_SERVER_ERROR = "Server-Fehler";
Blockly.Msg.ORA_TOKEN_SET_ERROR_NO_ROBOT_WAITING = "Hast du deinen Roboter eingeschaltet und mit dem Server verbunden?<br />Wenn das nicht klappt, schau in der Hilfe nach.";
Blockly.Msg.ORA_TOKEN_SET_ERROR_WRONG_ROBOTTYPE = "Der Robotertyp, den du im Menü ausgewählt hast, passt nicht zum Roboter, den du verbinden möchtest.<br>Wähle den richtigen Robotertyp im Robotermenü aus und versuche es noch einmal!";
Blockly.Msg.ORA_TOKEN_SET_SUCCESS = "Klasse! Dein Roboter »$« ist nun mit dem Server verbunden.";
Blockly.Msg.ORA_TOOLBOX_DELETE_ERROR = "Ein Fehler ist beim Löschen der Toolbox aufgetreten, versuche es noch einmal!";
Blockly.Msg.ORA_TOOLBOX_DELETE_SUCCESS = "Du hast die Toolbox gelöscht.";
Blockly.Msg.ORA_TOOLBOX_ERROR_ID_INVALID = "Toolboxname ist kein valider Identifikator.";
Blockly.Msg.ORA_TOOLBOX_GET_ALL_SUCCESS = "Du hast deine Toolbox geladen.";
Blockly.Msg.ORA_TOOLBOX_GET_ONE_ERROR_NOT_FOUND = "Die Toolbox konnte nicht in der Datenbank gefunden werden.";
Blockly.Msg.ORA_TOOLBOX_GET_ONE_SUCCESS = "Du hast die Toolbox geladen.";
Blockly.Msg.ORA_TOOLBOX_SAVE_ERROR = "Fehler beim Speichern der Toolbox.";
Blockly.Msg.ORA_TOOLBOX_SAVE_ERROR_NOT_SAVED_TO_DB = "An error error has occurred while saving the configuration in the database.";
Blockly.Msg.ORA_TOOLBOX_SAVE_SUCCESS = "Die Toolbox wurde gespeichert.";
Blockly.Msg.ORA_TOOLBOX_TRANSFORM_ERROR = "Transformation Fehler?";
Blockly.Msg.ORA_USER_ACTIVATION_INVALID_URL = "Dieser Link ist nicht mehr gültig. Bitte lasse dir die Verifizierungsmail nocheinmal zusenden.";
Blockly.Msg.ORA_USER_ACTIVATION_SENT_MAIL_FAIL = "Entschuldigung, wir konnten dir keine Mail zuschicken, bitte melde dich hier: »support-o-r@iais.fraunhofer.de«.";
Blockly.Msg.ORA_USER_ACTIVATION_SENT_MAIL_SUCCESS = "Wir haben dir eine Mail geschickt. Bitte schaue in deinem Postfach nach!";
Blockly.Msg.ORA_USER_ACTIVATION_SUCCESS = "Dein Benutzerkonto wurde erfolgreich verifiziert. Bitte logge dich ein!";
Blockly.Msg.ORA_USER_CREATE_ERROR_ACCOUNT_LENGTH = "Dein Benutzername oder dein Name ist länger als 25 Zeichen, bitte geben einen kürzeren ein. Das Benutzerkonto konnte nicht erstellt werden.";
Blockly.Msg.ORA_USER_CREATE_ERROR_CONTAINS_SPECIAL_CHARACTERS = "Bitte benutze keine Sonderzeichen in deinem Benutzernamen oder im Namen. Das Benutzerkonto konnte nicht erstellt werden.";
Blockly.Msg.ORA_USER_CREATE_ERROR_MISSING_REQ_FIELDS = "Schaue nach, ob du alle Felder ausgefüllt hast. Das Benutzerkonto konnte nicht erstellt werden.";
Blockly.Msg.ORA_USER_CREATE_ERROR_NOT_SAVED_TO_DB = "Es gibt bereits einen Benutzer mit diesem Namen, versuche es mit einem anderen Benutzernamen.";
Blockly.Msg.ORA_USER_CREATE_SUCCESS = "Das Benutzerkonto »$« wurde für dich angelegt!";
Blockly.Msg.ORA_USER_DEACTIVATION_SUCCESS = "Dein Benutzerkonto ist nicht mehr verifiziert. Bitte schaue in deinem Postfach nach!";
Blockly.Msg.ORA_USER_DELETE_ERROR_ID_NOT_FOUND = "Ein Fehler ist beim Löschen des Benutzers »$« aufgetreten.";
Blockly.Msg.ORA_USER_DELETE_ERROR_NOT_DELETED_IN_DB = "Ein Fehler ist beim Löschen des Benutzers »$« in der Datenbank aufgetreten.";
Blockly.Msg.ORA_USER_DELETE_SUCCESS = "Du hast dein Benutzerkonto »$« gelöscht. Hoffentlich kommst du bald wieder!";
Blockly.Msg.ORA_USER_EMAIL_ONE_ERROR_USER_NOT_EXISTS_WITH_THIS_EMAIL = "This email address is unknown, maybe you have spelled it wrong!";  // untranslated
Blockly.Msg.ORA_USER_ERROR_EMAIL_USED = "Diese E-Mail-Adresse wird bereits benutzt, versuche es mit einer anderen E-Mail-Adresse!";
Blockly.Msg.ORA_USER_GET_ALL_SUCCESS = "Nutzer geladen";
Blockly.Msg.ORA_USER_GET_ONE_ERROR_ID_OR_PASSWORD_WRONG = "Beim Anmelden ist etwas schiefgegangen. Hast du den Benutzernamen und das Passwort richtig geschrieben?<br />Versuche es noch einmal!";
Blockly.Msg.ORA_USER_GET_ONE_SUCCESS = "Login erfolgreich";
Blockly.Msg.ORA_USER_GROUP_SAVE_AS_ERROR_USER_GROUP_EXISTS = "Es gibt bereits einen Benutzer mit diesem Namen in dieser Gruppe, versuche es mit einem anderen Benutzernamen.";
Blockly.Msg.ORA_USER_PASSWORD_RECOVERY_EXPIRED_URL = "Dieser Link ist nicht mehr gültig. Bitte setze dein Passwort erneut zurück, falls dir das Passwort nicht mehr einfällt!";
Blockly.Msg.ORA_USER_PASSWORD_RECOVERY_SENT_MAIL_FAIL = "Leider konnten wir an die angegebene E-Mail-Adresse keine Mail verschicken. Bitte melde dich hier »support-o-r@iais.fraunhofer.de«";
Blockly.Msg.ORA_USER_PASSWORD_RECOVERY_SENT_MAIL_SUCCESS = "Die Mail wurde versendet. Bitte schaue in dein Mailpostfach!";
Blockly.Msg.ORA_USER_TO_ADD_NOT_FOUND = "Der nutzer wurde nicht gefunden";
Blockly.Msg.ORA_USER_TO_SHARE_DOES_NOT_EXIST = "Der Benutzer mit dem du dein Programm teilen möchtest existiert leider nicht. Ist der Benutzername richtig geschrieben?<br />Versuche es noch einmal!";
Blockly.Msg.ORA_USER_TO_SHARE_SAME_AS_LOGIN_USER = "Du kannst Programme nicht mit Dir selbst teilen.";
Blockly.Msg.ORA_USER_UPDATE_SUCCESS = "Dein Passwort wurde erfolgreich geändert!";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";  // untranslated
Blockly.Msg.OUTPUT = "Ausgang";
Blockly.Msg.PASSWORD = "Kennwort";
Blockly.Msg.PIN_ISTOUCHED_TOOLTIP = "Gibt »wahr« zurück, wenn der ausgewählte Pin gedrückt wird.";
Blockly.Msg.PIN_PULL = "Pull";
Blockly.Msg.PIN_PULL_DOWN = "down";
Blockly.Msg.PIN_PULL_NONE = "keiner";
Blockly.Msg.PIN_PULL_UP = "up";
Blockly.Msg.PIN_SET_PULL_TOOLTIP = "Setzt den Pull des ausgewählten digitalen Pins.";
Blockly.Msg.PIN_WRITE = "Schreibe";
Blockly.Msg.PITCH = "Neigung";
Blockly.Msg.PLAY = "Spiele";
Blockly.Msg.PLAY_DURATION = "Dauer ms";
Blockly.Msg.PLAY_EIGHTH = "Achtelnote";
Blockly.Msg.PLAY_FILE = "Stück";
Blockly.Msg.PLAY_FILE_TOOLTIP = "Spielt eine Musikdatei.";
Blockly.Msg.PLAY_FREQUENZ = "Frequenz Hz";
Blockly.Msg.PLAY_GETVOLUME_TOOLTIP = "Liefert aktuelle Lautstärke.";
Blockly.Msg.PLAY_HALF = "halbe Note";
Blockly.Msg.PLAY_NOTE = "Note";
Blockly.Msg.PLAY_NOTE_TOOLTIP = "Spielt die angegebene Note.";
Blockly.Msg.PLAY_QUARTER = "Viertelnote";
Blockly.Msg.PLAY_SETVOLUME_TOOLTIP = "Setzt Lautstärke.";
Blockly.Msg.PLAY_SIXTEENTH = "Sechzehntelnote";
Blockly.Msg.PLAY_TONE = "Ton";
Blockly.Msg.PLAY_TONE_TOOLTIP = "Spielt einen Ton. Mit der Frequenz kannst du die Höhe des Tones bestimmen, die Dauer wird in Millisekunden angebeben.";
Blockly.Msg.PLAY_TOOLTIP = "Block für den Summer.";
Blockly.Msg.PLAY_VOLUME = "Lautstärke";
Blockly.Msg.PLAY_WHOLE = "ganze Note";
Blockly.Msg.POPUP_ABOUT_JOIN = "Ich möchte mithelfen";
Blockly.Msg.POPUP_ABOUT_TEXT = "Open Roberta Lab ist eine cloudbasierte grafische Programmierumgebung, die es Kindern und Jugendlichen ermöglicht ohne technische Hürden einen Roboter/Mikrocontroller zu programmieren. <br /> Die Programmierplattform ist komplett »open source«, Mitmachen und Anregungen erwünscht! Alle benötigte Software und Open-Source-Entwicklertools stehen über Fraunhofer-Server bereit.";
Blockly.Msg.POPUP_ABOUT_TEXT_DEV = "Das Open Roberta Lab ist eine Open-Source-Entwicklung des Fraunhofer-Instituts IAIS im Kontext der Initiative  <a href='http://www.roberta-home.de/' target='_blank'>»Roberta – Lernen mit Robotern«</a>";
Blockly.Msg.POPUP_ABOUT_TEXT_GOOG = "Open Roberta wurde gemeinsam mit Google Deutschland initiiert, um die Hürden zur Programmierung von Robotern für Schülerinnen, Schüler und Lehrkräfte​ abzubauen.";
Blockly.Msg.POPUP_AGE = "Alter";
Blockly.Msg.POPUP_ATTENTION = "Achtung";
Blockly.Msg.POPUP_BEFOREUNLOAD = "Du musst Dich anmelden und Dein Programm oder Deine Konfiguration abspeichern, bevor Du die Seite verlässt. Deine Änderungen gehen sonst verloren.";
Blockly.Msg.POPUP_BEFOREUNLOAD_LOGGEDIN = "Du musst Dein Programm oder Deine Konfiguration abspeichern, bevor Du die Seite verlässt. Deine Änderungen gehen sonst verloren.";
Blockly.Msg.POPUP_CANCEL = "Abbrechen";
Blockly.Msg.POPUP_CHANGE_PASSWORD = "ändere Passwort ...";
Blockly.Msg.POPUP_CONFIRM_CONTINUE = "<br><br><i>Klicke auf »OK« um deine Änderungen wegzuwerfen. Klicke auf »Abbrechen« um hier zu bleiben und erst einmal deine Arbeit zu sichern.</i>";
Blockly.Msg.POPUP_CONFIRM_DELETE_CONFIGURATION = "Möchtest du die Roboterkonfiguration wirklich löschen?";
Blockly.Msg.POPUP_CONFIRM_DELETE_GROUP = "Möchtest du die folgende Gruppe wirklich löschen?";
Blockly.Msg.POPUP_CONFIRM_DELETE_PROGRAM = "Möchtest du das folgende Programm oder die folgenden Programme wirklich löschen?<br>Wenn du ein geteiltest Programm löscht, löscht du nicht das Programm selbst, sondern das Teilen mit dir.<br><br>Wenn du ein Programm löscht das vom Benutzer »Gallery« erstellt wurde löscht du dein Program aus der Galerie!";
Blockly.Msg.POPUP_CONFIRM_DELETE_USER_GROUP = "Möchtest du diese Benutzer aus der aktuellen Gruppe wirklich entfernen?";
Blockly.Msg.POPUP_CONFIRM_UPDATE_FIRMWARE = "Die Firmware Deines Roboters wurde geändert. Deine Programme funktionieren vielleicht noch, aber es wäre besser, die Firmware jetzt zu aktualisieren! Klicke dazu einfach auf »Aktualisieren«.";
Blockly.Msg.POPUP_CONTINUE = "Trotzdem weiter";
Blockly.Msg.POPUP_DISPLAY_HEADER = "Ausgabe deines Programmes";
Blockly.Msg.POPUP_DOWNLOAD = "Lade dein Program auf den »$«";
Blockly.Msg.POPUP_DOWNLOAD_CHECK = "Okay, ich habe meinen Download Ordner geändert. Lade meine Programme direkt herunter und zeige dieses Fenster nicht mehr.";
Blockly.Msg.POPUP_DOWNLOAD_STEP_1 = "Klicke mit der rechten Maustaste auf den untenstehenden Link und";
Blockly.Msg.POPUP_DOWNLOAD_STEP_1_SENSEBOX = "Überprüfe, ob dein Gerät im Programmierungsmodus (LED dimmt sich) ist, wenn nein, drücke die rote Taste zweimal. Klicke mit der rechten Maustaste auf den untenstehenden Link und";
Blockly.Msg.POPUP_DOWNLOAD_STEP_2 = "wähle »Speichern unter ...«, dann";
Blockly.Msg.POPUP_DOWNLOAD_STEP_3 = "markiere den verbundenen »$« in der linken Spalte mit einem Klick,";
Blockly.Msg.POPUP_DOWNLOAD_STEP_4 = "jetzt klicke auf »Speichern« in der rechten unteren Ecke.<br><span style='font-size: 14px;'>Falls dein Programm nicht automatisch startet, warte eine Weile und drücke dann den Reset Knopf.</span>";
Blockly.Msg.POPUP_DOWNLOAD_STEP_4_SENSEBOX = "jetzt klicke auf »Speichern« in der rechten unteren Ecke.";
Blockly.Msg.POPUP_DO_UPDATE_FIRMWARE = "Aktualisieren";
Blockly.Msg.POPUP_EMAIL = "E-Mail";
Blockly.Msg.POPUP_EMAIL_SEND = "Jetzt abschicken";
Blockly.Msg.POPUP_GET_LINK = "Hier ist der Link zu deinem aktuellen Programm. Bitte ändere ihn nicht. Er ist bereits in deine Zwischenablage kopiert!</br>$";
Blockly.Msg.POPUP_MULTIPLE_ROBOTS = "Wähle mehrerere Programme für die Simulation aus";
Blockly.Msg.POPUP_MULTROBOTS_NOPROGRAMS = "Bitte erstelle und speichere mindestens zwei Programme damit sie in der Simulation von jeweils einem Roboter ausgeführt werden können!";
Blockly.Msg.POPUP_NAME = "Name";
Blockly.Msg.POPUP_NEW_PASSWORD = "Neues Passwort";
Blockly.Msg.POPUP_OLD_PASSWORD = "Altes Passwort";
Blockly.Msg.POPUP_PASSWORD = "Passwort";
Blockly.Msg.POPUP_PASSWORD_RECOVERY = "Passwort zurücksetzen ...";
Blockly.Msg.POPUP_PROGRAM_TERMINATED_UNEXPECTED = "Dein Programm konnte auf dem Roboter nicht ausgeführt werden!";
Blockly.Msg.POPUP_REGISTER_USER = "Jetzt registrieren";
Blockly.Msg.POPUP_REPEAT_PASSWORD = "Passwort wiederholen";
Blockly.Msg.POPUP_ROBOT_BATTERY = "Batteriespannung";
Blockly.Msg.POPUP_ROBOT_NAME = "Name";
Blockly.Msg.POPUP_ROBOT_NOT_CONNECTED = "Du hast gerade keinen Roboter mit dem Server verbunden. Schau nach, ob der Roboter eingeschaltet ist, melde ihn am Server an und gib das Kennwort unter Roboter - Verbinden ein.<br />Wenn das nicht klappt, schau in der Hilfe nach.";
Blockly.Msg.POPUP_ROBOT_STATE = "Status";
Blockly.Msg.POPUP_ROBOT_STATE_BUSY = "Programm wird ausgeführt";
Blockly.Msg.POPUP_ROBOT_STATE_DISCONNECTED = "Keine Verbindung zum Roboter";
Blockly.Msg.POPUP_ROBOT_STATE_WAIT = "Roboter wartet";
Blockly.Msg.POPUP_ROBOT_SYSTEM = "System";
Blockly.Msg.POPUP_ROBOT_WAIT = "Wartezeit";
Blockly.Msg.POPUP_SCANNED_ROBOTS = "Gefundene Roboter";
Blockly.Msg.POPUP_STARTUP_COOKIES = "Wir verwenden Cookies, um Inhalte und Anzeigen zu personalisieren und die Zugriffe auf unsere Website zu analysieren.";
Blockly.Msg.POPUP_STARTUP_HELP = "Brauchst du Hilfe?";
Blockly.Msg.POPUP_STARTUP_HELP_TEXT = "In unserer ausführlichen Hilfe erklären wir dir alles ganz genau, von der Bauanleitung bis zu häufig gestellten Fragen.";
Blockly.Msg.POPUP_STARTUP_HIDE = "Okay, dieses Fenster beim nächsten Start nicht mehr anzeigen und meine Auswahl merken.";
Blockly.Msg.POPUP_STARTUP_START = "Wähle dein System!";
Blockly.Msg.POPUP_STARTUP_TOUR_TEXT = "Möchtest du gleich loslegen, weißt aber nicht genau wie? Wir zeigen dir die ersten Schritte in einer interaktiven Anleitung.";
Blockly.Msg.POPUP_TOUR = "Starte die Tour";
Blockly.Msg.POPUP_USERNAME = "Benutzername";
Blockly.Msg.POPUP_USERNAME_LOGOFF = "Du bist nicht angemeldet.";
Blockly.Msg.POPUP_VALUE = "Wert";
Blockly.Msg.POPUP_WLAN_SECURITY_INFORMATION = "In diesem Formular kannst du die Zugangsdaten für die WLAN-Verbindung deines Systems eingeben. Die Daten werden nicht im Open Roberta Lab oder im Browser gespeichert; beim nächsten Besuch dieser Seite musst du sie neu eingeben. Bitte gehe äußerst vorsichtig mit diesen Daten um, damit dein WLAN sicher bleibt.";
Blockly.Msg.POPUP_WLAN_SSID = "SSID";
Blockly.Msg.PORT_ANKLE = "Fußgelenk";
Blockly.Msg.PORT_BUMPER = "Fuß";
Blockly.Msg.PORT_ELBOW = "Ellbogen";
Blockly.Msg.PORT_HAND = "Hand";
Blockly.Msg.PORT_HEAD = "Kopf";
Blockly.Msg.PORT_HIP = "Hüfte";
Blockly.Msg.PORT_INTERNAL = "Port intern";
Blockly.Msg.PORT_KNEE = "Knie";
Blockly.Msg.PORT_SHOULDER = "Schulter";
Blockly.Msg.PORT_WRIST = "Brust";
Blockly.Msg.POTENTIOMETER_TOOLTIP = "Block für den Potentiometer.";
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "allow statements";  // untranslated
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "with:";  // untranslated
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Run the user-defined function '%1'.";  // untranslated
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Run the user-defined function '%1' and use its output.";  // untranslated
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "with:";  // untranslated
Blockly.Msg.PROCEDURES_CREATE_DO = "Create '%1'";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Describe this function...";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "macheEtwas";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "to";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Creates a function with no output.";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "gib zurück";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Creates a function with an output.";  // untranslated
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Warning: This function has duplicate parameters.";  // untranslated
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Highlight function definition";  // untranslated
Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "If a value is true, then return a second value.";  // untranslated
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Warning: This block may be used only within a function definition.";  // untranslated
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "input name:";  // untranslated
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Add an input to the function.";  // untranslated
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "inputs";  // untranslated
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Add, remove, or reorder inputs to this function.";  // untranslated
Blockly.Msg.PROCEDURES_TITLE = "\" Funktion genutzt werden.";
Blockly.Msg.PROCEDURES_VARIABLES_ERROR = "Fehler: Dieser Block kann nur innerhalb der \"";
Blockly.Msg.PROCEDURES_VARIABLES_LOOP_ERROR = "Fehler: Dieser Block kann nur innerhalb einer \" Schleife, die folgende Variable erzeugt: ";
Blockly.Msg.PROGLIST_DELETE_ALL_TOOLTIP = "Klicke hier um alle ausgewählten Programme zu löschen.";
Blockly.Msg.PROGLIST_DELETE_TOOLTIP = "Klicke hier um dein Programm zu löschen.";
Blockly.Msg.PROGLIST_LOAD_TOOLTIP = "Klicke hier um dein Programm in die Programmierumgebung zu laden.";
Blockly.Msg.PROGLIST_SHARE_TOOLTIP = "Klicke hier um dein Programm mit einem Freund zu teilen.";
Blockly.Msg.PROGLIST_SHARE_WITH_GALLERY = "Möchtest du dein Programm wirklich in die Gallerie hochladen und mit allen anderen Benutzern teilen? Wenn du dir nicht sicher bist, schaue <a href='https://www.roberta-home.de/index.php?id=138' target='_blank'>hier</a> nochmal genau nach!";
Blockly.Msg.PROGLIST_SHARE_WITH_GALLERY_TOOLTIP = "Klicke hier um dein Programm in der Galerie hochzuladen und es mit allen anderen Benutzern zu teilen.";
Blockly.Msg.PULSEHIGH = "Pulszeit HIGH";
Blockly.Msg.PULSELOW = "Pulszeit LOW";
Blockly.Msg.PULSETOOLTIP = "Block für den Pulssensor.";
Blockly.Msg.RADIO_GET_RSSI_TOOLTIP = "Gibt den RSSI Wert des zuletzt empfangenen Pakets zurück.";
Blockly.Msg.REDO = "Redo";  // untranslated
Blockly.Msg.RELAY = "relay";  // untranslated
Blockly.Msg.RELAY_ARDUINO = "relay SRD-05VDC-SL-C";  // untranslated
Blockly.Msg.RELAY_TOOLTIP = "Block für die Relais.";
Blockly.Msg.REMOVE_COMMENT = "Remove Comment";  // untranslated
Blockly.Msg.RENAME_VARIABLE = "Rename variable...";  // untranslated
Blockly.Msg.RENAME_VARIABLE_TITLE = "Rename all '%1' variables to:";  // untranslated
Blockly.Msg.RESEND_ACTIVATION = "Bestätigungsmail erneut senden";
Blockly.Msg.RETURN = "gib zurück";
Blockly.Msg.RFID_TOOLTIP = "Block für den RFID Reader.";
Blockly.Msg.RGBLED_TOOLTIP = "Block für RGB LED.";
Blockly.Msg.RGB_LED_TOOLTIP = "Turns the LED on or off and changes the color.";  // untranslated
Blockly.Msg.RIGHT = "rechts";
Blockly.Msg.ROLL = "Drehung";
Blockly.Msg.ROTATIONS_PER_MINUTE = "rpm";
Blockly.Msg.SAY = "Sage";
Blockly.Msg.SAY_PARAMETERS_TOOLTIP = "Der Roboter sagt den angegebenen Text. Zusätzlich kann die Sprechgeschwindigkeit (0 langsam - 100 schnell) und die Stimmlage (0 tief - 100 hoch) verändert werden.";
Blockly.Msg.SAY_TOOLTIP = "Der Roboter sagt den angegebenen Text.";
Blockly.Msg.SEND_DATA = "data to send";  // untranslated
Blockly.Msg.SEND_DATA_SENSEMAP = "openSenseMap";  // untranslated
Blockly.Msg.SEND_DATA_TO = "Sende Daten an";
Blockly.Msg.SEND_DATA_TO_OSM_TOOLTIP = "Dieser Block sendet Daten an die openSenseMap. Um gleichzeitig verschiedene Daten zu versenden, klicke auf das + Zeichen. Konfiguriere zunächst die IDs der openSenseMap in der Konfiguration.";
Blockly.Msg.SENSEBOXBRICK_TOOLTIP = "Block für senseBox. Trage hier die ID's der openSenseMap ein, wenn du sie verwenden möchtest.";
Blockly.Msg.SENSOR_ACCELEROMETER = "Beschleunigungssensor";
Blockly.Msg.SENSOR_AMBIENTLIGHT = "Umgebungslichtsensor";
Blockly.Msg.SENSOR_ANALOGOUT = "Sensor analog";
Blockly.Msg.SENSOR_ANY = "irgendwo";
Blockly.Msg.SENSOR_ARM_TOOLTIP = "Gibt zurück, ob der ausgewählte Bereich des Arms gedrückt wird oder nicht.";
Blockly.Msg.SENSOR_BATTERY = "Batterieladung";
Blockly.Msg.SENSOR_BOTTOM = "unten";
Blockly.Msg.SENSOR_CALIBRATE = "Kalibriere";
Blockly.Msg.SENSOR_CODE = "Binär-Code";
Blockly.Msg.SENSOR_COLOUR = "Farbsensor";
Blockly.Msg.SENSOR_COMPASS = "Kompasssensor";
Blockly.Msg.SENSOR_COMPASS_EV3 = "HT Kompasssensor";
Blockly.Msg.SENSOR_DETECTFACE = "Gesichtserkennung";
Blockly.Msg.SENSOR_DETECTFACE_GETSAMPLE_TOOLTIP = "Gibt den Namen oder eine Liste von Namen des/der erkannten Gesichtes/r zurück";
Blockly.Msg.SENSOR_DETECTMARK = "NAO Mark Sensor";
Blockly.Msg.SENSOR_DETECTMARK_GETSAMPLE_TOOLTIP = "Gibt die ID (Zahl) oder eine Liste mit IDs (Zahlen) von erkannten NAO Markern zurück. Wenn kein NAO Marker erkannt wird, wird -1 oder eine Liste mit einem Element (-1) zurückgegeben. Eine Liste der möglichen NAO Marker und deren IDs kann im Open Roberta Wiki heruntergeladen werden.";
Blockly.Msg.SENSOR_DIGITALOUT = "Sensor digital";
Blockly.Msg.SENSOR_DROP = "Tropfensensor";
Blockly.Msg.SENSOR_DROP_GETSAMPLE_TOOLTIP = "Gibt den aktuellen Wert des Tropfensensors in Prozent zurück.";
Blockly.Msg.SENSOR_DROP_OFF = "Sturzsensor";
Blockly.Msg.SENSOR_ELECTRICCURRENT = "Stromsensor";
Blockly.Msg.SENSOR_ELECTRICCURRENT_GETSAMPLE_TOOLTIP = "Gibt die Stromstärke in Ampere vom ausgewählten Motor zurück.";
Blockly.Msg.SENSOR_ENCODER = "Drehsensor";
Blockly.Msg.SENSOR_FLAME = "Flammensensor";
Blockly.Msg.SENSOR_FSR = "Drucksensor";
Blockly.Msg.SENSOR_FSR_GETSAMPLE_TOOLTIP = "Get the current reading from the force sensitive resistor under the feet of the robot.";  // untranslated
Blockly.Msg.SENSOR_GESTURE = "Lage";
Blockly.Msg.SENSOR_GESTURE_ACTIVE = "aktiv?";
Blockly.Msg.SENSOR_GESTURE_DOWN = "kopfüber";
Blockly.Msg.SENSOR_GESTURE_DOWN_GETSAMPLE_TOOLTIP = "Gibt »wahr« zurück, wenn die Lage koprüber ist.";
Blockly.Msg.SENSOR_GESTURE_FACE_DOWN = "auf der Vorderseite";
Blockly.Msg.SENSOR_GESTURE_FACE_DOWN_GETSAMPLE_TOOLTIP = "Gibt »wahr« zurück, wenn die Lage auf der Vorderseite ist.";
Blockly.Msg.SENSOR_GESTURE_FACE_UP = "auf der Rückseite";
Blockly.Msg.SENSOR_GESTURE_FACE_UP_GETSAMPLE_TOOLTIP = "Gibt »wahr« zurück, wenn die Lage auf dem Rücken ist.";
Blockly.Msg.SENSOR_GESTURE_FREEFALL = "frei fallend";
Blockly.Msg.SENSOR_GESTURE_FREEFALL_GETSAMPLE_TOOLTIP = "Gibt »wahr« zurück, wenn es frei fällt.";
Blockly.Msg.SENSOR_GESTURE_SHAKE = "geschüttelt";
Blockly.Msg.SENSOR_GESTURE_SHAKE_GETSAMPLE_TOOLTIP = "Gibt »wahr« zurück, wenn es geschüttelt wird.";
Blockly.Msg.SENSOR_GESTURE_TOOLTIP = "Ist das System in der ausgewählten Lage?";
Blockly.Msg.SENSOR_GESTURE_UP = "aufrecht";
Blockly.Msg.SENSOR_GESTURE_UP_GETSAMPLE_TOOLTIP = "Gibt »wahr« zurück, wenn die Lage aufrecht ist.";
Blockly.Msg.SENSOR_GET = "gib";
Blockly.Msg.SENSOR_GET_SAMPLE = "gib Wert";
Blockly.Msg.SENSOR_GROVE = "Grove";
Blockly.Msg.SENSOR_GYRO = "Kreiselsensor";
Blockly.Msg.SENSOR_GYRO_TILTED_GETSAMPLE_TOOLTIP_WEDO = "Ist der Neigungssensor in der angegebenen Weise geneigt?";
Blockly.Msg.SENSOR_GYRO_WEDO = "Neigungssensor";
Blockly.Msg.SENSOR_HUMIDITY = "Luftfeuchtigkeitsensor";
Blockly.Msg.SENSOR_HUMIDITY_ARDUINO = "Luftfeuchtigkeitsensor DHT11";
Blockly.Msg.SENSOR_HUMIDITY_GETSAMPLE_TOOLTIP = "Gibt den aktuellen Wert des Luftfeuchtigkeitsensors in Prozent szurück.";
Blockly.Msg.SENSOR_HUMIDITY_SENSEBOX = "Luftfeuchtigkeit/Temperatur Sensor HDC1080";
Blockly.Msg.SENSOR_INFRARED = "Infrarotsensor";
Blockly.Msg.SENSOR_INFRARED_DISTANCE_GETSAMPLE_TOOLTIP_WEDO = "Gibt die relative Entfernung des Infrarotsensors zurück. Die Werte können zwischen 0, ganz nah und 10, weiter weg, liegen. Probiere es aus!";
Blockly.Msg.SENSOR_IRSEEKER = "HT Infrarotsensor";
Blockly.Msg.SENSOR_IRSEEKER_GETSAMPLE_TOOLTIP = "Gibt die Position einer Infrarot Signalleuchte.";
Blockly.Msg.SENSOR_IS_ARM = "Arm";
Blockly.Msg.SENSOR_IS_PIN = "";
Blockly.Msg.SENSOR_IS_PRESSED = "gedrückt?";
Blockly.Msg.SENSOR_IS_TILTED = "geneigt?";
Blockly.Msg.SENSOR_IS_TOUCHED = "gedrückt?";
Blockly.Msg.SENSOR_JOYSTICK = "Joystick";
Blockly.Msg.SENSOR_KEY = "Taste";
Blockly.Msg.SENSOR_KEY_ANY = "irgendeine";
Blockly.Msg.SENSOR_KEY_DOWN = "Unten";
Blockly.Msg.SENSOR_KEY_ENTER = "Mitte";
Blockly.Msg.SENSOR_KEY_ESCAPE = "Zurück";
Blockly.Msg.SENSOR_KEY_LEFT = "Links";
Blockly.Msg.SENSOR_KEY_RIGHT = "Rechts";
Blockly.Msg.SENSOR_KEY_UP = "Oben";
Blockly.Msg.SENSOR_LIGHT = "Lichtsensor";
Blockly.Msg.SENSOR_LIGHTVEML = "sichtbares/UV Licht Sensor";
Blockly.Msg.SENSOR_LIGHTVEML_GETSAMPLE_TOOLTIP = "sichtbares/UV Licht Sensor";
Blockly.Msg.SENSOR_MIC = "Mikrofon";
Blockly.Msg.SENSOR_MOISTURE = "Feuchtigkeitsensor";
Blockly.Msg.SENSOR_MOISTURE_GETSAMPLE_TOOLTIP = "Gibt den aktuellen Wert des Feuchtigkeitsensors in Prozent zurück.";
Blockly.Msg.SENSOR_MOTION = "Bewegungssensor";
Blockly.Msg.SENSOR_MOTION_ARDUINO = "Bewegungssensor HC-SR501";
Blockly.Msg.SENSOR_MOTION_GETSAMPLE_TOOLTIP = "Gibt den aktuellen Wert des Bewegungssensors (wahr/falsch) zurück.";
Blockly.Msg.SENSOR_MS_TIMER = "in ms";
Blockly.Msg.SENSOR_OUT = "Sensor";
Blockly.Msg.SENSOR_OUT_ANALOG_GETSAMPLE_TOOLTIP = "Gibt den analogen Wert von dem angegeben Pin zurück. Der Wert ist zwischen 0 und 1023.";
Blockly.Msg.SENSOR_OUT_DIGITAL_GETSAMPLE_TOOLTIP = "Gibt den digitalen Wert von dem angegebenen Pin zurück. Der Wert ist entweder HIGH »1« oder LOW »0«.";
Blockly.Msg.SENSOR_PIN = "Pin";
Blockly.Msg.SENSOR_PINTOUCH = "Pin";
Blockly.Msg.SENSOR_PINTOUCH_BOB3 = "Arm";
Blockly.Msg.SENSOR_PIN_ANALOG_GETSAMPLE_TOOLTIP = "Gibt den analogen Wert von dem angegeben Pin zurück. Der Wert ist zwischen 0 und 1023.";
Blockly.Msg.SENSOR_PIN_DIGITAL_GETSAMPLE_TOOLTIP = "Gibt den digitalen Wert von dem angegebenen Pin zurück. Der Wert ist entweder HIGH »1« oder LOW »0«.";
Blockly.Msg.SENSOR_PIN_PULSEHIGH_GETSAMPLE_TOOLTIP = "Gibt die Pulszeit HIGH an dem angegebenen Pin in Microsekunden oder -1 wenn die Zeit nicht gemessen werden konnte.";
Blockly.Msg.SENSOR_PIN_PULSELOW_GETSAMPLE_TOOLTIP = "Gibt die Pulszeit LOW an dem angegebenen Pin in Microsekunden oder -1 wenn die Zeit nicht gemessen werden konnte.";
Blockly.Msg.SENSOR_POTENTIOMETER = "Potentiometer";
Blockly.Msg.SENSOR_POTENTIOMETER_GETSAMPLE_TOOLTIP = "Gibt den aktuellen Wert des Potentiometers in Volt. Der Wert ist zwischen 0 und 5V.";
Blockly.Msg.SENSOR_PULSE = "Pulssensor";
Blockly.Msg.SENSOR_PULSE_GETSAMPLE_TOOLTIP = "Gibt den aktuellen Wert des Pulssensors zurück.";
Blockly.Msg.SENSOR_PULSE_GETSAMPLE_TOOLTIP_ARDUINO = "Gibt den aktuellen Wert des Pulssensors zurück. Der Wert ist zwischen 0 und 1023.";
Blockly.Msg.SENSOR_RADIO_RSSI = "Radio RSSI Sensor";
Blockly.Msg.SENSOR_RESET = "Setze";
Blockly.Msg.SENSOR_RESET_II = "zurück";
Blockly.Msg.SENSOR_RFID = "RFID Reader";
Blockly.Msg.SENSOR_RFID_ARDUINO = "RFID-RC522 Reader";
Blockly.Msg.SENSOR_RFID_GETSAMPLE_TOOLTIP = "Gibt den aktuellen Wert des RFID Readers zurück.";
Blockly.Msg.SENSOR_RSSI = "Empfangsstärke";
Blockly.Msg.SENSOR_RSSI_VALUE_GETSAMPLE_TOOLTIP = "Gibt die Signalstärke der letzten Nachricht zurück.";
Blockly.Msg.SENSOR_SONAR = "Ultraschallsensor";
Blockly.Msg.SENSOR_SOUND = "Geräuschsensor";
Blockly.Msg.SENSOR_SOUND_CALLIOPE = "Mikrofon";
Blockly.Msg.SENSOR_TEMPERATURE = "Temperatursensor";
Blockly.Msg.SENSOR_TEMPERATURE_ARDUINO = "Temperatursensor TMP36";
Blockly.Msg.SENSOR_TEMPERATURE_SENSEBOX = "Temperatur/Luftdruck Sensor BMP280";
Blockly.Msg.SENSOR_TIME = "Zeit";
Blockly.Msg.SENSOR_TIMER = "Zeitgeber";
Blockly.Msg.SENSOR_TOP = "oben";
Blockly.Msg.SENSOR_TOUCH = "Berührungssensor";
Blockly.Msg.SENSOR_ULTRASONIC = "Ultraschallsensor";
Blockly.Msg.SENSOR_ULTRASONIC_ARDUINO = "Ultraschallsensor HC-SR04";
Blockly.Msg.SENSOR_ULTRASONIC_DISTANCE_GETSAMPLE_TOOLTIP_ARDUINO = "Gibt den aktuellen Wert des Ultraschallsensors in cm zurück. Die weiteste Entfernung ist 400 cm.";
Blockly.Msg.SENSOR_ULTRASONIC_DISTANCE_GETSAMPLE_TOOLTIP_MBOT = "Gibt den aktuellen Wert des Ultraschallsensors in cm zurück. Die weiteste Entfernung ist 400 cm. Die näheste Entfernung ist 3 cm.";
Blockly.Msg.SENSOR_UNIT_ACCEL = "m/s²";  // untranslated
Blockly.Msg.SENSOR_UNIT_AMPERE = "A";  // untranslated
Blockly.Msg.SENSOR_UNIT_CM = "cm";  // untranslated
Blockly.Msg.SENSOR_UNIT_DEGREE = "°";  // untranslated
Blockly.Msg.SENSOR_UNIT_MILLIG = "milli-g";  // untranslated
Blockly.Msg.SENSOR_UNIT_MM = "mm";  // untranslated
Blockly.Msg.SENSOR_UNIT_MS = "ms";  // untranslated
Blockly.Msg.SENSOR_UNIT_NEWTON = "N";  // untranslated
Blockly.Msg.SENSOR_UNIT_OMEGA = "ω";  // untranslated
Blockly.Msg.SENSOR_UNIT_PASCAL = "Pascal";  // untranslated
Blockly.Msg.SENSOR_UNIT_PERCENT = "%";  // untranslated
Blockly.Msg.SENSOR_UNIT_VOLT = "V";  // untranslated
Blockly.Msg.SENSOR_VALUE = "Wert";
Blockly.Msg.SENSOR_WALL = "Wandsensor";
Blockly.Msg.SERVER_NOT_AVAILABLE = "Das Open Roberta Lab ist zur Zeit nicht erreichbar. </br>Die Internetverbindung wurde unterbrochen. Solltest du gerade einen EV3 mit dem USB-Kabel verbunden haben, genügt ein Klick auf die Programmieroberfläche.<br> Falls das Problem weiterhin besteht, überprüfe deine Internetverbindung und lade diese Webseite neu. Sollte das Problem erneut auftreten, schreibe bitte eine Mail an folgende Adresse:</br>support-o-r@iais.fraunhofer.de";
Blockly.Msg.SERVO_MOTOR = "servo motor";  // untranslated
Blockly.Msg.SERVO_MOTOR_ARDUINO = "servo motor SG90";  // untranslated
Blockly.Msg.SERVO_TOOLTIP = "Block für den Servomotor.";
Blockly.Msg.SET = "Setze";
Blockly.Msg.SETLANGUAGE_TOOLTIP = "Setzt die Sprache für den Sage Block.";
Blockly.Msg.SET_LED = "Schalte LED";
Blockly.Msg.SET_RELAY = "Schalte Relais";
Blockly.Msg.SET_RELAY_ARDUINO = "Schalte Relais SRD-05VDC-SL-C";
Blockly.Msg.SET_RELAY_TOOLTIP = "Turns the relay on or off";  // untranslated
Blockly.Msg.SET_RGB_LED = "turn RGB LED";  // untranslated
Blockly.Msg.SIDE_BRUSH_OFF = "turn side brush off";
Blockly.Msg.SIDE_BRUSH_OFF_TOOLTIP = "Turns the side brush off.";
Blockly.Msg.SIDE_BRUSH_STATUS = "Seitliche Staubbürste";
Blockly.Msg.SIDE_BRUSH_TOOLTIP = "Turns the side brush on or off .";
Blockly.Msg.SIM_BLOCK_NOT_SUPPORTED = "Diesen Block kann man leider nicht in der Simulation verwenden!";
Blockly.Msg.SIM_CONFIGURATION_WARNING_SENSOR_MISSING = "Dieser Sensor ist nicht in der Roboterkonfiguration. Das Verhalten des Programmes auf dem realen Roboter wird anders als erwartet sein, bitte überprüfe die Roboterkonfiguration";
Blockly.Msg.SIM_CONFIGURATION_WARNING_WRONG_INFRARED_SENSOR_PORT = "In der Simulation wird der Infrarotsensor durch den Ultraschallsensor ersetzt. Das Verhalten des Programmes auf dem realen Roboter wird anders als erwartet sein, bitte überprüfe die Roboterkonfiguration";
Blockly.Msg.SIM_CONFIGURATION_WARNING_WRONG_SENSOR_PORT = "In diesem Block hast du einen falschen Sensorport angegeben! Das Verhalten des Programmes auf dem realen Roboter wird anders als erwartet sein, bitte überprüfe die Roboterkonfiguration";
Blockly.Msg.SINGLE_MOTOR_ON_TOOLTIP_CALLIOPE = "Startet den einzelen Motor mit einer bestimmten Leistung, -100% - 100%, wobei negative Werte die Drehrichtung umkehren";
Blockly.Msg.SLEEP = "sleep";  // untranslated
Blockly.Msg.SLOT_FRONT = "vorne";
Blockly.Msg.SLOT_LEFT = "links";
Blockly.Msg.SLOT_LEFT_PITCH = "links Nicken";
Blockly.Msg.SLOT_LEFT_ROLL = "links Rollen";
Blockly.Msg.SLOT_LEFT_YAW = "links Gieren";
Blockly.Msg.SLOT_LEFT_YAW_PITCH = "links Gieren/Nicken";
Blockly.Msg.SLOT_MIDDLE = "mitte";
Blockly.Msg.SLOT_PITCH = "Nicken";
Blockly.Msg.SLOT_REAR = "hinten";
Blockly.Msg.SLOT_RIGHT = "rechts";
Blockly.Msg.SLOT_RIGHT_PITCH = "rechts Nicken";
Blockly.Msg.SLOT_RIGHT_ROLL = "rechts Rollen";
Blockly.Msg.SLOT_RIGHT_YAW = "rechts Gieren";
Blockly.Msg.SLOT_RIGHT_YAW_PITCH = "rechts Gieren/Nicken";
Blockly.Msg.SLOT_SIDE = "side";  // untranslated
Blockly.Msg.SLOT_TILTED_ANY = "irgendwie";
Blockly.Msg.SLOT_TILTED_BACK = "hinten";
Blockly.Msg.SLOT_TILTED_DOWN = "abwärts";
Blockly.Msg.SLOT_TILTED_FRONT = "vorne";
Blockly.Msg.SLOT_TILTED_NO = "nicht";
Blockly.Msg.SLOT_TILTED_UP = "aufwärts";
Blockly.Msg.SLOT_YAW = "Gieren";
Blockly.Msg.SOUND_GETSAMPLE_TOOLTIP = "Gibt den aktuellen Wert des Geräuschsensors im Intervall 0 bis 100 zurück. 0 ist leise und 100 laut.";
Blockly.Msg.SOUND_TOOLTIP = "Block für den Geräuschsensor.";
Blockly.Msg.SSID = "SSID";
Blockly.Msg.START = "Starte";
Blockly.Msg.START_ACTIVITY = "Aktivität";
Blockly.Msg.START_ACTIVITY_TOOLTIP = "Startet zusätzliche Aktivität.";
Blockly.Msg.START_PROGRAM = "Start";
Blockly.Msg.START_PROGRAM_AUTOMOMOUSLIFE = "autonomes Verhalten";
Blockly.Msg.START_PROGRAM_DEBUG = "zeige Sensordaten";
Blockly.Msg.START_TOOLTIP = "Startblock für das Hauptprogramm.";
Blockly.Msg.STEPMOTOR_TOOLTIP = "Block für den Schrittmotor.";
Blockly.Msg.STEPS_PER_REVOLUTION = "Schritte pro Umdrehung";
Blockly.Msg.STEP_MOTOR = "step motor";  // untranslated
Blockly.Msg.STEP_MOTOR_ARDUINO = "step motor 28BYJ-48";  // untranslated
Blockly.Msg.STEP_MOTOR_ON_TOOLTIP = "Turns motor on with a provided speed in rpm and stops motor after execution of provided number of rotations.";  // untranslated
Blockly.Msg.STRENGTH = "Stärke";
Blockly.Msg.SWITCH = "Schalte";
Blockly.Msg.SWITCH_LED_MATRIX_TOOLTIP = "Aktiviert/Deaktiviert die LED Matrix um die doppelt belegten Pins zu nutzen.";
Blockly.Msg.TAB_CONFIGURATION = "Roboterkonfiguration";
Blockly.Msg.TAB_PROGRAM = "Programm";
Blockly.Msg.TEMPERATURE_GETSAMPLE_TOOLTIP = "Gibt den aktuellen Wert des Temperatursensors im °C zurück.";
Blockly.Msg.TEMPERATURE_TOOLTIP = "Block für den Temperatursensor.";
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "append text";  // untranslated
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "to";  // untranslated
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Append some text to the first text.";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "to lower case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "to Title Case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "to UPPER CASE";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Return a copy of the text in a different case.";  // untranslated
Blockly.Msg.TEXT_CHARAT_FIRST = "get first letter";  // untranslated
Blockly.Msg.TEXT_CHARAT_FROM_END = "get letter # from end";  // untranslated
Blockly.Msg.TEXT_CHARAT_FROM_START = "get letter #";  // untranslated
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "in text";  // untranslated
Blockly.Msg.TEXT_CHARAT_LAST = "get last letter";  // untranslated
Blockly.Msg.TEXT_CHARAT_RANDOM = "get random letter";  // untranslated
Blockly.Msg.TEXT_CHARAT_TAIL = "";  // untranslated
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Returns the letter at the specified position.";  // untranslated
Blockly.Msg.TEXT_COMMENT_TOOLTIP = "Dokumentiere dein Programm mit diesem Block, damit du und andere es später leichter haben, dein Programm zu verstehen. Dieser Kommentar wird auch im generierten Source Code zu sehen sein.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Add an item to the text.";  // untranslated
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "join";  // untranslated
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Add, remove, or reorder sections to reconfigure this text block.";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "to letter # from end";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "to letter #";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "to last letter";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "in text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "get substring from first letter";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "get substring from letter # from end";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "get substring from letter #";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Returns a specified portion of the text.";  // untranslated
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "in text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "find first occurrence of text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "find last occurrence of text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_TAIL = "";  // untranslated
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Returns the index of the first/last occurrence of the first text in the second text. Returns 0 if text is not found.";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 is empty";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Returns true if the provided text is empty.";  // untranslated
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "create text with";  // untranslated
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Create a piece of text by joining together any number of items.";  // untranslated
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "length of %1";  // untranslated
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Returns the number of letters (including spaces) in the provided text.";  // untranslated
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "print %1";  // untranslated
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Print the specified text, number or other value.";  // untranslated
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Prompt for user for a number.";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Prompt for user for some text.";  // untranslated
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "prompt for number with message";  // untranslated
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "prompt for text with message";  // untranslated
Blockly.Msg.TEXT_TEXT_HELPURL = "https://en.wikipedia.org/wiki/String_(computer_science)";  // untranslated
Blockly.Msg.TEXT_TEXT_TOOLTIP = "A letter, word, or line of text.";  // untranslated
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "trim spaces from both sides of";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "trim spaces from left side of";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "trim spaces from right side of";  // untranslated
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Return a copy of the text with spaces removed from one or both ends.";  // untranslated
Blockly.Msg.THETA = "Theta";
Blockly.Msg.TIMEOUT = "Auszeit";
Blockly.Msg.TIMER_GETSAMPLE_TOOLTIP = "Gibt den aktuellen Wert des Zeitgebers zurück.";
Blockly.Msg.TIMER_RESET_TOOLTIP = "Setzt den Zeitgeber zurück.";
Blockly.Msg.TITLE = "Titel";
Blockly.Msg.TO = "an";
Blockly.Msg.TODAY = "Today";  // untranslated
Blockly.Msg.TOOLBOX_ACTION = "Aktion";
Blockly.Msg.TOOLBOX_ANIMATION = "Animation";  // untranslated
Blockly.Msg.TOOLBOX_CLEANING = "Reinigung";
Blockly.Msg.TOOLBOX_COLOUR = "Farben";
Blockly.Msg.TOOLBOX_COMMUNICATION = "Nachrichten";
Blockly.Msg.TOOLBOX_CONTROL = "Kontrolle";
Blockly.Msg.TOOLBOX_DECISION = "Entscheidungen";
Blockly.Msg.TOOLBOX_DISPLAY = "Anzeige";
Blockly.Msg.TOOLBOX_DRIVE = "Fahren";
Blockly.Msg.TOOLBOX_IMAGE = "Bilder";
Blockly.Msg.TOOLBOX_LIGHT = "Statusleuchte";
Blockly.Msg.TOOLBOX_LIST = "Listen";
Blockly.Msg.TOOLBOX_LOGIC = "Logik";
Blockly.Msg.TOOLBOX_LOOP = "Schleifen";
Blockly.Msg.TOOLBOX_MATH = "Mathematik";
Blockly.Msg.TOOLBOX_MOVE = "Bewegen";
Blockly.Msg.TOOLBOX_PIN = "Pin";  // untranslated
Blockly.Msg.TOOLBOX_PROCEDURE = "Funktionen";
Blockly.Msg.TOOLBOX_SENSOR = "Sensoren";
Blockly.Msg.TOOLBOX_SOUND = "Klang";
Blockly.Msg.TOOLBOX_TEXT = "Text";
Blockly.Msg.TOOLBOX_VARIABLE = "Variablen";
Blockly.Msg.TOOLBOX_VISION = "Vision";  // untranslated
Blockly.Msg.TOOLBOX_WAIT = "Warten";
Blockly.Msg.TOOLBOX_WALK = "Gehen";
Blockly.Msg.TOUCH_ISPRESSED_TOOLTIP = "Ist der Berührungssensor gedrückt?";
Blockly.Msg.TOUCH_TOOLTIP = "Block für den Berührungssensor.";
Blockly.Msg.TOUR1_DESCRIPTION00 = "weiter";
Blockly.Msg.TOUR1_DESCRIPTION01 = "Herzlich willkommen,<br>mit »weiter« startest du eine Tour durch das Open Roberta Lab.<br>Ich zeige dir hier, wie du mit NEPO einen Roboter programmieren kannst.<br>Du kannst diese Tour jederzeit beenden. Klicke einfach auf das »X« rechts oben in der Ecke.";
Blockly.Msg.TOUR1_DESCRIPTION02 = "Die Menüleiste ,-)";
Blockly.Msg.TOUR1_DESCRIPTION03 = "Hier findest du alles, was du rund um die Roboterprogrammierung brauchst!<br><span class='typcn typcn-document-text'></span> Programme speichern und wieder aufrufen<br><span class='typcn typcn-ev3'></span> Deinen Roboter mit dem Open Roberta Lab verbinden oder zu einem anderen System wechseln<br><span class='typcn typcn-lightbulb'></span> Hilfe für alles was schiefgehen kann<br><span class='typcn typcn-user'></span> Alles rund um dein Benutzerkonto, z. B. anmelden oder abmelden<br><span class='typcn typcn-th-large-outline'></span> Schau dir tolle Programme von anderen an und probiere sie direkt aus!<br><span class='typcn typcn-world'></span> Klicke auf die Weltkugel um die Sprache zu wechseln";
Blockly.Msg.TOUR1_DESCRIPTION04 = "Klick hier und wechsle zur Roboterkonfiguration!";
Blockly.Msg.TOUR1_DESCRIPTION05 = "Die Roboterkonfiguration kannst du später anpassen,<br>wenn du einen anderen Roboter aufbaust.<br>Wenn du keinen Roboter hast und dein Programm in der Simulation ausprobierst,<br>dann gelten immer diese Einstellung.";
Blockly.Msg.TOUR1_DESCRIPTION06 = "Klicke hier und wechsle zurück zur Programmierung!";
Blockly.Msg.TOUR1_DESCRIPTION07 = "Dein Werkzeugkasten oder auch die  Toolbox.<br>Hier gibt es die Programmierblöcke.";
Blockly.Msg.TOUR1_DESCRIPTION07a = "Wenn du dich schon gut auskennst kannst du hier in den Expertenmodus der Toolbox wechseln.<br>Dort findest du dann noch mehr Blöcke um deinen Roboter zu programmieren.<br><span class='typcn typcn-media-stop-outline'></span> Anfänger<br><span class='typcn typcn-star-outline'></span> Experte";
Blockly.Msg.TOUR1_DESCRIPTION08 = "Jedes Programm beginnt mit dem »Programmstart-Block«.<br>";
Blockly.Msg.TOUR1_DESCRIPTION09 = "Hier gibt es die Schnell-Start-Knöpfe!<br>Von links nach rechts:<br><span class='typcn typcn-media-play'></span> Klicke hier um dein Programm auf dem richtigen Roboter auszuführen<br><span class='typcn typcn-cloud-storage'></span> Hiermit kannst du dein Programm speichern, Achtung: dazu benötigst du ein Benutzerkonto<br><span class='typcn typcn-zoom'></span> Zu groß, zu klein? KLicke hier und passe die Größe der Blöcke für dich an<br><span class='typcn typcn-archive'></span> Der Mülleimer! Ziehe Blöcke die du nicht mehr benötigst einfach hier herein.<br>&nbsp,&nbsp,&nbsp,&nbsp,&nbsp,&nbsp, Achtung: Du kannst sie nicht wieder herausholen!<br>";
Blockly.Msg.TOUR1_DESCRIPTION10 = "Klicke auf Aktion";
Blockly.Msg.TOUR1_DESCRIPTION12 = "Halte die Maus gedrückt und ziehe den Block unter den Startblock!";
Blockly.Msg.TOUR1_DESCRIPTION13 = "Öffne nun die Simulation ...";
Blockly.Msg.TOUR1_DESCRIPTION13a = "und probiere dein Programm in der Simulation aus!";
Blockly.Msg.TOUR1_DESCRIPTION15 = "Super,<br>dein Roboter ist jetzt 20 cm vorwärts gefahren,<br>genau wie du es programmiert hast!";
Blockly.Msg.TOUR1_DESCRIPTION16 = "Tschüss und viel Spaß beim Ausprobieren!";
Blockly.Msg.ULTRASONIC_GETSAMPLE_TOOLTIP = "Gibt den aktuellen Wert des Ultraschallsensors in cm zurück. Die weiteste Entfernung ist 255 cm.";
Blockly.Msg.ULTRASONIC_TOOLTIP = "Block für den Ultraschallsensor.";
Blockly.Msg.UNDO = "Undo";  // untranslated
Blockly.Msg.VACUUM_OFF = "Stoppe Saugdüse";
Blockly.Msg.VACUUM_OFF_TOOLTIP = "Turns the vacuum off.";
Blockly.Msg.VACUUM_ON = "Stelle Saugdüse an %";
Blockly.Msg.VACUUM_ON_TOOLTIP = "Turns on the vacuum speed in procent";
Blockly.Msg.VALIDATION_CONTAINS_SPECIAL_CHARACTERS = "Gültige Sonderzeichen sind: =+!?.,%#+&^@_-";
Blockly.Msg.VALIDATION_FIELD_REQUIRED = "Dieses Feld darf nicht leer sein!";
Blockly.Msg.VALIDATION_MAX_LENGTH = "Gib höchstens 25 Zeichen ein!";
Blockly.Msg.VALIDATION_PASSWORD_MIN_LENGTH = "Gib mindestens 6 Zeichen ein!";
Blockly.Msg.VALIDATION_SECOND_PASSWORD_EQUAL = "Die beiden Passwörter müssen gleich sein!";
Blockly.Msg.VALIDATION_TOKEN_LENGTH = "Der Token hat 8 Zeichen!";
Blockly.Msg.VALIDATION_VALID_EMAIL_ADDRESS = "Die E-Mail-Adresse ist nicht gültig!";
Blockly.Msg.VALUE_TO = "Wert auf";
Blockly.Msg.VARIABLES_DEFAULT_NAME = "item";  // untranslated
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Create 'set %1'";  // untranslated
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Returns the value of this variable.";  // untranslated
Blockly.Msg.VARIABLES_GLOBAL_DECLARE_TOOLTIP = "Deklariert eine globale Variable.";
Blockly.Msg.VARIABLES_LOCAL_DECLARE_TOOLTIP = "Deklariert eine lokale Variable.";
Blockly.Msg.VARIABLES_SET = "set %1 to %2";  // untranslated
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Create 'get %1'";  // untranslated
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Sets this variable to be equal to the input.";  // untranslated
Blockly.Msg.VARIABLES_TITLE = "Variable";
Blockly.Msg.VARIABLES_TYPE_ARRAY_BOOLEAN = "Liste logischer Wert";
Blockly.Msg.VARIABLES_TYPE_ARRAY_COLOUR = "Liste Farbe";
Blockly.Msg.VARIABLES_TYPE_ARRAY_CONNECTION = "Liste Verbindung";
Blockly.Msg.VARIABLES_TYPE_ARRAY_IMAGE = "Liste Bild";
Blockly.Msg.VARIABLES_TYPE_ARRAY_NUMBER = "Liste Zahl";
Blockly.Msg.VARIABLES_TYPE_ARRAY_STRING = "Liste Zeichenkette";
Blockly.Msg.VARIABLES_TYPE_BOOLEAN = "logischer Wert";
Blockly.Msg.VARIABLES_TYPE_COLOUR = "Farbe";
Blockly.Msg.VARIABLES_TYPE_CONNECTION = "Verbindung";
Blockly.Msg.VARIABLES_TYPE_IMAGE = "Bild";
Blockly.Msg.VARIABLES_TYPE_NUMBER = "Zahl";
Blockly.Msg.VARIABLES_TYPE_STRING = "Zeichenkette";
Blockly.Msg.VARIABLE_USED_BEFORE_DECLARATION = "The variable is used before declaration.";  // untranslated
Blockly.Msg.VOICE_PITCH = "Stimmlage";
Blockly.Msg.VOICE_SPEED = "Sprechgeschwindigkeit";
Blockly.Msg.WAIT = "Warte ms";
Blockly.Msg.WAIT_FOR_TOOLTIP = "Wartet auf Sensorwerte.";
Blockly.Msg.WAIT_OR = "oder warte bis";
Blockly.Msg.WAIT_TIME_TOOLTIP = "Wartet für eine bestimmte Zeit in Millisekunden.";
Blockly.Msg.WAIT_TOOLTIP = "Wartet bis eine Bedingung wahr wird.";
Blockly.Msg.WAIT_UNTIL = "Warte bis";
Blockly.Msg.WIRELESS_TOOLTIP = "Block für die drahtlose Verbindung";
Blockly.Msg.WRITE_TO_PIN_TOOLTIP = "Sends the value to chosen pin.";  // untranslated
Blockly.Msg.X = "x";  // untranslated
Blockly.Msg.XEND = "X-Wertebereich Ende";
Blockly.Msg.XLABEL = "X-Achsen Beschriftung";
Blockly.Msg.XSTART = "X-Wertebereich Anfang";
Blockly.Msg.XTICK = "X-Linienabstand";
Blockly.Msg.Y = "y";  // untranslated
Blockly.Msg.YAW = "yaw";  // untranslated
Blockly.Msg.YEND = "Y-Wertebereich Ende";
Blockly.Msg.YES = "ja";
Blockly.Msg.YLABEL = "Y-Achsen Beschriftung";
Blockly.Msg.YOUNGER_THEN_14 = "Ich bin jünger als 16!";
Blockly.Msg.YSTART = "Y-Wertebereich Anfang";
Blockly.Msg.YTICK = "Y-Linienabstand";
Blockly.Msg.Z = "z";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.SENSOR_PINTOUCH_PRESSED_GETSAMPLE_TOOLTIP = Blockly.Msg.PIN_ISTOUCHED_TOOLTIP;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.KEY_GETSAMPLE_TOOLTIP = Blockly.Msg.KEY_ISPRESSED_TOOLTIP;
Blockly.Msg.SENSOR_INFRARED_GETSAMPLE_TOOLTIP = Blockly.Msg.INFRARED_GETSAMPLE_TOOLTIP;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.MODE_DOWN = Blockly.Msg.SENSOR_GESTURE_DOWN;
Blockly.Msg.SENSOR_ULTRASONIC_GETSAMPLE_TOOLTIP = Blockly.Msg.ULTRASONIC_GETSAMPLE_TOOLTIP;
Blockly.Msg.MODE_SHAKE = Blockly.Msg.SENSOR_GESTURE_SHAKE;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.SENSOR_ENCODER_GETSAMPLE_TOOLTIP = Blockly.Msg.ENCODER_GETSAMPLE_TOOLTIP;
Blockly.Msg.MODE_FACE_UP = Blockly.Msg.SENSOR_GESTURE_FACE_UP;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.MODE_FACE_DOWN = Blockly.Msg.SENSOR_GESTURE_FACE_DOWN;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.SENSOR_COLOUR_GETSAMPLE_TOOLTIP = Blockly.Msg.COLOUR_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_SOUND_GETSAMPLE_TOOLTIP_CALLIOPE = Blockly.Msg.MICROPHONE_GETSAMPLE_TOOLTIP;
Blockly.Msg.MODE_FREEFALL = Blockly.Msg.SENSOR_GESTURE_FREEFALL;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.SENSOR_TIMER_GETSAMPLE_TOOLTIP = Blockly.Msg.TIMER_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_ACCELEROMETER_VALUE_GETSAMPLE_TOOLTIP = Blockly.Msg.ACCELEROMETER_ROTATION_TOOLTIP;
Blockly.Msg.ORA_ROBOT_PUSH_RUN = Blockly.Msg.MESSAGE_EDIT_START;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.MODE_UP = Blockly.Msg.SENSOR_GESTURE_UP;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.SENSOR_GYRO_GETSAMPLE_TOOLTIP = Blockly.Msg.GYRO_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_BATTERY_GETSAMPLE_TOOLTIP = Blockly.Msg.BATTERY_GETSAMPLE_TOOLTIP;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.SENSOR_LIGHT_GETSAMPLE_TOOLTIP = Blockly.Msg.LIGHT_GETSAMPLE_TOOLTIP;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.SENSOR_INFRARED_PRESENCE_GETSAMPLE_TOOLTIP = Blockly.Msg.INFRARED_PRESENCE_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_COMPASS_GETSAMPLE_TOOLTIP = Blockly.Msg.COMPASS_GETSAMPLE_TOOLTIP;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.SENSOR_SOUND_GETSAMPLE_TOOLTIP = Blockly.Msg.SOUND_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_FLAME_GETSAMPLE_TOOLTIP = Blockly.Msg.FLAME_GETSAMPLE_TOOLTIP;
Blockly.Msg.TOUCH_GETSAMPLE_TOOLTIP = Blockly.Msg.TOUCH_ISPRESSED_TOOLTIP;
Blockly.Msg.SENSOR_INFRARED_DISTANCE_GETSAMPLE_TOOLTIP = Blockly.Msg.INFRARED_DISTANCE_GETSAMPLE_TOOLTIP;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.SENSOR_KEY_GETSAMPLE_TOOLTIP = Blockly.Msg.KEY_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_TEMPERATURE_GETSAMPLE_TOOLTIP = Blockly.Msg.TEMPERATURE_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_TOUCH_GETSAMPLE_TOOLTIP = Blockly.Msg.TOUCH_GETSAMPLE_TOOLTIP;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
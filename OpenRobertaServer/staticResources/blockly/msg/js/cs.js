// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.cs');

goog.require('Blockly.Msg');

Blockly.Msg.ABOUT = "about";  // untranslated
Blockly.Msg.ACCELERATION_TOOLTIP = "Vrátí hodnotu zrychlení v násobcích g (mili-g).";
Blockly.Msg.ACCELEROMETER_ROTATION_TOOLTIP = "Get the tilt or rotations in degrees.";  // untranslated
Blockly.Msg.ACTION_ANALOGIN = "actuator analog";  // untranslated
Blockly.Msg.ACTION_BUZZER = "buzzer";  // untranslated
Blockly.Msg.ACTION_BUZZER_ARDUINO = "buzzer HYT120";  // untranslated
Blockly.Msg.ACTION_DIGITALIN = "actuator digital";  // untranslated
Blockly.Msg.ACTION_EVAL = "eval";  // untranslated
Blockly.Msg.ACTION_EVAL_AS = "as";  // untranslated
Blockly.Msg.ACTION_IN = "actuator";  // untranslated
Blockly.Msg.ACTION_INFRARED = "infrared emitter";  // untranslated
Blockly.Msg.ACTION_LCD = "LCD 1602";  // untranslated
Blockly.Msg.ACTION_LCDI2C = "LCD 1602 I²C";  // untranslated
Blockly.Msg.ACTION_LCDI2C_SENSEBOX = "OLED Display I²C";  // untranslated
Blockly.Msg.ACTION_LED = "LED";  // untranslated
Blockly.Msg.ACTION_MOTOR = "motor";  // untranslated
Blockly.Msg.ACTION_PLAY = "play";  // untranslated
Blockly.Msg.ACTION_PLOTTING = "plot";  // untranslated
Blockly.Msg.ACTION_PLOT_CLEAR = "clear the plot";  // untranslated
Blockly.Msg.ACTION_PLOT_POINT = "plot a point";  // untranslated
Blockly.Msg.ACTION_PLOT_POINT_TOOLTIP = "plot a point with specified value (Y axis) at the specified tickmark (X axis)";  // untranslated
Blockly.Msg.ACTION_PLOT_TICKMARK = "at tickmark";  // untranslated
Blockly.Msg.ACTION_RELAY = "relay SRD-05VDC-SL-C";  // untranslated
Blockly.Msg.ACTION_RGBLED = "RGB LED";  // untranslated
Blockly.Msg.ACTION_SDCARD = "SD card";  // untranslated
Blockly.Msg.ACTION_SERIAL_PRINT = "show on Serial Monitor";  // untranslated
Blockly.Msg.ACTION_SERIAL_PRINT_TOOLTIP = "Show data on the Serial Monitor. You can find the Serial Monitor in the USB Programm on top, under View.";  // untranslated
Blockly.Msg.ACTION_SERVO = "servo motor";  // untranslated
Blockly.Msg.ACTION_SERVO_ARDUINO = "servo motor SG90";  // untranslated
Blockly.Msg.ACTION_STEPMOTOR = "step motor";  // untranslated
Blockly.Msg.ACTION_WIRELESS = "WiFi connection";  // untranslated
Blockly.Msg.ACTIVITY_TOOLTIP = "Značka pro doplňkovou aktivitu.";
Blockly.Msg.ACTOR_MODE_ANALOGIN_TOOLTIP = "Writes an analog value (PWM wave) to a pin. Only values between 0 and 255 should be used";  // untranslated
Blockly.Msg.ACTOR_MODE_DIGITALIN_TOOLTIP = "Writes a HIGH or a LOW value to a digital pin. Only the values HIGH »1« and LOW »0« should be used.";  // untranslated
Blockly.Msg.ACTOR_TOOLTIP = "Představuje libovolné výstupní zařízení.";
Blockly.Msg.ADD_COMMENT = "Add Comment";  // untranslated
Blockly.Msg.ANALOG = "analogový";
Blockly.Msg.ANALOGIN_TOOLTIP = "Represents any actuator connected to an analog pin";  // untranslated
Blockly.Msg.ANALOGOUT_TOOLTIP = "Represents any sensor connected to an analog pin";  // untranslated
Blockly.Msg.AND = "and";  // untranslated
Blockly.Msg.ARDUBRICK_TOOLTIP = "Představuje desku Bot'n Roll s připojenými pohony a senzory. Jsou zde také dostupné zabudované pohony a senzory, například tlačítka, displej...";
Blockly.Msg.AUTH = "Please authorize this app to enable your work to be saved and to allow it to be shared by you.";  // untranslated
Blockly.Msg.BATTERY_GETSAMPLE_TOOLTIP = "Gets the current voltage from the battery.";  // untranslated
Blockly.Msg.BLOCK_NOT_EXECUTED = "Provedení tohoto bloku nebude mít žádný efekt!";
Blockly.Msg.BOB3_READNUMBER_TOOLTIP = "Vrátí dříve uložené číslo.";
Blockly.Msg.BOB3_RECALL_NUMBER = "vrátí číslo";
Blockly.Msg.BOB3_REMEMBER_NUMBER = "zapamatuje si číslo";
Blockly.Msg.BOB3_SAVENUMBER_TOOLTIP = "Ukládané číslo by mělo být celé v od 0 do 255";
Blockly.Msg.BOTH = "obě";
Blockly.Msg.BOX_ID = "Device ID";  // untranslated
Blockly.Msg.BRICKLIGHT = "LED na kostce";
Blockly.Msg.BRICKLIGHT_BLUE = "modrá";
Blockly.Msg.BRICKLIGHT_COLOR = "barva";
Blockly.Msg.BRICKLIGHT_DOUBLE_FLASH = "dvakrát bliká";
Blockly.Msg.BRICKLIGHT_FLASH = "bliká";
Blockly.Msg.BRICKLIGHT_GREEN = "zelená";
Blockly.Msg.BRICKLIGHT_OFF_TOOLTIP = "Vypnout LED na kostce.";
Blockly.Msg.BRICKLIGHT_ON = "zapnuto";
Blockly.Msg.BRICKLIGHT_ON_TOOLTIP = "Zapnout LED na kostce.";
Blockly.Msg.BRICKLIGHT_ORANGE = "oranžová";
Blockly.Msg.BRICKLIGHT_RED = "červená";
Blockly.Msg.BRICKLIGHT_RESET_TOOLTIP = "Resetovat LED na kostce. Nastaví původní stav: blikající zelená.";
Blockly.Msg.BRICKNAME_WEDO = "WeDo";  // untranslated
Blockly.Msg.BRICK_IPADDRESS = "ip address";  // untranslated
Blockly.Msg.BRICK_PASSWORD = "password";  // untranslated
Blockly.Msg.BRICK_PHENOMENON = "Phenomenon";  // untranslated
Blockly.Msg.BRICK_PORT = "port";  // untranslated
Blockly.Msg.BRICK_TRACK_WIDTH = "vzdálenost kol";
Blockly.Msg.BRICK_USERNAME = "user name";  // untranslated
Blockly.Msg.BRICK_WHEEL_DIAMETER = "průměr kola";
Blockly.Msg.BRUSH_OFF = "turn brush Off";  // untranslated
Blockly.Msg.BRUSH_OFF_TOOLTIP = "Turns the brush off.";  // untranslated
Blockly.Msg.BRUSH_ON = "turn brush on (RPM)";  // untranslated
Blockly.Msg.BRUSH_ON_TOOLTIP = "Turns on the brush with RPM of the motor (0<=RPM<=10000)";  // untranslated
Blockly.Msg.BUTTON_DO_UPLOAD_GALLERY = "Nahrát »$« do galerie";
Blockly.Msg.BUTTON_EMPTY_LIST = "Prázdný seznam";
Blockly.Msg.BUZZER_TOOLTIP = "Represents a buzzer";  // untranslated
Blockly.Msg.CALLIOPEBRICK_TOOLTIP = "Představuje Calliope, kapesní programovatelný počítač. Jsou zde také dostupné zabudované pohony a senzory, například tlačítka, displej...";
Blockly.Msg.CB_ALL = "Calli:bot all";  // untranslated
Blockly.Msg.CB_BOTH = "Calli:bot both";  // untranslated
Blockly.Msg.CB_LEFT = "Calli:bot left";  // untranslated
Blockly.Msg.CB_RIGHT = "Calli:bot right";  // untranslated
Blockly.Msg.CENTER = "prostřední";
Blockly.Msg.CHANGE_VALUE_TITLE = "Change value:";  // untranslated
Blockly.Msg.CHAT = "Chat with your collaborator by typing in this box!";  // untranslated
Blockly.Msg.CLEAN_UP = "Clean up Blocks";  // untranslated
Blockly.Msg.COLLAPSE_ALL = "Collapse Blocks";  // untranslated
Blockly.Msg.COLLAPSE_BLOCK = "Collapse Block";  // untranslated
Blockly.Msg.COLON = "colon";  // untranslated
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "colour 1";  // untranslated
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "colour 2";  // untranslated
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";  // untranslated
Blockly.Msg.COLOUR_BLEND_RATIO = "ratio";  // untranslated
Blockly.Msg.COLOUR_BLEND_TITLE = "blend";  // untranslated
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Blends two colours together with a given ratio (0.0 - 1.0).";  // untranslated
Blockly.Msg.COLOUR_GETSAMPLE_TOOLTIP = "Gets the current reading from the colour sensor.";  // untranslated
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://en.wikipedia.org/wiki/Color";  // untranslated
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Choose a colour from the palette.";  // untranslated
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "random colour";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Choose a colour at random.";  // untranslated
Blockly.Msg.COLOUR_RGB_BLUE = "blue";  // untranslated
Blockly.Msg.COLOUR_RGB_GREEN = "green";  // untranslated
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";  // untranslated
Blockly.Msg.COLOUR_RGB_RED = "red";  // untranslated
Blockly.Msg.COLOUR_RGB_TITLE = "colour with";  // untranslated
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Vytvoří barvu se zadanými hodnotami červené, zelené a modré složky. Všechny hodnoty musí být mezi 0 a 255.";
Blockly.Msg.COLOUR_RGB_WHITE = "bílá";
Blockly.Msg.COLOUR_TOOLTIP = "Představuje barevný senzor.";
Blockly.Msg.COMPASS_CALIBRATE_TOOLTIP = "Calibrates the compass. Turn the compass sensor VERY slowly for two times (about 40 seconds).";  // untranslated
Blockly.Msg.COMPASS_GETSAMPLE_TOOLTIP = "Gets the current reading from the compass sensor.";  // untranslated
Blockly.Msg.COMPASS_TOOLTIP = "Představuje kompas.";
Blockly.Msg.COMPASS_TOOLTIP_EV3 = "Represents a HiTechnic NXT compass sensor.";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_ACTOR_MISSING = "This actuator is not set to the port!";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_MOTORS_ROTATION_DIRECTION = "Levý a pravý motor mají různé směry otáčení!";
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_LEFT_MISSING = "Levý motor chybí v konfiguraci!";
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_LEFT_UNREGULATED = "Levý motor není regulovaný!";
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_MISSING = "Motor není připojen k danému portu!";
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_RIGHT_MISSING = "Pravý motor chybí v konfiguraci!";
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_RIGHT_UNREGULATED = "Pravý motor není regulovaný!";
Blockly.Msg.CONFIGURATION_ERROR_MULTIPLE_LEFT_MOTORS = "V konfiguraci je přiřazeno více levých motorů!";
Blockly.Msg.CONFIGURATION_ERROR_MULTIPLE_RIGHT_MOTORS = "V konfiguraci je přiřazeno více pravých motorů!";
Blockly.Msg.CONFIGURATION_ERROR_OTHER_NOT_SUPPORTED = "Other power consumer does not support this type of block!";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_SENSOR_MISSING = "Tento senzor není připojen do portu.";
Blockly.Msg.CONFIGURATION_ERROR_SENSOR_WRONG = "Do daného portu je připojen špatný senzor.";
Blockly.Msg.CONFIGURATION_ERROR_WLAN_CREDENTIALS_MISSING = "Missing WLAN credentials, please enter them in robot -> WLAN credentials ... !";  // untranslated
Blockly.Msg.CONFIGURATION_NO_PHENOMENON = "no phenomenon";  // untranslated
Blockly.Msg.CONFIGURATION_NO_PORT = "no port";  // untranslated
Blockly.Msg.CONFIGURATION_PORT = "Port1";  // untranslated
Blockly.Msg.CONFLIST_DELETE_ALL_TOOLTIP = "Klikni zde pro vymazání všech vybraných programů.";
Blockly.Msg.CONFLIST_DELETE_TOOLTIP = "Klikni zde pro vymazání konfigurace robota.";
Blockly.Msg.CONFLIST_LOAD_TOOLTIP = "Klikni zde pro nahrání nastavení robota do prostředí pro konfiguraci.";
Blockly.Msg.CONNECTION_CHECK = "je připojení robota %1 aktivní?";
Blockly.Msg.CONNECTION_CHECK_TOOLTIP = "Zkontrolujte, zda je připojení k robotovi aktivní.";
Blockly.Msg.CONNECTION_CONNECT = "připojit k robotovi";
Blockly.Msg.CONNECTION_FROM_CONNECTION = "z připojení";
Blockly.Msg.CONNECTION_FROM_ROBOT = "od robota";
Blockly.Msg.CONNECTION_MBED_RECEIVE_TOOLTIP = "Přečte zprávu z vybraného kanálu (0-255). Výchozí kanál je 0.";
Blockly.Msg.CONNECTION_MBED_SEND_TOOLTIP = "Pošle zprávu jinému systému. Můžete určit sílu signálu od 0 do 7 (0 je velice slabý, 7 nejsilnější). Zpráva je poslána prostřednictvím kanálu 0, pokud neurčíte jinak.";
Blockly.Msg.CONNECTION_OVER_CHANNEL = "přenosová cesta";
Blockly.Msg.CONNECTION_POWER = "se silou";
Blockly.Msg.CONNECTION_PROTOCOL_BLUETOOTH = "Bluetooth";
Blockly.Msg.CONNECTION_RECEIVED_DATA = "přijmi zprávu";
Blockly.Msg.CONNECTION_RECEIVE_TOOLTIP = "Čeká na zprávu od robota uvedeného v parametrech připojení.";
Blockly.Msg.CONNECTION_RECEIVE_TOOLTIP_BOB3 = "Reads a message via the IR receiver. Only numbers can be received.";  // untranslated
Blockly.Msg.CONNECTION_RECEIVE_TOOLTIP_MBOT = "Reads a message from the IR receiver. Only strings can be received.";  // untranslated
Blockly.Msg.CONNECTION_SEND_DATA = "pošli zprávu";
Blockly.Msg.CONNECTION_SEND_TOOLTIP = "Pošle zprávu jinému robotovi.";
Blockly.Msg.CONNECTION_SEND_TOOLTIP_BOB3 = "Sends a message of type number to another Bob3. Hold the Bob3's face to face!";  // untranslated
Blockly.Msg.CONNECTION_SEND_TOOLTIP_MBOT = "Sends a message of type string to another mBot. Hold the mBots's face to face!";  // untranslated
Blockly.Msg.CONNECTION_SET_CHANNEL = "nastav kanál na %1";
Blockly.Msg.CONNECTION_SET_CHANNEL_TOOLTIP = "Nastaví kanál pro vysílání a příjem. Hodnoty mohou být od 0 do 255.";
Blockly.Msg.CONNECTION_START_TOOLTIP = "Zkusí vytvořit připojení k jinému robotovi prostřednicvím Bluetooth.";
Blockly.Msg.CONNECTION_TOOLTIP = "Připojení k robotovi";
Blockly.Msg.CONNECTION_TO_CONNECTION = "připojení";
Blockly.Msg.CONNECTION_TO_ROBOT = "jméno robota";
Blockly.Msg.CONNECTION_WAIT_FOR_CONNECTION = "čeká na připojení";
Blockly.Msg.CONNECTION_WAIT_TOOLTIP = "Čeká na připojení pomocí Bluetooth.";
Blockly.Msg.CONNECTOR = "Connector";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "break out of loop";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "continue with next iteration of loop";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Break out of the containing loop.";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Skip the rest of this loop, and continue with the next iteration.";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Warning: This block may only be used within a loop.";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_TITLE = "for each item %1 in list %2";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "For each item in a list, set the variable '%1' to the item, and then do some statements.";  // untranslated
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg.CONTROLS_FOR_TITLE = "count with %1 from %2 while counter < %3 by %4";  // untranslated
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Have the variable '%1' take on the values from the start number as long as it is less than the end number, counting by the specified interval, and do the specified blocks.";  // untranslated
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Add a condition to the if block.";  // untranslated
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Add a final, catch-all condition to the if block.";  // untranslated
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Add, remove, or reorder sections to reconfigure this if block.";  // untranslated
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "else";  // untranslated
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "else if";  // untranslated
Blockly.Msg.CONTROLS_IF_MSG_IF = "if";  // untranslated
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "If a value is true, then do some statements.";  // untranslated
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "If a value is true, then do the first block of statements. Otherwise, do the second block of statements.";  // untranslated
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements.";  // untranslated
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements. If none of the values are true, do the last block of statements.";  // untranslated
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://en.wikipedia.org/wiki/For_loop";  // untranslated
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "do";  // untranslated
Blockly.Msg.CONTROLS_REPEAT_TITLE = "repeat %1 times";  // untranslated
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Do some statements several times.";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "repeat until";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "repeat while";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "While a value is false, then do some statements.";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "While a value is true, then do some statements.";  // untranslated
Blockly.Msg.DATATABLE_ACTUALIZATION = "Datum aktualizace.";
Blockly.Msg.DATATABLE_CONFIGURATIONS = "konfigurace";
Blockly.Msg.DATATABLE_CONFIGURATION_NAME = "Jméno konfigurace";
Blockly.Msg.DATATABLE_CREATED_BY = "Vytvořil";
Blockly.Msg.DATATABLE_CREATED_ON = "Datum vytvoření";
Blockly.Msg.DATATABLE_PROGRAMS = "programy";
Blockly.Msg.DATATABLE_PROGRAM_NAME = "Jméno programu";
Blockly.Msg.DATATABLE_SHARED = "Sdílené";
Blockly.Msg.DATATABLE_SHARED_WITH = "Sdílené s";
Blockly.Msg.DELETE_ALL_BLOCKS = "Delete all %1 blocks?";  // untranslated
Blockly.Msg.DELETE_BLOCK = "Delete Block";  // untranslated
Blockly.Msg.DELETE_X_BLOCKS = "Delete %1 Blocks";  // untranslated
Blockly.Msg.DIGITAL = "digitální";
Blockly.Msg.DIGITALIN_TOOLTIP = "Represents any actuator connected to a digital pin.";  // untranslated
Blockly.Msg.DIGITALOUT_TOOLTIP = "Represents any sensor connected to a digital.";  // untranslated
Blockly.Msg.DISABLE_BLOCK = "Disable Block";  // untranslated
Blockly.Msg.DISPLAY_ANIMATION = "animace";
Blockly.Msg.DISPLAY_CHARACTER = "znak";
Blockly.Msg.DISPLAY_CLEAR = "vymaž displej";
Blockly.Msg.DISPLAY_CLEAR_TOOLTIP = "Vymaže displej.";
Blockly.Msg.DISPLAY_COL = "ve sloupci";
Blockly.Msg.DISPLAY_GET_BRIGHTNESS_TOOLTIP = "Vrátí jas všech LED na displeji. 0 znamená, že LED nesvítí, 9 že svítí maximálním jasem.";
Blockly.Msg.DISPLAY_GET_PIXEL_TOOLTIP = "Vrátí jas této LED. 0 znamená, že LED nesvítí, 9 že svítí maximálním jasem.";
Blockly.Msg.DISPLAY_IMAGE = "obrázek";
Blockly.Msg.DISPLAY_PICTURE = "obrázek";
Blockly.Msg.DISPLAY_PICTURE_EYES_CLOSED = "oči zavřené";
Blockly.Msg.DISPLAY_PICTURE_EYES_OPEN = "oči otevřené";
Blockly.Msg.DISPLAY_PICTURE_FLOWERS = "květiny";
Blockly.Msg.DISPLAY_PICTURE_GLASSES = "brýle";
Blockly.Msg.DISPLAY_PICTURE_TACHO = "tachometr";
Blockly.Msg.DISPLAY_PICTURE_TOOLTIP = "Zobrazí obrázek na displeji.";
Blockly.Msg.DISPLAY_PIXEL_BRIGHTNESS = "jas";
Blockly.Msg.DISPLAY_PIXEL_TITLE = "LED";
Blockly.Msg.DISPLAY_ROW = "v řádku";
Blockly.Msg.DISPLAY_SET_BRIGHTNESS_TOOLTIP = "Nastaví jas všech LED na displeji. 0 znamená, že LED nesvítí, 9 že svítí maximálním jasem.";
Blockly.Msg.DISPLAY_SET_PIXEL_TOOLTIP = "Nastaví jas této LED. 0 znamená, že LED nesvítí, 9 že svítí maximálním jasem. x a y jsou souřadnice LED, se kterou chcete pracovat.";
Blockly.Msg.DISPLAY_SHOW = "zobraz";
Blockly.Msg.DISPLAY_TEXT = "text";
Blockly.Msg.DISPLAY_TEXT_TOOLTIP = "Zobrazí text na displeji.";
Blockly.Msg.DROP_TOOLTIP = "Represents a drop sensor.";  // untranslated
Blockly.Msg.DUPLICATE_BLOCK = "Duplicate";  // untranslated
Blockly.Msg.ENABLE_BLOCK = "Enable Block";  // untranslated
Blockly.Msg.ENCODER_GETSAMPLE_TOOLTIP = "Gets the current reading from the motor encoder.";  // untranslated
Blockly.Msg.ENCODER_RESET_TOOLTIP = "Vynuluje tachometr motoru.";
Blockly.Msg.ENCODER_TOOLTIP = "Represents an encoder.";  // untranslated
Blockly.Msg.ERROR_MISSING_PARAMETER = "An input value is missing!";  // untranslated
Blockly.Msg.ERROR_MISSING_RETURN = "The function return value is missing!";  // untranslated
Blockly.Msg.EV3BRICK_TOOLTIP = "Představuje kostku EV3 s připojenými pohony a senzory. Jsou zde také dostupné zabudované pohony a senzory, například tlačítka, displej...";
Blockly.Msg.EXPAND_ALL = "Expand Blocks";  // untranslated
Blockly.Msg.EXPAND_BLOCK = "Expand Block";  // untranslated
Blockly.Msg.EXTERNAL_INPUTS = "External Inputs";  // untranslated
Blockly.Msg.FLAME_GETSAMPLE_TOOLTIP = "Gets the current reading from the flame sensor.";  // untranslated
Blockly.Msg.FLAME_TOOLTIP = "Představuje senzor plamene.";
Blockly.Msg.FLYOUT_VARIABLE_TEXT = "Potřebujeme proměnnou? Nejprve je vytvořte kliknutím na znak + ve startovním bloku »start«\u00a0block.";
Blockly.Msg.FOR = "pro";
Blockly.Msg.FOURDIGITDISPLAY = "4-Digit Display";  // untranslated
Blockly.Msg.FOURDIGITDISPLAY_CLEAR_TOOLTIP = "Clears the Grove 4-Digit Display by Seeed.";  // untranslated
Blockly.Msg.FOURDIGITDISPLAY_SHOW_TOOLTIP = "Displays a number [0-9999] on the Grove 4-Digit Display by Seeed. Position [0-3] represents the starting position of the number. The display has to be connected to the A1 (right) Grove connector.";  // untranslated
Blockly.Msg.FROM_POSITION = "from position";  // untranslated
Blockly.Msg.FSR_TOOLTIP = "Get the current reading from the force sensitive resistor under the feet of the robot.";  // untranslated
Blockly.Msg.GALLERY_BY = "kým";
Blockly.Msg.GALLERY_DATE = "vytvořeno";
Blockly.Msg.GALLERY_DISLIKE = "nelíbí";
Blockly.Msg.GALLERY_LIKE = "líbí";
Blockly.Msg.GALLERY_SHARED_ALREADY = "Program jste už nahráli do galerie dříve. Pokud ho chcete změnit, vyhledejte jeho kopii v galerii a změňte ji. Program můžete z galerie odstranit smazáním jeho kopie z galerie.";
Blockly.Msg.GEARED_MOTOR = "geared motor";  // untranslated
Blockly.Msg.GET = "získat";
Blockly.Msg.GETSAMPLE_TOOLTIP = "Vrátí aktuální hodnotu vybraného senzoru.";
Blockly.Msg.GET_CODE_TOOLTIP = "Vrátí hodnotu pájecí plošky v hlavové části. Hodnoty jsou v rozmezí 0-31.";
Blockly.Msg.GO_TO_GROUPS = "Do skupin";
Blockly.Msg.GYRO_GETSAMPLE_TOOLTIP = "Gets the current reading from the gyro sensor.";  // untranslated
Blockly.Msg.GYRO_RESET_TOOLTIP = "Resetuje gyro senzor.";
Blockly.Msg.GYRO_TOOLTIP = "Představuje gyro senzor.";
Blockly.Msg.GYRO_TOOLTIP_WEDO = "Represents a tilt sensor.";  // untranslated
Blockly.Msg.HELP = "Help";  // untranslated
Blockly.Msg.HINT_USER_ACCOUNT = "»IAmBotman« nebo »RobellaStracciatella«? Ne každý musí znát vaše skutečné jméno. Uvažujte o nějaké přezdívce, kterou si snadno zapamatujete.";
Blockly.Msg.HINT_USER_AGE = "Je ti méně než 16 let? Potom požádej rodiče, aby ti pomohli. Pak můžeš uvést svůj e-mail k potvrzení účtu.";
Blockly.Msg.HINT_USER_EMAIL = "Toto je dobrovolné! Ale některé funkce jsou dostupné jen pokud ověříte svůj účet pomocí e-mailu. Jsi ti méně než 16 let? Prosím požádej rodiče o pomoc s ověřením účtu. <br><a href=\"https://www.roberta-home.de/index.php?id=138&L=1\" target=\"_blank\">Další informace...</a>";
Blockly.Msg.HINT_USER_NAME = "Vložte své skutečné jméno, pokud chcete. Nikdo jiný ho neuvidí.";
Blockly.Msg.HINT_USER_PASSWORT = "12345 není bezpečné heslo. Raději vymyslete nějakou bezpečnou kombinaci číslic a písmem, které nezapomenete.";
Blockly.Msg.HINT_USER_PASSWORT_CONFIRM = "Hotovo? Pro jistotu se přesvědčte!";
Blockly.Msg.HUMIDITY_TOOLTIP = "Represents a humidity sensor.";  // untranslated
Blockly.Msg.ICON_BLOCKING_TOOLTIP = "Blocking block! This blocks needs some time to be executed, so other's have to wait until it gives back the control to the caller function.";  // untranslated
Blockly.Msg.ID = "ID";  // untranslated
Blockly.Msg.IF_TOOLTIP = "Zkontroluje podmínku v »když«. Pokud je podmínka splněna, provede akce v části »tak«.";
Blockly.Msg.IMAGE_GET_TOOLTIP = "Vrátí vybraný obrázek.";
Blockly.Msg.IMAGE_GET_TOOLTIP_ANGRY = "rozzlobený";
Blockly.Msg.IMAGE_GET_TOOLTIP_ASLEEP = "spící";
Blockly.Msg.IMAGE_GET_TOOLTIP_BUTTERFLY = "motýl";
Blockly.Msg.IMAGE_GET_TOOLTIP_CHESSBOARD = "šachovnice";
Blockly.Msg.IMAGE_GET_TOOLTIP_CONFUSED = "zmatený";
Blockly.Msg.IMAGE_GET_TOOLTIP_COW = "kráva";
Blockly.Msg.IMAGE_GET_TOOLTIP_DIAMOND = "diamant";
Blockly.Msg.IMAGE_GET_TOOLTIP_DIAMOND_SMALL = "malý diamant";
Blockly.Msg.IMAGE_GET_TOOLTIP_DUCK = "kachna";
Blockly.Msg.IMAGE_GET_TOOLTIP_FABULOUS = "báječný";
Blockly.Msg.IMAGE_GET_TOOLTIP_GHOST = "duch";
Blockly.Msg.IMAGE_GET_TOOLTIP_GIRAFFE = "žirafa";
Blockly.Msg.IMAGE_GET_TOOLTIP_HEART = "srdce";
Blockly.Msg.IMAGE_GET_TOOLTIP_HEART_SMALL = "malé srdce";
Blockly.Msg.IMAGE_GET_TOOLTIP_HOUSE = "dům";
Blockly.Msg.IMAGE_GET_TOOLTIP_MEH = "meh!";
Blockly.Msg.IMAGE_GET_TOOLTIP_MUSIC_CROTCHET = "čtvrťová nota";
Blockly.Msg.IMAGE_GET_TOOLTIP_MUSIC_QUAVER = "osminová nota";
Blockly.Msg.IMAGE_GET_TOOLTIP_MUSIC_QUAVERS = "osminové noty";
Blockly.Msg.IMAGE_GET_TOOLTIP_NO = "ne";
Blockly.Msg.IMAGE_GET_TOOLTIP_PACMAN = "pacman";
Blockly.Msg.IMAGE_GET_TOOLTIP_PITCHFORK = "vidle";
Blockly.Msg.IMAGE_GET_TOOLTIP_RABBIT = "králík";
Blockly.Msg.IMAGE_GET_TOOLTIP_ROLLERSKATE = "brusle";
Blockly.Msg.IMAGE_GET_TOOLTIP_SAD = "smutný";
Blockly.Msg.IMAGE_GET_TOOLTIP_SILLY = "pošetilý";
Blockly.Msg.IMAGE_GET_TOOLTIP_SKULL = "lebka";
Blockly.Msg.IMAGE_GET_TOOLTIP_SMILE = "úsměv";
Blockly.Msg.IMAGE_GET_TOOLTIP_SNAKE = "had";
Blockly.Msg.IMAGE_GET_TOOLTIP_SQUARE = "čtverec";
Blockly.Msg.IMAGE_GET_TOOLTIP_SQUARE_SMALL = "malý čtverec";
Blockly.Msg.IMAGE_GET_TOOLTIP_STICKFIGURE = "postava";
Blockly.Msg.IMAGE_GET_TOOLTIP_SWORD = "meč";
Blockly.Msg.IMAGE_GET_TOOLTIP_TARGET = "cíl";
Blockly.Msg.IMAGE_GET_TOOLTIP_TORTOISE = "želva";
Blockly.Msg.IMAGE_GET_TOOLTIP_TRIANGLE = "trojúhelník";
Blockly.Msg.IMAGE_GET_TOOLTIP_TRIANGLE_LEFT = "trojúhelník vlevo";
Blockly.Msg.IMAGE_GET_TOOLTIP_TSHIRT = "tričko";
Blockly.Msg.IMAGE_GET_TOOLTIP_UMBRELLA = "deštník";
Blockly.Msg.IMAGE_GET_TOOLTIP_XMAS = "Vánoce";
Blockly.Msg.IMAGE_GET_TOOLTIP_YES = "ano";
Blockly.Msg.IMAGE_INVERT = "převrátit";
Blockly.Msg.IMAGE_INVERT_TOOLTIP = "Invertuje obrázek. Pixely s hodnotou 0 nebo \"žádná\" budou nastaveny na hodnotu # nebo 9, pixely s hodnotou # nebo 9 budou nastaveny na hodnotu 0 nebo \"žádná\".";
Blockly.Msg.IMAGE_SHIFT = "posun";
Blockly.Msg.IMAGE_SHIFT_TOOLTIP = "Posune obrázek v zadaném směru o zadanou hodnotou.";
Blockly.Msg.IMAGE_TOOLTIP = "Vytvoří obrázek pro displej. Můžete určit jas každého pixelu od 0 do 9, kde 0 je zhasnutý pixel a 9 maximální jas.";
Blockly.Msg.INFO_DOCUMENTATION_HINT = "Document your program here ...";  // untranslated
Blockly.Msg.INFO_TAGS = "Tags";  // untranslated
Blockly.Msg.INFRARED_DISTANCE_GETSAMPLE_TOOLTIP = "Gets the current relative distance from the infrared sensor. The values are between 1 and 75 cm.";  // untranslated
Blockly.Msg.INFRARED_GETSAMPLE_TOOLTIP = "Gets the current reading from the infrared sensor.";  // untranslated
Blockly.Msg.INFRARED_GETSAMPLE_TOOLTIP_MBOT = "Gets the current reading from the light sensor -- if a black line is detected (true/false).";  // untranslated
Blockly.Msg.INFRARED_PRESENCE_GETSAMPLE_TOOLTIP = "Returns an array of measurements for the presence of a beacon.";  // untranslated
Blockly.Msg.INFRARED_TOOLTIP = "Představuje infračervený senzor.";
Blockly.Msg.INIT_FAIL_HTTPSESSION_EXPECTED_BUT_NOT_FOUND = "The connection to the openroberta-lab was closed unexpectedly. This case is rare and may happen, if the openroberta-lab-server is restarted. Please start a new connection to the openroberta-lab, e.g. by closing and starting the browser or by hitting the »reload«-button.";  // untranslated
Blockly.Msg.INIT_FAIL_MULTIPLE_FRONTENDS_ONE_HTTPSESSION = "You are trying to connect to the openroberta-lab multiple times, e.g. by opening multiple tabs. This is not supported at the moment. Please close this view.";  // untranslated
Blockly.Msg.INLINE_INPUTS = "Inline Inputs";  // untranslated
Blockly.Msg.INPUT = "input";  // untranslated
Blockly.Msg.INTERNAL_PORT = "vnitřní";
Blockly.Msg.IRSEEKER_TOOLTIP = "Represents a HiTechnic NXT IRSeeker V2 sensor.";  // untranslated
Blockly.Msg.JOYSTICK_GETSAMPLE_TOOLTIP = "Vrátí aktuální hodnotu z jedné osy joystisku";
Blockly.Msg.KEY_ISPRESSED_TOOLTIP = "Is the selected button pressed?";  // untranslated
Blockly.Msg.KEY_TOOLTIP = "Represents a button.";  // untranslated
Blockly.Msg.LANGUAGE = "language";  // untranslated
Blockly.Msg.LANGUAGE_ARABIC = "Arabic";  // untranslated
Blockly.Msg.LANGUAGE_BRAZILIAN = "Brazilian";  // untranslated
Blockly.Msg.LANGUAGE_CHINESE = "Chinese";  // untranslated
Blockly.Msg.LANGUAGE_CZECH = "Czech";  // untranslated
Blockly.Msg.LANGUAGE_DANISH = "Danish";  // untranslated
Blockly.Msg.LANGUAGE_DUTCH = "Dutch";  // untranslated
Blockly.Msg.LANGUAGE_ENGLISH = "English";  // untranslated
Blockly.Msg.LANGUAGE_FINNISH = "Finnish";  // untranslated
Blockly.Msg.LANGUAGE_FRENCH = "French";  // untranslated
Blockly.Msg.LANGUAGE_GERMAN = "German";  // untranslated
Blockly.Msg.LANGUAGE_GREEK = "Greek";  // untranslated
Blockly.Msg.LANGUAGE_ITALIAN = "Italian";  // untranslated
Blockly.Msg.LANGUAGE_JAPANESE = "Japanese";  // untranslated
Blockly.Msg.LANGUAGE_KOREAN = "Korean";  // untranslated
Blockly.Msg.LANGUAGE_NORWEGIAN = "Norwegian";  // untranslated
Blockly.Msg.LANGUAGE_POLISH = "Polish";  // untranslated
Blockly.Msg.LANGUAGE_PORTUGUESE = "Portuguese";  // untranslated
Blockly.Msg.LANGUAGE_RUSSIAN = "Russian";  // untranslated
Blockly.Msg.LANGUAGE_SPANISH = "Spanish";  // untranslated
Blockly.Msg.LANGUAGE_SWEDISH = "Swedish";  // untranslated
Blockly.Msg.LANGUAGE_TURKISH = "Turkish";  // untranslated
Blockly.Msg.LCDI2C_TOOLTIP = "Represents an LCD 1602 display with a soldered I²C module.";  // untranslated
Blockly.Msg.LCD_TOOLTIP = "Represents an LCD display.";  // untranslated
Blockly.Msg.LED = "LED";  // untranslated
Blockly.Msg.LEDBAR = "LED Bar";  // untranslated
Blockly.Msg.LEDBAR_SET_TOOLTIP = "Sets the specified LED [0-9] on the Grove LED Bar v2.0 by Seeed to the given brightness [0-8]. The LED Bar has to be connected to the A1 (right) Grove connector.";  // untranslated
Blockly.Msg.LED_MATRIX = "LED matrix";  // untranslated
Blockly.Msg.LED_OFF = "vypne LED";
Blockly.Msg.LED_OFF_TOOLTIP = "Vypne LED.";
Blockly.Msg.LED_ON = "zapne LED";
Blockly.Msg.LED_ON_TOOLTIP = "Zapne LED a změní barvu.";
Blockly.Msg.LED_ON_TOOLTIP_CB = "Turns the LED on and changes the color. Attention: calli:Bot only supports 7 different colors, the nearest will be chosen.";  // untranslated
Blockly.Msg.LED_ON_WHITE_TOOLTIP = "Zapne LED. Pozor, svítí hodně intenzívně!";
Blockly.Msg.LED_TOOLTIP = "Represents an LED.";  // untranslated
Blockly.Msg.LEFT = "left";  // untranslated
Blockly.Msg.LIGHT_ARDU_TOOLTIP = "Představuje 8 světelných senzorů.";
Blockly.Msg.LIGHT_GETSAMPLE_TOOLTIP = "Gets the current reading from the light sensor in percent.";  // untranslated
Blockly.Msg.LIGHT_TOOLTIP = "Představuje světelný senzor.";
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "create empty list";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Returns a list, of length 0, containing no data records";  // untranslated
Blockly.Msg.LISTS_CREATE_TITLE = "seznam";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "list";  // untranslated
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Add, remove, or reorder sections to reconfigure this list block.";  // untranslated
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "create list with";  // untranslated
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Add an item to the list.";  // untranslated
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Create a list with any number of items.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_FIRST = "first";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# from end";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_GET = "get";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "get and remove";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_LAST = "last";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "random";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "remove";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Returns the first item in a list.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Returns the item at the specified position in a list. #1 is the last item.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Returns the item at the specified position in a list. #1 is the first item.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Returns the last item in a list.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Returns a random item in a list.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Removes and returns the first item in a list.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Removes and returns the item at the specified position in a list. #1 is the last item.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Removes and returns the item at the specified position in a list. #1 is the first item.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Removes and returns the last item in a list.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Removes and returns a random item in a list.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Removes the first item in a list.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Removes the item at the specified position in a list. #1 is the last item.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Removes the item at the specified position in a list. #1 is the first item.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Removes the last item in a list.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Removes a random item in a list.";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "to # from end";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "to #";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "to last";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "get sub-list from first";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "get sub-list from # from end";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "get sub-list from #";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Creates a copy of the specified portion of a list.";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_FIRST = "find first occurrence of item";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_LAST = "find last occurrence of item";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Returns the index of the first/last occurrence of the item in the list. Returns -1 if item is not found.";  // untranslated
Blockly.Msg.LISTS_INLIST = "in list";  // untranslated
Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 is empty";  // untranslated
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Returns true if the list is empty.";  // untranslated
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg.LISTS_LENGTH_TITLE = "length of %1";  // untranslated
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Returns the length of a list.";  // untranslated
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_REPEAT_TITLE = "create list with item %1 repeated %2 times";  // untranslated
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Creates a list consisting of the given value repeated the specified number of times.";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "as";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INSERT = "insert at";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_SET = "set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Inserts the item at the start of a list.";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Inserts the item at the specified position in a list. #1 is the last item.";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Inserts the item at the specified position in a list. #1 is the first item.";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Append the item to the end of a list.";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Inserts the item randomly in a list.";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Sets the first item in a list.";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Sets the item at the specified position in a list. #1 is the last item.";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Sets the item at the specified position in a list. #1 is the first item.";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Sets the last item in a list.";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Sets a random item in a list.";  // untranslated
Blockly.Msg.LISTS_SORT_HELPURL = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";  // untranslated
Blockly.Msg.LISTS_SORT_ORDER_ASCENDING = "ascending";  // untranslated
Blockly.Msg.LISTS_SORT_ORDER_DESCENDING = "descending";  // untranslated
Blockly.Msg.LISTS_SORT_TITLE = "sort %1 %2 %3";  // untranslated
Blockly.Msg.LISTS_SORT_TOOLTIP = "Sort a copy of a list.";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE = "alphabetic, ignore case";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = "numeric";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_TEXT = "alphabetic";  // untranslated
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "make list from text";  // untranslated
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "make text from list";  // untranslated
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Join a list of texts into one text, separated by a delimiter.";  // untranslated
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Split text into a list of texts, breaking at each delimiter.";  // untranslated
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "with delimiter";  // untranslated
Blockly.Msg.LIST_BACK_TOOLTIP = "Zpět na předchozí pohled.";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "false";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Returns either true or false.";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "true";  // untranslated
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";  // untranslated
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Return true if both inputs equal each other.";  // untranslated
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Return true if the first input is greater than the second input.";  // untranslated
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Return true if the first input is greater than or equal to the second input.";  // untranslated
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Return true if the first input is smaller than the second input.";  // untranslated
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Return true if the first input is smaller than or equal to the second input.";  // untranslated
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Return true if both inputs are not equal to each other.";  // untranslated
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "not %1";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Returns true if the input is false. Returns false if the input is true.";  // untranslated
Blockly.Msg.LOGIC_NULL = "null";  // untranslated
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Returns null.";  // untranslated
Blockly.Msg.LOGIC_OPERATION_AND = "and";  // untranslated
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "or";  // untranslated
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Return true if both inputs are true.";  // untranslated
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Return true if at least one of the inputs is true.";  // untranslated
Blockly.Msg.LOGIC_TERNARY_CONDITION = "test";  // untranslated
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "if false";  // untranslated
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "if true";  // untranslated
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Check the condition in 'test'. If the condition is true, returns the 'if true' value; otherwise returns the 'if false' value.";  // untranslated
Blockly.Msg.LOOP = "opakuj dokud není";
Blockly.Msg.LOOPFOREVER_TOOLTIP = "Opakuje akci stále.";
Blockly.Msg.LOOP_FOREVER = "opakuj stále";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://en.wikipedia.org/wiki/Arithmetic";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Return the sum of the two numbers.";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Return the quotient of the two numbers.";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Return the difference of the two numbers.";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Return the product of the two numbers.";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Return the first number raised to the power of the second number.";  // untranslated
Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";  // untranslated
Blockly.Msg.MATH_CHANGE_TITLE = "change %1 by %2";  // untranslated
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Add a number to variable '%1'.";  // untranslated
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://en.wikipedia.org/wiki/Mathematical_constant";  // untranslated
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Return one of the common constants: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (infinity).";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TITLE = "constrain %1 low %2 high %3";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Constrain a number to be between the specified limits (inclusive).";  // untranslated
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";  // untranslated
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "is divisible by";  // untranslated
Blockly.Msg.MATH_IS_EVEN = "is even";  // untranslated
Blockly.Msg.MATH_IS_NEGATIVE = "is negative";  // untranslated
Blockly.Msg.MATH_IS_ODD = "is odd";  // untranslated
Blockly.Msg.MATH_IS_POSITIVE = "is positive";  // untranslated
Blockly.Msg.MATH_IS_PRIME = "is prime";  // untranslated
Blockly.Msg.MATH_IS_TOOLTIP = "Check if a number is an even, odd, prime, whole, positive, negative, or if it is divisible by certain number. Returns true or false.";  // untranslated
Blockly.Msg.MATH_IS_WHOLE = "is whole";  // untranslated
Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";  // untranslated
Blockly.Msg.MATH_MODULO_TITLE = "remainder of %1 ÷ %2";  // untranslated
Blockly.Msg.MATH_MODULO_TOOLTIP = "Return the remainder from dividing the two numbers.";  // untranslated
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";  // untranslated
Blockly.Msg.MATH_NUMBER_HELPURL = "https://en.wikipedia.org/wiki/Number";  // untranslated
Blockly.Msg.MATH_NUMBER_TOOLTIP = "A number.";  // untranslated
Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "average of list";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "max of list";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "median of list";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "min of list";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "modes of list";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "random item of list";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "standard deviation of list";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "sum of list";  // untranslated
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Return the average (arithmetic mean) of the numeric values in the list.";  // untranslated
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Return the largest number in the list.";  // untranslated
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Return the median number in the list.";  // untranslated
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Return the smallest number in the list.";  // untranslated
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Return a list of the most common item(s) in the list.";  // untranslated
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Return a random element from the list.";  // untranslated
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Return the standard deviation of the list.";  // untranslated
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Return the sum of all the numbers in the list.";  // untranslated
Blockly.Msg.MATH_POWER_SYMBOL = "^";  // untranslated
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";  // untranslated
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "random fraction";  // untranslated
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Return a random fraction between 0.0 (inclusive) and 1.0 (exclusive).";  // untranslated
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";  // untranslated
Blockly.Msg.MATH_RANDOM_INT_TITLE = "random integer from %1 to %2";  // untranslated
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Return a random integer between the two specified limits, inclusive.";  // untranslated
Blockly.Msg.MATH_ROUND_HELPURL = "https://en.wikipedia.org/wiki/Rounding";  // untranslated
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "round";  // untranslated
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "round down";  // untranslated
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "round up";  // untranslated
Blockly.Msg.MATH_ROUND_TOOLTIP = "Round a number up or down.";  // untranslated
Blockly.Msg.MATH_SINGLE_HELPURL = "https://en.wikipedia.org/wiki/Square_root";  // untranslated
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "absolute";  // untranslated
Blockly.Msg.MATH_SINGLE_OP_ROOT = "square root";  // untranslated
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Return the absolute value of a number.";  // untranslated
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Return e to the power of a number.";  // untranslated
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Return the natural logarithm of a number.";  // untranslated
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Return the base 10 logarithm of a number.";  // untranslated
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Return the negation of a number.";  // untranslated
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Return 10 to the power of a number.";  // untranslated
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Return the square root of a number.";  // untranslated
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";  // untranslated
Blockly.Msg.MATH_TRIG_ACOS = "acos";  // untranslated
Blockly.Msg.MATH_TRIG_ASIN = "asin";  // untranslated
Blockly.Msg.MATH_TRIG_ATAN = "atan";  // untranslated
Blockly.Msg.MATH_TRIG_COS = "cos";  // untranslated
Blockly.Msg.MATH_TRIG_HELPURL = "https://en.wikipedia.org/wiki/Trigonometric_functions";  // untranslated
Blockly.Msg.MATH_TRIG_SIN = "sin";  // untranslated
Blockly.Msg.MATH_TRIG_TAN = "tan";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Return the arccosine of a number.";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Return the arcsine of a number.";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Return the arctangent of a number.";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Return the cosine of a degree (not radian).";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Return the sine of a degree (not radian).";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Return the tangent of a degree (not radian).";  // untranslated
Blockly.Msg.ME = "Me";  // untranslated
Blockly.Msg.MENU_ABOUT = "o aplikaci Open Roberta Lab";
Blockly.Msg.MENU_ABOUT_PROJECT = "o projektu Open Roberta";
Blockly.Msg.MENU_ATTACH = "připojit...";
Blockly.Msg.MENU_BEGINNER = "začátečník";
Blockly.Msg.MENU_CHANGE = "změnit...";
Blockly.Msg.MENU_CHECK = "zkontrolovat";
Blockly.Msg.MENU_CODE_DOWNLOAD_TOOLTIP = "Stáhne zdrojový kód programu do počítače.";
Blockly.Msg.MENU_CODE_REFRESH_TOOLTIP = "Aktualizuje zdrojový kód, pokud jste změnili NEPO bloky.";
Blockly.Msg.MENU_CONNECT = "připojit...";
Blockly.Msg.MENU_CREATE_LINK = "vytvořit propojení programu...";
Blockly.Msg.MENU_DELETE_USER = "smazat uživatele...";
Blockly.Msg.MENU_EDIT = "úpravy";
Blockly.Msg.MENU_EDIT_TOOLTIP = "úpravy";
Blockly.Msg.MENU_EV3 = "Příprava robota";
Blockly.Msg.MENU_EXPERT = "expert";
Blockly.Msg.MENU_EXPORT_PROG = "exportovat program";
Blockly.Msg.MENU_FAQ = "otázky a odpovědi";
Blockly.Msg.MENU_GALLERY = "galerie";
Blockly.Msg.MENU_GALLERY_TOOLTIP = "galerie";
Blockly.Msg.MENU_GENERAL = "obecná nápověda";
Blockly.Msg.MENU_HELP = "nápověda";
Blockly.Msg.MENU_HELP_TOOLTIP = "nápověda";
Blockly.Msg.MENU_IMPORT_PROG = "importovat program";
Blockly.Msg.MENU_LANGUAGE = "jazyky";
Blockly.Msg.MENU_LANGUAGE_TOOLTIP = "jazyky";
Blockly.Msg.MENU_LIST = "seznam...";
Blockly.Msg.MENU_LIST_CONF = "moje nastavení...";
Blockly.Msg.MENU_LIST_PROG = "moje programy...";
Blockly.Msg.MENU_LIST_PROG_EXAMPLES = "ukázkové programy...";
Blockly.Msg.MENU_LOGGING = "historie provedených akcí";
Blockly.Msg.MENU_LOG_IN = "přihlásit se...";
Blockly.Msg.MENU_LOG_OUT = "odhlásit se";
Blockly.Msg.MENU_MESSAGE_DOWNLOAD = "Program byl úspěšně stažen.";
Blockly.Msg.MENU_NEW = "nový...";
Blockly.Msg.MENU_PROGRAMMING = "programování s NEPO";
Blockly.Msg.MENU_PROPERTIES = "vlastnosti";
Blockly.Msg.MENU_RIGHT_CODE_TOOLTIP = "Open/close the source code view.";  // untranslated
Blockly.Msg.MENU_RIGHT_HELP_TOOLTIP = "Otevře/zavře zobrazení nápovědy";
Blockly.Msg.MENU_RIGHT_INFO_TOOLTIP = "Otevře/zavře zobrazení informací";
Blockly.Msg.MENU_RIGHT_SIM_TOOLTIP = "Open/close the simulation view.";  // untranslated
Blockly.Msg.MENU_RIGHT_TUTORIAL_TOOLTIP = "open/close the tutorial's view";  // untranslated
Blockly.Msg.MENU_ROBOT = "robot";
Blockly.Msg.MENU_ROBOT_STATE_INFO = "informace";
Blockly.Msg.MENU_ROBOT_STATE_TOOLTIP = "Informace o robotovi";
Blockly.Msg.MENU_ROBOT_STOP_HINT_EV3 = "Press <span class='typcn typcn-media-stop'></span>+<span class='typcn typcn-arrow-sorted-down'></span> buttons on the robot to abort the program!";  // untranslated
Blockly.Msg.MENU_ROBOT_STOP_HINT_NXT = "Press <span class='typcn typcn-media-cancel'></span> button on the robot to abort the program!";  // untranslated
Blockly.Msg.MENU_ROBOT_TOOLTIP = "roboti";
Blockly.Msg.MENU_ROBOT_WLAN = "WLAN credentials ...";  // untranslated
Blockly.Msg.MENU_RUN_MULT_SIM = "multiple robot simulation ...";  // untranslated
Blockly.Msg.MENU_SAVE = "uložit";
Blockly.Msg.MENU_SAVE_AS = "uložit jako...";
Blockly.Msg.MENU_SHOW_AGAIN = "jdi na úvodní obrazovku";
Blockly.Msg.MENU_SHOW_CODE = "ukázat kód";
Blockly.Msg.MENU_SIM_BACK = "Zpět";
Blockly.Msg.MENU_SIM_DRAW = "Scéna Kreslení";
Blockly.Msg.MENU_SIM_IMPORT_TOOLTIP = "Nahraje váš vlastní obrázek jako pozadí simulátoru, pozadí bude přidáno na konec seznamu.";
Blockly.Msg.MENU_SIM_MATH = "Scéna Matematika";
Blockly.Msg.MENU_SIM_POSE_TOOLTIP = "Přesune robota zpět na výchozí pozici.";
Blockly.Msg.MENU_SIM_RESCUE = "Scéna Záchrana";
Blockly.Msg.MENU_SIM_ROBERTA = "Scéna Roberta";
Blockly.Msg.MENU_SIM_ROBOT_TOOLTIP = "otevře/zavře pohled robota";
Blockly.Msg.MENU_SIM_SCENE_TOOLTIP = "změní scénu";
Blockly.Msg.MENU_SIM_SIMPLE = "Scéna Jednoduchá";
Blockly.Msg.MENU_SIM_START_TOOLTIP = "Spustí váš program v simulátoru.";
Blockly.Msg.MENU_SIM_STOP = "Stop";
Blockly.Msg.MENU_SIM_STOP_TOOLTIP = "Zastaví běh vašeho programu v simulátoru.";
Blockly.Msg.MENU_SIM_VALUES_TOOLTIP = "Otevře/zavře zobrazení dat ze senzorů.";
Blockly.Msg.MENU_SIM_WRO = "Scéna Olympiáda robotů";
Blockly.Msg.MENU_START_BRICK = "spustit v »$«";
Blockly.Msg.MENU_START_SIM = "otevře/zavře okno simulátoru";
Blockly.Msg.MENU_STATE_INFO = "informace o stavu";
Blockly.Msg.MENU_STOP_BRICK = "stop program on »$«";  // untranslated
Blockly.Msg.MENU_TOOLBOX = "NEPO bloky";
Blockly.Msg.MENU_TOOLBOX_BEGINNER = "NEPO bloky - začátečník";
Blockly.Msg.MENU_TOOLBOX_EXPERT = "NEPO bloky - pokročilý";
Blockly.Msg.MENU_TUTORIAL = "tutorials";  // untranslated
Blockly.Msg.MENU_TUTORIAL_TOOLTIP = "tutorials";  // untranslated
Blockly.Msg.MENU_USER = "přihlásit se";
Blockly.Msg.MENU_USER_STATE_TOOLTIP = "informace o uživateli";
Blockly.Msg.MENU_USER_TOOLTIP = "uživatel";
Blockly.Msg.MENU_WLAN_CREDENTIALS = "WLAN credentials";  // untranslated
Blockly.Msg.MENU_ZOOM = "měřítko";
Blockly.Msg.MENU_ZOOM_IN = "přiblížit";
Blockly.Msg.MENU_ZOOM_OUT = "oddálit";
Blockly.Msg.MENU_ZOOM_RESET = "výchozí měřítko";
Blockly.Msg.MESSAGE_ADDED_USER = "Uživatel »$« byl přidán";
Blockly.Msg.MESSAGE_CONFIGURATION_DELETED = "Nastavení »$« bylo smazáno";
Blockly.Msg.MESSAGE_EDIT_CHECK = "Váš program je nyní kontrolován!";
Blockly.Msg.MESSAGE_EDIT_SAVE_CONFIGURATION = "Vaše nastavení bylo uloženo.";
Blockly.Msg.MESSAGE_EDIT_SAVE_CONFIGURATION_AS = "Vaše nastavení bylo uloženo jako »$«";
Blockly.Msg.MESSAGE_EDIT_SAVE_GROUP_AS = "Vaše skupina byla vytvořena";
Blockly.Msg.MESSAGE_EDIT_SAVE_PROGRAM = "Váš program byl uložen";
Blockly.Msg.MESSAGE_EDIT_SAVE_PROGRAM_AS = "Váš program byl uložen jako »$«";
Blockly.Msg.MESSAGE_EDIT_START = "Your program »$« will run in a moment!";  // untranslated
Blockly.Msg.MESSAGE_FIRMWARE_ERROR = "Verze firmwaru vašeho robota a verze Open Roberta Lab se liší. Kontaktujte nás prosím.";
Blockly.Msg.MESSAGE_GROUP_DELETED = "Skupina »$« byla smazána";
Blockly.Msg.MESSAGE_INVALID_CONF_NAME = "Please fill in a correct name. A correct name begins with a letter and can only contain letters or numbers. The default name »[robot]basis« can't be used here.";  // untranslated
Blockly.Msg.MESSAGE_INVALID_NAME = "Vyplňte prosím správné jméno. Musí začínat písmenem a může obsahovat pouze písmena a číslice.";
Blockly.Msg.MESSAGE_NOT_AVAILABLE = "Nedostupné";
Blockly.Msg.MESSAGE_PROGRAM_DELETED = "Program »$« byl smazán";
Blockly.Msg.MESSAGE_RESTART_ROBOT = "Připojte prosím robota znovu k Open Roberta Lab.";
Blockly.Msg.MESSAGE_ROBOT_CONNECTED = "Váš robot $ je připojen";
Blockly.Msg.MESSAGE_ROBOT_DISCONNECTED = "Aktivní robot byl odpojen";
Blockly.Msg.MESSAGE_USER_DELETED = "Uživatel byl smazán";
Blockly.Msg.MESSAGE_USER_GROUP_DELETED = "Uživatel »$« byl smazán";
Blockly.Msg.MESSAGE_USER_LOGIN = "Ahoj »$«";
Blockly.Msg.MESSAGE_USER_LOGOUT = "Byl jste odhlášen";
Blockly.Msg.MICROBITBRICK_TOOLTIP = "Představuje desku micro:bit, kapesní programovatelný počítač. Jsou zde také dostupné zabudované pohony a senzory, například tlačítka, displej...";
Blockly.Msg.MICROPHONE_GETSAMPLE_TOOLTIP = "Gets the current reading from the microphone in % (mapped to 0 - 100). If the value is always low, the value has to be multiplied by 10, because the amplification is missing on the hardware.";  // untranslated
Blockly.Msg.MODE = "mód";
Blockly.Msg.MODE_ACCELERATION = "zrychlení";
Blockly.Msg.MODE_AMBIENTLIGHT = "okolní světlo";
Blockly.Msg.MODE_ANALOG = "analog value";  // untranslated
Blockly.Msg.MODE_ANGLE = "úhel";
Blockly.Msg.MODE_CLOSE = "zavřít";
Blockly.Msg.MODE_COLOUR = "barva";
Blockly.Msg.MODE_COMPASS = "compass";  // untranslated
Blockly.Msg.MODE_CURRENT = "current";  // untranslated
Blockly.Msg.MODE_DEGREE = "stupňů";
Blockly.Msg.MODE_DIGITAL = "digital value";  // untranslated
Blockly.Msg.MODE_DISTANCE = "vzdálenost";
Blockly.Msg.MODE_HUMIDITY = "humidity";  // untranslated
Blockly.Msg.MODE_IDALL = "IDs (list)";  // untranslated
Blockly.Msg.MODE_IDONE = "ID";  // untranslated
Blockly.Msg.MODE_INFO = "information";  // untranslated
Blockly.Msg.MODE_LIGHT = "světlo";
Blockly.Msg.MODE_LINE = "line";  // untranslated
Blockly.Msg.MODE_MODULATED = "modulated";  // untranslated
Blockly.Msg.MODE_MOISTURE = "moisture";  // untranslated
Blockly.Msg.MODE_NAMEALL = "names (list)";  // untranslated
Blockly.Msg.MODE_NAMEONE = "name";  // untranslated
Blockly.Msg.MODE_OBSTACLE = "překážka";
Blockly.Msg.MODE_OPEN = "otevřít";
Blockly.Msg.MODE_ORIENTATION = "směr";
Blockly.Msg.MODE_PRESENCE = "přítomnost";
Blockly.Msg.MODE_PRESSED = "stisknuto";
Blockly.Msg.MODE_PRESSURE = "pressure";  // untranslated
Blockly.Msg.MODE_PULSEHIGH = "pulse time HIGH";  // untranslated
Blockly.Msg.MODE_PULSELOW = "pulse time LOW";  // untranslated
Blockly.Msg.MODE_RATE = "rychlost změny";
Blockly.Msg.MODE_REFLEXION = "reflected light";  // untranslated
Blockly.Msg.MODE_RGB = "RGB";
Blockly.Msg.MODE_ROTATION = "otáčky";
Blockly.Msg.MODE_SENSOR1 = "Light Sensor1";  // untranslated
Blockly.Msg.MODE_SENSOR2 = "Light Sensor2";  // untranslated
Blockly.Msg.MODE_SOUND = "zvuk";
Blockly.Msg.MODE_TEMPERATURE = "temperature";  // untranslated
Blockly.Msg.MODE_TILTED = "tilted";  // untranslated
Blockly.Msg.MODE_UNMODULATED = "unmodulated";  // untranslated
Blockly.Msg.MODE_UVLIGHT = "UV light";  // untranslated
Blockly.Msg.MODE_VALUE = "hodnota";
Blockly.Msg.MODE_WORD = "word";  // untranslated
Blockly.Msg.MODE_X = "X-value";  // untranslated
Blockly.Msg.MODE_Y = "Y-value";  // untranslated
Blockly.Msg.MODE_Z = "Z-value";  // untranslated
Blockly.Msg.MOISTURE_TOOLTIP = "Represents a moisture sensor.";  // untranslated
Blockly.Msg.MOTION_TOOLTIP = "Represents a motion sensor.";  // untranslated
Blockly.Msg.MOTOR = "motor";
Blockly.Msg.MOTORDIFF_ON_FOR_TOOLTIP = "Spustí pohyb robota danou rychlostí a zastaví ho po určené vzdálenosti.";
Blockly.Msg.MOTORDIFF_ON_TOOLTIP = "Spustí pohyb robota danou rychlostí.";
Blockly.Msg.MOTORDIFF_STOP_TOOLTIP = "Zastaví robota.";
Blockly.Msg.MOTORDIFF_TURN_FOR_TOOLTIP = "Otáčení robota o zadaný počet stupňů.";
Blockly.Msg.MOTORDIFF_TURN_TOOLTIP = "Otáčení robota.";
Blockly.Msg.MOTORS_ON_TOOLTIP_CALLIOPE = "Turns motor A and B on with a specific power.";  // untranslated
Blockly.Msg.MOTORS_ON_TOOLTIP_CALLIOPE_CB = "Turns both motors on with a specific power. Power can be positiv or negativ for reverse direction.";  // untranslated
Blockly.Msg.MOTORS_STOP_TOOLTIP = "Stops both motors, A and B.";  // untranslated
Blockly.Msg.MOTOR_ARDU_TOOLTIP = "Představuje motor na podvozku robota Bot'n Roll.";
Blockly.Msg.MOTOR_BACKWARD = "dozadu";
Blockly.Msg.MOTOR_BIG = "velký";
Blockly.Msg.MOTOR_BIG_TOOLTIP = "Představuje velký motor.";
Blockly.Msg.MOTOR_BRAKE = "brzda";
Blockly.Msg.MOTOR_DEGREE = "stupně";
Blockly.Msg.MOTOR_DISTANCE = "vzdálenost v cm";
Blockly.Msg.MOTOR_DRIVE = "jeď";
Blockly.Msg.MOTOR_FLOAT = "uvolnit";
Blockly.Msg.MOTOR_FOREWARD = "dopředu";
Blockly.Msg.MOTOR_GETPOWER_TOOLTIP = "Vrátí aktuální rychlost/sílu tohoto motoru.";
Blockly.Msg.MOTOR_LEFT = "vlevo";
Blockly.Msg.MOTOR_MIDDLE = "střední";
Blockly.Msg.MOTOR_MIDDLE_TOOLTIP = "Představuje střední motor.";
Blockly.Msg.MOTOR_NONE = "žádný";
Blockly.Msg.MOTOR_ON_FOR_TOOLTIP = "Spustí motor a zastaví ho po otočení o daný počet otáček/stupňů.";
Blockly.Msg.MOTOR_ON_FOR_TOOLTIP_MS = "Sets servo motor to certain position in degrees.";  // untranslated
Blockly.Msg.MOTOR_ON_FOR_TOOLTIP_RPM = "Turns motor on at speed in rpms (rotation per minute) and stops motor after execution of rotations/degrees.";  // untranslated
Blockly.Msg.MOTOR_ON_FOR_TOOLTIP_SERVO = "Turns motor on and stops motor after execution of rotations/degrees.";  // untranslated
Blockly.Msg.MOTOR_ON_TOOLTIP = "Spustí motor určitou rychlostí/silou.";
Blockly.Msg.MOTOR_ON_TOOLTIP_CALLIOPE = "Turns motor A, B or A+B on with a specific power.";  // untranslated
Blockly.Msg.MOTOR_ON_TOOLTIP_CALLIOPE_CB = "Turns left or right motor on with a specific power. Power can be positiv or negativ for reverse direction.";  // untranslated
Blockly.Msg.MOTOR_OTHER = "jiné výstupní zařízení";
Blockly.Msg.MOTOR_PAN = "přejíždět";
Blockly.Msg.MOTOR_PORT = "port motoru";
Blockly.Msg.MOTOR_PORT_ARDUINO = "motor 28BYJ-48 port";  // untranslated
Blockly.Msg.MOTOR_REGULATION = "regulace";
Blockly.Msg.MOTOR_RIGHT = "vpravo";
Blockly.Msg.MOTOR_ROTATION = "otáčka";
Blockly.Msg.MOTOR_ROTATION_PER_MINUTE = "rpm";  // untranslated
Blockly.Msg.MOTOR_ROTATION_REVERSE = "směr otáčení";
Blockly.Msg.MOTOR_SETPOWER_TOOLTIP = "Nastaví rychlost/sílu tohoto motoru.";
Blockly.Msg.MOTOR_SIDE = "strana";
Blockly.Msg.MOTOR_SPEED = "rychlost %";
Blockly.Msg.MOTOR_SPEED_0 = "Rychlost motoru je 0!";
Blockly.Msg.MOTOR_STEER = "zatáčej";
Blockly.Msg.MOTOR_STOP = "zastav";
Blockly.Msg.MOTOR_STOP_TOOLTIP = "Zastaví tento motor.";
Blockly.Msg.MOTOR_TILT = "naklonit";
Blockly.Msg.MOTOR_TURN = "zatáčej";
Blockly.Msg.NAO_ABSOLUTE = "absolutní";
Blockly.Msg.NAO_ACCELEROMETER = "akcelerometr";
Blockly.Msg.NAO_ACCELEROMETER_TOOLTIP = "Vrátí aktuální hodnotu akcelerometru v daném směru";
Blockly.Msg.NAO_ANIMATION_TOOLTIP = "Spustí vybranou animaci. TaiChi je komplexní a umělecká sada pohybů. ";
Blockly.Msg.NAO_ANSWER = "odpověď";
Blockly.Msg.NAO_APPLYPOSTURE = "použij postoj";
Blockly.Msg.NAO_APPLYPOSTURE_TOOLTIP = "Robot zaujme vybraný postoj. Použijte rozbalovací seznam k výběru různých postojů.";
Blockly.Msg.NAO_AUTONOMOUS = "autonomní chování";
Blockly.Msg.NAO_AUTONOMOUS_TOOLTIP = "Zapne/vypne autonomní chování robota. Když je zapnuto, robot reaguje na zvuky a snaží se rozpoznávat tváře. Vypněte tuto možnost, pokud narušuje běh vašeho programu.";
Blockly.Msg.NAO_BLINK = "blikat";
Blockly.Msg.NAO_CAMERA = "kamera";
Blockly.Msg.NAO_CAMERA_BOTTOM = "spodní";
Blockly.Msg.NAO_CAMERA_TOP = "vrchní";
Blockly.Msg.NAO_FACE_GET_INFORMATION_TOOLTIP = "Tento blok vrátí dodatečné informace o rozpoznané tváři ve formátu jednorozměrného pole s následujícími hodnotami: [XAngle, YAngle, XSize, YSize, Heading], pamatujte, že všechny hodnoty jsou uváděné v úhlu kamery.";
Blockly.Msg.NAO_FILENAME = "jméno souboru";
Blockly.Msg.NAO_FORGETFACEOF = "zapomeň tvář";
Blockly.Msg.NAO_FORGETFACE_TOOLTIP = "Vymaž tvář dříve uloženou pod daným jménem z databáze rozpoznaných tváři v robotovi.";
Blockly.Msg.NAO_FRAME = "snímek";
Blockly.Msg.NAO_FRAME_TORSO = "trup";
Blockly.Msg.NAO_FRAME_WORLD = "světlo";
Blockly.Msg.NAO_FSR = "tlakový senzor";
Blockly.Msg.NAO_GETLANGUAGE_TOOLTIP = "Vrátí aktivní jazyk. To je jazyk, který robot aktuálně používá pro převod textu na řeč a pro rozpoznávání řeči.";
Blockly.Msg.NAO_GETVOLUME_TOOLTIP = "Vrátí hlasitost.";
Blockly.Msg.NAO_GYROMETER = "gyroskop";
Blockly.Msg.NAO_GYROMETER_TOOLTIP = "Vrátí aktuální hodnotu gyroskopu v daném směru.";
Blockly.Msg.NAO_HAND = "ruka";
Blockly.Msg.NAO_HAND_TOOLTIP = "Otevřít/zavřít ruku.";
Blockly.Msg.NAO_HEADSENSOR = "hlavový senzor";
Blockly.Msg.NAO_INTENSITY = "intenzita";
Blockly.Msg.NAO_JOINT_ANKLEPITCH = "sklon kotníku";
Blockly.Msg.NAO_JOINT_ANKLEROLL = "náklon kotníku";
Blockly.Msg.NAO_JOINT_ELBOWROLL = "náklon lokte";
Blockly.Msg.NAO_JOINT_ELBOWYAW = "natočení lokte";
Blockly.Msg.NAO_JOINT_HAND = "ruka";
Blockly.Msg.NAO_JOINT_HEADPITCH = "sklon hlavy";
Blockly.Msg.NAO_JOINT_HEADYAW = "natočení hlavy";
Blockly.Msg.NAO_JOINT_HIPPITCH = "sklon kyčle";
Blockly.Msg.NAO_JOINT_HIPROLL = "náklon kyčle";
Blockly.Msg.NAO_JOINT_HIPYAWPITCH = "natočení kyčle";
Blockly.Msg.NAO_JOINT_KNEEPITCH = "sklon kolena";
Blockly.Msg.NAO_JOINT_SHOULDERPITCH = "sklon ramene";
Blockly.Msg.NAO_JOINT_SHOULDERROLL = "náklon ramene";
Blockly.Msg.NAO_JOINT_WRISTYAW = "natočení zápěstí";
Blockly.Msg.NAO_LEARNFACEOF = "naučit se tvář";
Blockly.Msg.NAO_LEARNFACE_TOOLTIP = "Naučí a uloží tvář pod zadaným jménem do databáze rozpoznaných tváři v robotovi.";
Blockly.Msg.NAO_LED = "led";
Blockly.Msg.NAO_LEDOFF_TOOLTIP = "Vyplne vybrané LED.";
Blockly.Msg.NAO_LEDRESET_TOOLTIP = "Resetuje vybrané LED do jejich výchozího stavu (včetně barvy a intenzity).";
Blockly.Msg.NAO_LED_ALL = "vše";
Blockly.Msg.NAO_LED_CHEST = "hruď";
Blockly.Msg.NAO_LED_EAR = "ucho";
Blockly.Msg.NAO_LED_EARS = "uši";
Blockly.Msg.NAO_LED_EYE = "oko";
Blockly.Msg.NAO_LED_EYES = "oči";
Blockly.Msg.NAO_LED_FOOT = "noha";
Blockly.Msg.NAO_LED_HEAD = "hlava";
Blockly.Msg.NAO_LED_TOOLTIP = "Nastaví barvu skupiny LED.";
Blockly.Msg.NAO_LOOKAT = "podívej se na";
Blockly.Msg.NAO_MARK_GET_INFORMATION_TOOLTIP = "Tento blok vrátí dodatečné informace o dané NAO značce ve formátu jednorozměrného pole s následujícími hodnotami : [XAngle, YAngle, XSize, YSize, Heading], pamatujte, že všechny hodnoty jsou uváděné v úhlu kamery.";
Blockly.Msg.NAO_MOVE = "pobyb";
Blockly.Msg.NAO_MOVEJOINT_TOOLTIP = "Pobyb jednoho kloubu. Relativní pohyb znamená, že aktuální poloha kloubu je použita při výpočtu nové polohy. Dejte pozor, že každý kloub má jiné limity pohybu.";
Blockly.Msg.NAO_PART_ARM = "paže";
Blockly.Msg.NAO_PART_ARMS = "paže";
Blockly.Msg.NAO_PART_BODY = "tělo";
Blockly.Msg.NAO_PART_HEAD = "hlava";
Blockly.Msg.NAO_PART_LEG = "noha";
Blockly.Msg.NAO_PART_LEGS = "nohy";
Blockly.Msg.NAO_PERFORM = "proveď";
Blockly.Msg.NAO_PHRASE = "fráze";
Blockly.Msg.NAO_PLAYFILE_TOOLTIP = "Přehraje zvukový soubor z robota. Vložte název souboru, soubor musí být předem přenesen do robota.";
Blockly.Msg.NAO_PLAY_FILE = "přehraj soubor";
Blockly.Msg.NAO_POINTAT = "ukaž na";
Blockly.Msg.NAO_POINTLOOKAT_TOOLTIP = "Robot ukáže nebo se podívá na zadané místo. Robot pohne jednou svojí rukou nebo hlavou. Pro podrobnosti o souřadnicovém systému se podívejte na WIKI.";
Blockly.Msg.NAO_POSTURE_CROUCH = "dřepnout si";
Blockly.Msg.NAO_POSTURE_LYINGBACK = "lehnout si na záda";
Blockly.Msg.NAO_POSTURE_LYINGBELLY = "lehnout si na břicho";
Blockly.Msg.NAO_POSTURE_REST = "rest";  // untranslated
Blockly.Msg.NAO_POSTURE_SIT = "sit";  // untranslated
Blockly.Msg.NAO_POSTURE_SITRELAX = "posadit se";
Blockly.Msg.NAO_POSTURE_STAND = "postavit se";
Blockly.Msg.NAO_POSTURE_STANDINIT = "postavit se";
Blockly.Msg.NAO_POSTURE_STANDZERO = "postavit se";
Blockly.Msg.NAO_QQVGA = "160*120";
Blockly.Msg.NAO_QVGA = "320*240";
Blockly.Msg.NAO_RANDOMEYES = "náhodné oči";
Blockly.Msg.NAO_RANDOMEYES_TOOLTIP = "Barva očí se náhodně mění po zadaný čas (v ms).";
Blockly.Msg.NAO_RASTA = "rasta";
Blockly.Msg.NAO_RASTA_TOOLTIP = "Barva očí se mění mezi zelenou, žlutou a červenou po zadaný čas (v ms).";
Blockly.Msg.NAO_RECOGNIZEWORD = "rozpoznej slovo ze seznamu";
Blockly.Msg.NAO_RECOGNIZEWORD_TOOLTIP = "Vrátí slovo ze zadaného seznamu, když je rozpoznáno.";
Blockly.Msg.NAO_RECORDVIDEO = "zaznamenej video";
Blockly.Msg.NAO_RECORDVIDEO_TOOLTIP = "Zaznamená video a uloží ho v robotovi.";
Blockly.Msg.NAO_RELATIVE = "relativní";
Blockly.Msg.NAO_RESOLUTION = "rozlišení";
Blockly.Msg.NAO_SETINTENSITY_TOOLTIP = "Nastaví intenzitu skupiny LED v rozsahu 0-100.";
Blockly.Msg.NAO_SETLANGUAGE_TOOLTIP = "Nastaví jazyk. Pamatujte, že nejprve musíte sáhnout jazykový balíček. Další informace hledejte v návodu k robotovi.";
Blockly.Msg.NAO_SETVOLUME_TOOLTIP = "Nastaví hlasitost.";
Blockly.Msg.NAO_STIFFNESS = "tuhost";
Blockly.Msg.NAO_STIFFNESS_TOOLTIP = "Tuhost vybrané části těla je zapnuta nebo vypnuta. Pozor, pokud uvolníte motor na noze robota, robot může upadnout.";
Blockly.Msg.NAO_STOP = "přeruš pohyb";
Blockly.Msg.NAO_STOP_TOOLTIP = "Robot okamžitě zastaví všechny pohyby. Pozor, toto může vést až k pádu robota.";
Blockly.Msg.NAO_TAI_CHI = "tai chi";
Blockly.Msg.NAO_TAKEPICTURE = "vyfoť";
Blockly.Msg.NAO_TAKEPICTURE_TOOLTIP = "Vyfotí obrázek a uloží ho v robotovi. Pro prohlédnutí obrázku využijte souborový systém robota.";
Blockly.Msg.NAO_TOUCHSENSOR_TOOLTIP = "Je pravda pokud je dotykový senzor robota stisknut.";
Blockly.Msg.NAO_TURN_TOOLTIP = "Otočí robota o zadaný počet stupňů. Vkládeje pouze kladné číslo a použijte rozbalovací seznam pro výběr směru.";
Blockly.Msg.NAO_VGA = "640*480";
Blockly.Msg.NAO_WALK = "jdi";
Blockly.Msg.NAO_WALKTO = "jdi k";
Blockly.Msg.NAO_WALKTO_TOOLTIP = "Robot jde k zadanému místu. Údaje jsou vkládány v cm a radiánech a jsou založeny na soustavě souřadnic robota. Pro další informace se podívejte na WIKI.";
Blockly.Msg.NAO_WALK_ASYNC_TOOLTIP = "Robot bude chodit bez přestávky.";
Blockly.Msg.NAO_WALK_TOOLTIP = "Robot ujde danou vzdálenost zadanou v cm. Hodnoty menší než 10cm nemusí způsobit žádný pohyb robota. V závislosti na robotovi a povrchu, po kterém se pohybuje, nemusí být ujitá vzdálenost přesná.";
Blockly.Msg.NAO_WAVE = "zamávej";
Blockly.Msg.NAO_WIPE_FOREHEAD = "otřít čelo";
Blockly.Msg.NEW_VARIABLE = "New variable...";  // untranslated
Blockly.Msg.NEW_VARIABLE_TITLE = "New variable name:";  // untranslated
Blockly.Msg.NO = "ne";
Blockly.Msg.NXTBRICK_TOOLTIP = "Představuje kostku NXT s připojenými motory a senzory. Jsou zde také dostupné zabudované součásti, například tlačítka, displej...";
Blockly.Msg.OFF = "vypnout";
Blockly.Msg.OLDER_THEN_14 = "Je mi 16 let nebo více!";
Blockly.Msg.ON = "zapnout";
Blockly.Msg.ORA_ACCESS_RIGHT_CHANGED = "The shared right is updated!";  // untranslated
Blockly.Msg.ORA_ACCESS_RIGHT_DELETED = "The shared right is deleted!";  // untranslated
Blockly.Msg.ORA_ACCOUNT_NOT_ACTIVATED_TO_SHARE = "Nemáte oprávnění ke sdílení. Aktivujte si svůj účet! <br><a href=\"https://www.roberta-home.de/index.php?id=138&L=1\" target=\"_blank\">Další informace...</a>";
Blockly.Msg.ORA_COMMAND_INVALID = "Chybný příkaz Javascriptu";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_CONFIGURATION_NOT_FOUND = "Nastavení robota není možné najít na serveru.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_CONFIGURATION_TRANSFORM_FAILED = "Nastavení robota nemůže být převedeno do programovacího jazyka robota.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_COMPILE_FAILED = "Program nemůže být přeložen do strojového kódu.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_GENERATION_FAILED = "Program nemůže být vygenerován.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_GENERATION_FAILED_WITH_PARAMETERS = "The program could not be generated. Pin {PIN} is incorrect in block {BLOCK}";  // untranslated
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_NOT_FOUND = "Program nelze převést do programovacího jazyku robota.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_STORE_FAILED = "Program nelze uložit z důvodu vnitřní chyby.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_TRANSFORM_FAILED = "Program nelze převést do programovacího jazyku robota.";
Blockly.Msg.ORA_CONFIGURATION_DELETE_ERROR = "Při mazání nastavení robota došlo k chybě, zkuste to znovu!";
Blockly.Msg.ORA_CONFIGURATION_DELETE_SUCCESS = "Nastavení smazáno";
Blockly.Msg.ORA_CONFIGURATION_ERROR_ID_INVALID = "Název nastavení není platný identifikátor";
Blockly.Msg.ORA_CONFIGURATION_GET_ALL_SUCCESS = "Nastavení nahráno";
Blockly.Msg.ORA_CONFIGURATION_GET_ONE_ERROR_NOT_FOUND = "Nastavení robota není možné najít v databázi.";
Blockly.Msg.ORA_CONFIGURATION_GET_ONE_SUCCESS = "Nastavení nahráno";
Blockly.Msg.ORA_CONFIGURATION_SAVE_ERROR = "Při ukládání nastavení robota došlo k chybě.";
Blockly.Msg.ORA_CONFIGURATION_SAVE_ERROR_NOT_SAVED_TO_DB = "Při ukládání nastavení robota do databáze došlo k chybě.";
Blockly.Msg.ORA_CONFIGURATION_SAVE_SUCCESS = "Nastavení uloženo";
Blockly.Msg.ORA_EXPRBLOCK_PARSE_ERROR = "Could not parse the expression.";  // untranslated
Blockly.Msg.ORA_EXPRBLOCK_TYPECHECK_ERROR = "Errors where produced when typecheking the expression.";  // untranslated
Blockly.Msg.ORA_EXPRBLOCK_TYPECHECK_ERROR_INVALID_ARGUMENT_NUMBER = "Wrong number of arguents in function call (Check help for more info on the arguments of the function).";  // untranslated
Blockly.Msg.ORA_EXPRBLOCK_TYPECHECK_ERROR_INVALID_ARGUMENT_TYPE = "The expression »$« has the wrong type of argument in function call.";  // untranslated
Blockly.Msg.ORA_EXPRBLOCK_TYPECHECK_ERROR_INVALID_OPERAND_TYPE = "Invalid type of operand in expression!";  // untranslated
Blockly.Msg.ORA_EXPRBLOCK_TYPECHECK_ERROR_INVALID_TYPE_FOR_LIST_ELEMENT = "All elements on the list must have the same type.";  // untranslated
Blockly.Msg.ORA_EXPRBLOCK_TYPECHECK_ERROR_SYNTAX_ERROR = "Syntax error in expression!";  // untranslated
Blockly.Msg.ORA_EXPRBLOCK_TYPECHECK_ERROR_UNDECLARED_VARIABLE = "Variable »$« not declared";  // untranslated
Blockly.Msg.ORA_EXPRBLOCK_TYPECHECK_ERROR_UNEXPECTED_METHOD = "You cannot use void methods in that expression.";  // untranslated
Blockly.Msg.ORA_EXPRBLOCK_TYPECHECK_ERROR_UNEXPECTED_RETURN_TYPE = "Wrong type of return value from expression!";  // untranslated
Blockly.Msg.ORA_GALLERY_UPLOAD_ERROR = "Váš program »$« nemůže být nahrán do galerie, vypadá to, že už tam je.";
Blockly.Msg.ORA_GALLERY_UPLOAD_SUCCESS = "Váš program »$« je nyní v galerii!";
Blockly.Msg.ORA_GROUP_CREATE_ERROR_NOT_SAVED_TO_DB = "Tato skupina už existuje";
Blockly.Msg.ORA_LIKE_DELETE_SUCCESS = "Už program »$« nemáte oblíbený!";
Blockly.Msg.ORA_LIKE_SAVE_ERROR_EXISTS = "Nemůžete si program »$« oblíbit. Možná už ho v oblibě máte.";
Blockly.Msg.ORA_LIKE_SAVE_SUCCESS = "Nyní jste si program »$« oblíbil!";
Blockly.Msg.ORA_LIST_CREATE_WITH_ERROR = "Error: This block may be used only within a variable declaration.";  // untranslated
Blockly.Msg.ORA_OWNER_DOES_NOT_EXIST = "Vlastník neexistuje";
Blockly.Msg.ORA_PROGRAM_CONFIGURATION_NOT_COMPATIBLE = "Program není kompatibilní s daným nastavením";
Blockly.Msg.ORA_PROGRAM_DELETE_ERROR = "Při mazání nastavení došlo k chybě. Prosím zkuste to znovu!";
Blockly.Msg.ORA_PROGRAM_DELETE_SUCCESS = "Program smazán";
Blockly.Msg.ORA_PROGRAM_ERROR_ID_INVALID = "Název vašeho programu už v systému existuje. Zvolte prosím jiný název a zkuste to znovu!";
Blockly.Msg.ORA_PROGRAM_GET_ALL_SUCCESS = "Program nahrán";
Blockly.Msg.ORA_PROGRAM_GET_ONE_ERROR_NOT_FOUND = "Program nebyl nalezen.";
Blockly.Msg.ORA_PROGRAM_GET_ONE_ERROR_NOT_LOGGED_IN = "Nejste přihlášen, prosím přihlašte se pomocí vašeho uživatelského jméno a hesla nebo si založte nový účet.";
Blockly.Msg.ORA_PROGRAM_GET_ONE_SUCCESS = "Program nahrán";
Blockly.Msg.ORA_PROGRAM_IMPORT_ERROR = "»$.xml« není platný formát NEPO programu a nemůžet být nahrán!";
Blockly.Msg.ORA_PROGRAM_IMPORT_ERROR_WRONG_ROBOT_TYPE = "Pokoušíte se importovat program pro robota jiného typu než je nastaveno v menu. <br> Prosím změňte typ robota v menu a zkuste import znovu!";
Blockly.Msg.ORA_PROGRAM_INVALID_STATEMETNS = "V programu jsou chyby. Podívejte se na zprávy";
Blockly.Msg.ORA_PROGRAM_SAVE_AS_ERROR_PROGRAM_EXISTS = "Program už existuje.";
Blockly.Msg.ORA_PROGRAM_SAVE_ERROR_NO_WRITE_PERMISSION = "Nemáte právo měnit tento program!";
Blockly.Msg.ORA_PROGRAM_SAVE_ERROR_OPTIMISTIC_TIMESTAMP_LOCKING = "Tento program byl naposledy změněn někým jiným. Pro uložení vašich změn do nového programu vyberte >uložit jako< !";
Blockly.Msg.ORA_PROGRAM_SAVE_ERROR_PROGRAM_TO_UPDATE_NOT_FOUND = "Program nelze nalézt, proto ho nelze aktualizovat.";
Blockly.Msg.ORA_PROGRAM_SAVE_SUCCESS = "Program uložen";
Blockly.Msg.ORA_PROGRAM_TO_SHARE_DOES_NOT_EXIST = "Program, který chcete sdílet, neexistuje.";
Blockly.Msg.ORA_ROBOT_DOES_NOT_EXIST = "Zdá se, že požadavaný systém není podporován!<br>Vyberte prosím jiný.";
Blockly.Msg.ORA_ROBOT_FIRMWAREUPDATE_IMPOSSIBLE = "Při aktualizaci firmware vašeho robota došlo k chybě.";
Blockly.Msg.ORA_ROBOT_FIRMWAREUPDATE_POSSIBLE = "Firmware byl aktualizován";
Blockly.Msg.ORA_ROBOT_NOT_CONNECTED = "Robot není připojen. Zkontrolujte, zda je robot zapnut, připojte ho k serveru a zadejte jeho heslo v menu robot-připojení. <br />Pokud máte stále problémy, podívejte se na stránky s nápovědou.";
Blockly.Msg.ORA_ROBOT_NOT_WAITING = "Robot nečeká na příkaz start.";
Blockly.Msg.ORA_ROBOT_PUSH_RUN = "Robot čekal a nyní je soubor jar přenášen do robota.";
Blockly.Msg.ORA_ROBOT_PUSH_RUN_CALLIOPE2016 = "Your program »$« is downloaded to Calliope, press the reset button to start it!";  // untranslated
Blockly.Msg.ORA_ROBOT_PUSH_RUN_NXT = "Your program »$« is downloaded to the NXT, start it on the robot!";  // untranslated
Blockly.Msg.ORA_ROBOT_SET_SUCCESS = "Přepnuto do systému »$«!";
Blockly.Msg.ORA_SERVER_ERROR = "Chyba serveru";
Blockly.Msg.ORA_TOKEN_SET_ERROR_NO_ROBOT_WAITING = "Zkontrolujte, zda je robot zapnut a připojen k serveru. <br />Pokud máte stále problémy, podívejte se na stránky s nápovědou.";
Blockly.Msg.ORA_TOKEN_SET_ERROR_WRONG_ROBOTTYPE = "Pokoušíte se připojit robota jiného typu než je nastaveno v menu. <br> Prosím, vyberte v menu správný typ robota a zkuste se připojit znovu!";
Blockly.Msg.ORA_TOKEN_SET_SUCCESS = "Kód nastaven";
Blockly.Msg.ORA_TOOLBOX_DELETE_ERROR = "Při mazání palety nástrojů došlo k chybě, zkuste to prosím později!";
Blockly.Msg.ORA_TOOLBOX_DELETE_SUCCESS = "Paleta nástrojů vymazána";
Blockly.Msg.ORA_TOOLBOX_ERROR_ID_INVALID = "Název palety nástrojů není platný.";
Blockly.Msg.ORA_TOOLBOX_GET_ALL_SUCCESS = "Paleta nástrojů nahrána";
Blockly.Msg.ORA_TOOLBOX_GET_ONE_ERROR_NOT_FOUND = "Paleta nástrojů nemůže být nalezena v databázi.";
Blockly.Msg.ORA_TOOLBOX_GET_ONE_SUCCESS = "Paleta nástrojů nahrána";
Blockly.Msg.ORA_TOOLBOX_SAVE_ERROR = "Při ukládání palety nástrojů došlo k chybě.";
Blockly.Msg.ORA_TOOLBOX_SAVE_ERROR_NOT_SAVED_TO_DB = "Při ukládání nastavení do databáze došlo k chybě.";
Blockly.Msg.ORA_TOOLBOX_SAVE_SUCCESS = "Paleta nástrojů uložena";
Blockly.Msg.ORA_TOOLBOX_TRANSFORM_ERROR = "Chyba při transformaci?";
Blockly.Msg.ORA_USER_ACTIVATION_INVALID_URL = "Odkaz již není platný. Prosím požádejte znovu o zaslání ověřovacího emailu.";
Blockly.Msg.ORA_USER_ACTIVATION_SENT_MAIL_FAIL = "Omlouváme se, ale nemůžete vám poslat email, prosím kontaktujte »support-o-r@iais.fraunhofer.de«";
Blockly.Msg.ORA_USER_ACTIVATION_SENT_MAIL_SUCCESS = "Poslali jsme vám email, zkontrolujte si prosím schránku!";
Blockly.Msg.ORA_USER_ACTIVATION_SUCCESS = "Váš účet byl úspěšně ověřen! Přihlašte se prosím!";
Blockly.Msg.ORA_USER_CREATE_ERROR_ACCOUNT_LENGTH = "Vámi zvolené jméno účtu nebo vaše uživatelské jméno je příliš dlouhé. Nemělo by být delší než 25 znaků. Váš účet nemohl být vytvořen.";
Blockly.Msg.ORA_USER_CREATE_ERROR_CONTAINS_SPECIAL_CHARACTERS = "Používáte jeden nebo více speciálních znaků ve vašem jméně účtu! Odstraňte je prosím. Váš účet nemohl být vytvořen.";
Blockly.Msg.ORA_USER_CREATE_ERROR_MISSING_REQ_FIELDS = "Zkontrolujte, zda všechna požadovaná pole byla vyplněna. Váš účet nemohl být vytvořen.";
Blockly.Msg.ORA_USER_CREATE_ERROR_NOT_SAVED_TO_DB = "Zadané uživatelské jméno již existuje v databázi, zvolte prosím jiné jméno.";
Blockly.Msg.ORA_USER_CREATE_SUCCESS = "Váš uživatelský účet »$« byl úspěšně vytvořen!";
Blockly.Msg.ORA_USER_DEACTIVATION_SUCCESS = "Váš účet není ověřen, zkontrolujte si prosím emailovou schránku!";
Blockly.Msg.ORA_USER_DELETE_ERROR_ID_NOT_FOUND = "Chyba při mazání uživatele.";
Blockly.Msg.ORA_USER_DELETE_ERROR_NOT_DELETED_IN_DB = "Chyba při mazání uživatele v databázi.";
Blockly.Msg.ORA_USER_DELETE_SUCCESS = "Váš účet »$« byl úspěšně vymazán. Doufáme, že se opět brzy uvidíme!";
Blockly.Msg.ORA_USER_EMAIL_ONE_ERROR_USER_NOT_EXISTS_WITH_THIS_EMAIL = "Tento e-mail je neznámý, možná překlep?";
Blockly.Msg.ORA_USER_ERROR_EMAIL_USED = "Účet s touto e-mailovou adresou je již registrován. Zvolte prosím jinou e-mailovou adresu!";
Blockly.Msg.ORA_USER_GET_ALL_SUCCESS = "Uživatel nahrán";
Blockly.Msg.ORA_USER_GET_ONE_ERROR_ID_OR_PASSWORD_WRONG = "Zadali jste špatné uživatelské jméno nebo heslo. Zkuste to znovu!";
Blockly.Msg.ORA_USER_GET_ONE_SUCCESS = "Přihlášení bylo úspěšné";
Blockly.Msg.ORA_USER_GROUP_SAVE_AS_ERROR_USER_GROUP_EXISTS = "Tento uživatel už patří do skupiny";
Blockly.Msg.ORA_USER_PASSWORD_RECOVERY_EXPIRED_URL = "Odkaz již není platný. Prosím požádejte znovu o resetování svého hesla, pokud si ho stále nepamatujete.";
Blockly.Msg.ORA_USER_PASSWORD_RECOVERY_SENT_MAIL_FAIL = "Omlouváme se, ale nemůžeme vám poslat email, kontaktuje prosím »support-o-r@iais.fraunhofer.de«";
Blockly.Msg.ORA_USER_PASSWORD_RECOVERY_SENT_MAIL_SUCCESS = "Email odeslán, zkontrolujte si prosím emailovou schránku!";
Blockly.Msg.ORA_USER_TO_ADD_NOT_FOUND = "Uživatel nebyl nalezen";
Blockly.Msg.ORA_USER_TO_SHARE_DOES_NOT_EXIST = "Uživatel, se kterým chcete sdílet program, neexistuje. <br />Zkuste to znovu!";
Blockly.Msg.ORA_USER_TO_SHARE_SAME_AS_LOGIN_USER = "Nemůžete sdílet program sám se sebou.";
Blockly.Msg.ORA_USER_UPDATE_SUCCESS = "Vaše heslo bylo úspěšně změněno!";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";  // untranslated
Blockly.Msg.OUTPUT = "output";  // untranslated
Blockly.Msg.PASSWORD = "Password";  // untranslated
Blockly.Msg.PIN_ISTOUCHED_TOOLTIP = "Is the selected pin touched?";  // untranslated
Blockly.Msg.PIN_PULL = "pull";  // untranslated
Blockly.Msg.PIN_PULL_DOWN = "down";  // untranslated
Blockly.Msg.PIN_PULL_NONE = "none";  // untranslated
Blockly.Msg.PIN_PULL_UP = "up";  // untranslated
Blockly.Msg.PIN_SET_PULL_TOOLTIP = "Sets the pull of the chosen pin";  // untranslated
Blockly.Msg.PIN_WRITE = "zapiš";
Blockly.Msg.PITCH = "sklon";
Blockly.Msg.PLAY = "přehraj tón";
Blockly.Msg.PLAY_DURATION = "doba trvání v ms";
Blockly.Msg.PLAY_EIGHTH = "osminová nota";
Blockly.Msg.PLAY_FILE = "soubor";
Blockly.Msg.PLAY_FILE_TOOLTIP = "Přehraje zvukový soubor.";
Blockly.Msg.PLAY_FREQUENZ = "frekvence v Hz";
Blockly.Msg.PLAY_GETVOLUME_TOOLTIP = "Vrátí aktuální hlasitost.";
Blockly.Msg.PLAY_HALF = "půlová nota";
Blockly.Msg.PLAY_NOTE = "nota";
Blockly.Msg.PLAY_NOTE_TOOLTIP = "Přehraje notu";
Blockly.Msg.PLAY_QUARTER = "čtrťová nota";
Blockly.Msg.PLAY_SETVOLUME_TOOLTIP = "Nastaví hlasitost.";
Blockly.Msg.PLAY_SIXTEENTH = "šestnáctinová nota";
Blockly.Msg.PLAY_TONE = "tón";
Blockly.Msg.PLAY_TONE_TOOLTIP = "Přehraje tón.";
Blockly.Msg.PLAY_TOOLTIP = "Represents a buzzer.";  // untranslated
Blockly.Msg.PLAY_VOLUME = "hlasitost";
Blockly.Msg.PLAY_WHOLE = "celá nota";
Blockly.Msg.POPUP_ABOUT_JOIN = "Rád bych pomohl";
Blockly.Msg.POPUP_ABOUT_TEXT = "Open Roberta Lab je online integrované vývojové prostředí, které umožňuje dětem snadno programovat různé robotické/řídící systémy. Prostředí je zcela open source, takže se můžete bez obav zapojit! Jak programy tak vývojové nástroje jsou dostupné na serverech Fraunhoferova institutu.";
Blockly.Msg.POPUP_ABOUT_TEXT_DEV = "Open Roberta Lab je open source vývojová platforma vyvinutá Fraunhofer IAIS v rámci iniciativy <a href='http://www.roberta-home.de/'>»Roberta – Učení s roboty«</a>";
Blockly.Msg.POPUP_ABOUT_TEXT_GOOG = "Open Roberta byla založena ve spolupráci s Google Německo aby zmenšila překážky studentů, učitelů a škol při programování výukových robotů. Open Roberta je financována  Google.org (2014 - 2015) částkou 1Mio Euro.</a>";
Blockly.Msg.POPUP_AGE = "Věk";
Blockly.Msg.POPUP_ATTENTION = "Pozor";
Blockly.Msg.POPUP_BEFOREUNLOAD = "V programu nebo nastavení jsou neuložené změny. Přihlašte se a uložte program nebo nastavení.";
Blockly.Msg.POPUP_BEFOREUNLOAD_LOGGEDIN = "V programu nebo nastavení jsou neuložené změny.";
Blockly.Msg.POPUP_CANCEL = "Storno";
Blockly.Msg.POPUP_CHANGE_PASSWORD = "změna hesla...";
Blockly.Msg.POPUP_CONFIRM_CONTINUE = "<br><br><i>Stiskněte »OK« pro zrušení vaší práce. Stiskněte »Zrušit« abyste zde zůstali a uložili svoji práci.</i>";
Blockly.Msg.POPUP_CONFIRM_DELETE_CONFIGURATION = "Opravdu chcete smazat nastavení?";
Blockly.Msg.POPUP_CONFIRM_DELETE_GROUP = "Opravdu chcete smazat tyto skupiny?";
Blockly.Msg.POPUP_CONFIRM_DELETE_PROGRAM = "Opravdu chcete smazat následující program/y?<br>Pokud smažete sdílený program, smažete jen sdílení ale program ne.<br><br>Pokud smažete program s vlastníkem »Galerie«, odstraníte váš program z galerie!";
Blockly.Msg.POPUP_CONFIRM_DELETE_USER_GROUP = "Opravdu chcete odstranit uživatele uvedené níže z aktuální skupiny?";
Blockly.Msg.POPUP_CONFIRM_UPDATE_FIRMWARE = "Pro vašeho robota je k dispozici nový firmware. Můžete zkusit spustit program se starým firmware, ale nejlépe bude když firmware svého robota nyní aktualizujete! Stačí, když kliknete na >>Aktualizovat nyní<<.";
Blockly.Msg.POPUP_CONTINUE = "přesto pokračovat";
Blockly.Msg.POPUP_DISPLAY_HEADER = "output of your program";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD = "Nahrát váš program do »$«";
Blockly.Msg.POPUP_DOWNLOAD_CHECK = "OK, změnil jsem trvale složku pro stahování souborů ve svém prohlížeči. Toto okno už nezobrazuj a stahuj moje programy přímo.";
Blockly.Msg.POPUP_DOWNLOAD_STEP_1 = "Right click on your program link below and";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_1_SENSEBOX = "Check that your device is in programming mode (LED dimming in a pattern), if not, double press the red button. Right click on you program link below and";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_2 = "choose »Save link as ...«, then";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_3 = "click on your connected »$« in the left column,";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_4 = "now click on the »Save« button on the bottom right.<br><span style='font-size: 14px;'>If your program doesn't start automatically press the reset button after a while.</span>";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_4_SENSEBOX = "now click on the »Save« button on the bottom right.";  // untranslated
Blockly.Msg.POPUP_DO_UPDATE_FIRMWARE = "Aktualizovat nyní";
Blockly.Msg.POPUP_EMAIL = "E-mail";
Blockly.Msg.POPUP_EMAIL_SEND = "Odeslat nyní";
Blockly.Msg.POPUP_GET_LINK = "Zde je odkaz na váš aktuální program. Prosím, neměňte ho, pak už pravděpodobně nebude fungovat. Odkaz už byl zkopírován do schránky!</br>$";
Blockly.Msg.POPUP_MULTIPLE_ROBOTS = "Select multiple programs for the simulation";  // untranslated
Blockly.Msg.POPUP_MULTROBOTS_NOPROGRAMS = "Please create and store at least two programs which then can be executed each by a simulated robot!";  // untranslated
Blockly.Msg.POPUP_NAME = "Jméno";
Blockly.Msg.POPUP_NEW_PASSWORD = "Nové heslo";
Blockly.Msg.POPUP_OLD_PASSWORD = "Staré heslo";
Blockly.Msg.POPUP_PASSWORD = "Heslo";
Blockly.Msg.POPUP_PASSWORD_RECOVERY = "resetovat heslo...";
Blockly.Msg.POPUP_PROGRAM_TERMINATED_UNEXPECTED = "Provádění programu robota bylo neočekávaně ukončeno!";
Blockly.Msg.POPUP_REGISTER_USER = "Registrovat nyní";
Blockly.Msg.POPUP_REPEAT_PASSWORD = "Zopakujte heslo";
Blockly.Msg.POPUP_ROBOT_BATTERY = "Napětí";
Blockly.Msg.POPUP_ROBOT_NAME = "Jméno";
Blockly.Msg.POPUP_ROBOT_NOT_CONNECTED = "Nejprve musíte připojit svého robota.";
Blockly.Msg.POPUP_ROBOT_STATE = "Stav";
Blockly.Msg.POPUP_ROBOT_STATE_BUSY = "zaneprázdněn";
Blockly.Msg.POPUP_ROBOT_STATE_DISCONNECTED = "odpojený";
Blockly.Msg.POPUP_ROBOT_STATE_WAIT = "čekej";
Blockly.Msg.POPUP_ROBOT_SYSTEM = "Systém";
Blockly.Msg.POPUP_ROBOT_WAIT = "Čekací doba";
Blockly.Msg.POPUP_SCANNED_ROBOTS = "found robots";  // untranslated
Blockly.Msg.POPUP_STARTUP_COOKIES = "Používáme cookies pro přizpůsobení obsahu a pro analýzu provozu.";
Blockly.Msg.POPUP_STARTUP_HELP = "Potřebujete pomoc?";
Blockly.Msg.POPUP_STARTUP_HELP_TEXT = "V naší podrobné nápovědě je vysvětleno vše, co potřebujete, od instrukcí pro stavbu po často kladené otázky. Vše jen anglicky!";
Blockly.Msg.POPUP_STARTUP_HIDE = "OK, toto okno už nezobrazuj a pamatuj si moji volbu.";
Blockly.Msg.POPUP_STARTUP_START = "Vyberte váš systém!";
Blockly.Msg.POPUP_STARTUP_TOUR_TEXT = "Chcete začít, ale nevíte jak? Ukážeme vám první kroky v interaktivním tutoriálu.";
Blockly.Msg.POPUP_TOUR = "prohlídka";
Blockly.Msg.POPUP_USERNAME = "Uživatelské jméno";
Blockly.Msg.POPUP_USERNAME_LOGOFF = "Nejste přihlášen.";
Blockly.Msg.POPUP_VALUE = "Hodnota";
Blockly.Msg.POPUP_WLAN_SECURITY_INFORMATION = "Please note that the data provided in this dialog window is private and will not be stored in the OpenRoberta lab; it will only be used for program creation and during the compilation process. Make sure that for each new session you enter these credentials again. Please keep in mind that exposing this information to public may pose security risks.";  // untranslated
Blockly.Msg.POPUP_WLAN_SSID = "SSID";  // untranslated
Blockly.Msg.PORT_ANKLE = "ankle";  // untranslated
Blockly.Msg.PORT_BUMPER = "bumper";  // untranslated
Blockly.Msg.PORT_ELBOW = "elbow";  // untranslated
Blockly.Msg.PORT_HAND = "hand";  // untranslated
Blockly.Msg.PORT_HEAD = "head";  // untranslated
Blockly.Msg.PORT_HIP = "hip";  // untranslated
Blockly.Msg.PORT_INTERNAL = "Port internal";  // untranslated
Blockly.Msg.PORT_KNEE = "knee";  // untranslated
Blockly.Msg.PORT_SHOULDER = "shoulder";  // untranslated
Blockly.Msg.PORT_WRIST = "wrist";  // untranslated
Blockly.Msg.POTENTIOMETER_TOOLTIP = "Represents a potentiometer .";  // untranslated
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "allow statements";  // untranslated
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "with:";  // untranslated
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Run the user-defined function '%1'.";  // untranslated
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Run the user-defined function '%1' and use its output.";  // untranslated
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "with:";  // untranslated
Blockly.Msg.PROCEDURES_CREATE_DO = "Create '%1'";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Describe this function...";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "proveď něco";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "to";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Creates a function with no output.";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "return";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Creates a function with an output.";  // untranslated
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Warning: This function has duplicate parameters.";  // untranslated
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Highlight function definition";  // untranslated
Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "If a value is true, then return a second value.";  // untranslated
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Warning: This block may be used only within a function definition.";  // untranslated
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "input name:";  // untranslated
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Add an input to the function.";  // untranslated
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "inputs";  // untranslated
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Add, remove, or reorder inputs to this function.";  // untranslated
Blockly.Msg.PROCEDURES_TITLE = "procedura";
Blockly.Msg.PROCEDURES_VARIABLES_ERROR = "Chyba: Tento blok může být použit jen v rámci »";
Blockly.Msg.PROCEDURES_VARIABLES_LOOP_ERROR = "Chyba: Tento blok může být použit jen v rámci cyklu který deklaruje";
Blockly.Msg.PROGLIST_DELETE_ALL_TOOLTIP = "Klikněte zde pro smazání všech vybraných programů.";
Blockly.Msg.PROGLIST_DELETE_TOOLTIP = "Klikněte zde pro smazání vašeho programu.";
Blockly.Msg.PROGLIST_LOAD_TOOLTIP = "Klikněte zde pro nahrání konfigurace vašeho robota do prostředí pro nastavování.";
Blockly.Msg.PROGLIST_SHARE_TOOLTIP = "Klikněte zde pro sdílení vašeho programu s přítelem.";
Blockly.Msg.PROGLIST_SHARE_WITH_GALLERY = "Opravdu chcete vás program sdílet se všemi? Pokud si nejste jisti, podívejte se na otázky a odpovědi <a href=\"https://www.roberta-home.de/index.php?id=138&L=1\" target=\"_blank\">zde</a>.";
Blockly.Msg.PROGLIST_SHARE_WITH_GALLERY_TOOLTIP = "Klikněte zde pro nahrání vašeho programu do galerie, budete ho sdílet se všemi uživateli";
Blockly.Msg.PULSEHIGH = "pulse time HIGH";  // untranslated
Blockly.Msg.PULSELOW = "pulse time LOW";  // untranslated
Blockly.Msg.PULSETOOLTIP = "Represents a pulse sensor.";  // untranslated
Blockly.Msg.RADIO_GET_RSSI_TOOLTIP = "Vrátí RSSI posledního balíčku.";
Blockly.Msg.REDO = "Redo";  // untranslated
Blockly.Msg.RELAY = "relay";  // untranslated
Blockly.Msg.RELAY_ARDUINO = "relay SRD-05VDC-SL-C";  // untranslated
Blockly.Msg.RELAY_TOOLTIP = "Represents a relay.";  // untranslated
Blockly.Msg.REMOVE_COMMENT = "Remove Comment";  // untranslated
Blockly.Msg.RENAME_VARIABLE = "Rename variable...";  // untranslated
Blockly.Msg.RENAME_VARIABLE_TITLE = "Rename all '%1' variables to:";  // untranslated
Blockly.Msg.RESEND_ACTIVATION = "pošle znovu verifikační email";
Blockly.Msg.RETURN = "návrat";
Blockly.Msg.RFID_TOOLTIP = "Represents an RFID reader.";  // untranslated
Blockly.Msg.RGBLED_TOOLTIP = "Represents an RGB LED.";  // untranslated
Blockly.Msg.RGB_LED_TOOLTIP = "Turns the LED on or off and changes the color.";  // untranslated
Blockly.Msg.RIGHT = "right";  // untranslated
Blockly.Msg.ROLL = "náklon";
Blockly.Msg.ROTATIONS_PER_MINUTE = "rpm";  // untranslated
Blockly.Msg.SAY = "say";  // untranslated
Blockly.Msg.SAY_PARAMETERS_TOOLTIP = "The robot says the given text. It is also possible to enter special charaters. The robot will use the selected language to try and speak the entered text. Modify the speed (range: 0-100) and the pitch of the voice (range: 0-100) with the input fields";  // untranslated
Blockly.Msg.SAY_TOOLTIP = "The robot says the given text. It is also possible to enter special charaters. The robot will use the selected language to try and speak the entered text.";  // untranslated
Blockly.Msg.SEND_DATA = "poslat data";
Blockly.Msg.SEND_DATA_SENSEMAP = "openSenseMap";  // untranslated
Blockly.Msg.SEND_DATA_TO = "send data to";  // untranslated
Blockly.Msg.SEND_DATA_TO_OSM_TOOLTIP = "This block is used to send data from sensors to the openSenseMap. Please configure the IDs in the configuration prior to the usage of this block.";  // untranslated
Blockly.Msg.SENSEBOXBRICK_TOOLTIP = "Represents the senseBox. Please configure here the id's from the openSenseMap, if you want to use them.";  // untranslated
Blockly.Msg.SENSOR_ACCELEROMETER = "accelerometer";  // untranslated
Blockly.Msg.SENSOR_AMBIENTLIGHT = "senzor okolního osvětlení";
Blockly.Msg.SENSOR_ANALOGOUT = "sensor analog";  // untranslated
Blockly.Msg.SENSOR_ANY = "jakýkoli";
Blockly.Msg.SENSOR_ARM_TOOLTIP = "Vrátí true, pokud se dotknete vybrané části ruky, jinak vrátí false.";
Blockly.Msg.SENSOR_BATTERY = "napětí ve V";
Blockly.Msg.SENSOR_BOTTOM = "dole";
Blockly.Msg.SENSOR_CALIBRATE = "calibrate";  // untranslated
Blockly.Msg.SENSOR_CODE = "kódové pole";
Blockly.Msg.SENSOR_COLOUR = "barevný senzor";
Blockly.Msg.SENSOR_COMPASS = "kompas";
Blockly.Msg.SENSOR_COMPASS_EV3 = "HT compass sensor";  // untranslated
Blockly.Msg.SENSOR_DETECTFACE = "face detector";  // untranslated
Blockly.Msg.SENSOR_DETECTFACE_GETSAMPLE_TOOLTIP = "Detect a face previously learned and saved.";  // untranslated
Blockly.Msg.SENSOR_DETECTMARK = "NAO Mark sensor";  // untranslated
Blockly.Msg.SENSOR_DETECTMARK_GETSAMPLE_TOOLTIP = "Returns one or an array of IDs (number) of the last detected NAO Mark(s). If no marks are detected, -1 or an array consisting of 1 element with value -1 is returned. For a list of NAO marks with corresponding numbers refer to the wiki.";  // untranslated
Blockly.Msg.SENSOR_DIGITALOUT = "sensor digital";  // untranslated
Blockly.Msg.SENSOR_DROP = "drop sensor";  // untranslated
Blockly.Msg.SENSOR_DROP_GETSAMPLE_TOOLTIP = "Gets the current reading from the drop sensor in percent.";  // untranslated
Blockly.Msg.SENSOR_DROP_OFF = "drop-off sensor";  // untranslated
Blockly.Msg.SENSOR_ELECTRICCURRENT = "current sensor";  // untranslated
Blockly.Msg.SENSOR_ELECTRICCURRENT_GETSAMPLE_TOOLTIP = "Get the electric current from the motorboard in the selected joint.";  // untranslated
Blockly.Msg.SENSOR_ENCODER = "tachometr";
Blockly.Msg.SENSOR_FLAME = "senzor plamene";
Blockly.Msg.SENSOR_FSR = "force-sensing resistor";  // untranslated
Blockly.Msg.SENSOR_FSR_GETSAMPLE_TOOLTIP = "Get the current reading from the force sensitive resistor under the feet of the robot.";  // untranslated
Blockly.Msg.SENSOR_GESTURE = "gesto";
Blockly.Msg.SENSOR_GESTURE_ACTIVE = "aktivní?";
Blockly.Msg.SENSOR_GESTURE_DOWN = "upside down";  // untranslated
Blockly.Msg.SENSOR_GESTURE_DOWN_GETSAMPLE_TOOLTIP = "Returns »true« if the posture is down.";  // untranslated
Blockly.Msg.SENSOR_GESTURE_FACE_DOWN = "at the front side";  // untranslated
Blockly.Msg.SENSOR_GESTURE_FACE_DOWN_GETSAMPLE_TOOLTIP = "Returns »true« if the posture is face down.";  // untranslated
Blockly.Msg.SENSOR_GESTURE_FACE_UP = "at the back";  // untranslated
Blockly.Msg.SENSOR_GESTURE_FACE_UP_GETSAMPLE_TOOLTIP = "Returns »true« if the posture is face up.";  // untranslated
Blockly.Msg.SENSOR_GESTURE_FREEFALL = "freely falling";  // untranslated
Blockly.Msg.SENSOR_GESTURE_FREEFALL_GETSAMPLE_TOOLTIP = "Returns »true« if it is free falling.";  // untranslated
Blockly.Msg.SENSOR_GESTURE_SHAKE = "shaking";  // untranslated
Blockly.Msg.SENSOR_GESTURE_SHAKE_GETSAMPLE_TOOLTIP = "Returns »true« if it is shaken.";  // untranslated
Blockly.Msg.SENSOR_GESTURE_TOOLTIP = "Je systém ve vybraném stavu?";
Blockly.Msg.SENSOR_GESTURE_UP = "upright";  // untranslated
Blockly.Msg.SENSOR_GESTURE_UP_GETSAMPLE_TOOLTIP = "Returns »true« if the posture is upright.";  // untranslated
Blockly.Msg.SENSOR_GET = "vrať hodnotu";
Blockly.Msg.SENSOR_GET_SAMPLE = "vrať hodnotu";
Blockly.Msg.SENSOR_GROVE = "senzor hloubky";
Blockly.Msg.SENSOR_GYRO = "gyroskop";
Blockly.Msg.SENSOR_GYRO_TILTED_GETSAMPLE_TOOLTIP_WEDO = "Is the tilt sensors position the indicated manner?";  // untranslated
Blockly.Msg.SENSOR_GYRO_WEDO = "tilt sensor";  // untranslated
Blockly.Msg.SENSOR_HUMIDITY = "humidity sensor";  // untranslated
Blockly.Msg.SENSOR_HUMIDITY_ARDUINO = "humidity sensor DHT11";  // untranslated
Blockly.Msg.SENSOR_HUMIDITY_GETSAMPLE_TOOLTIP = "Gets the current reading from the humidity sensor in percent.";  // untranslated
Blockly.Msg.SENSOR_HUMIDITY_SENSEBOX = "humidity/temperature sensor HDC1080";  // untranslated
Blockly.Msg.SENSOR_INFRARED = "IR senzor";
Blockly.Msg.SENSOR_INFRARED_DISTANCE_GETSAMPLE_TOOLTIP_WEDO = "Gets the current relative distance from the infrared sensor. The values are between 1, close, and 10, further away.";  // untranslated
Blockly.Msg.SENSOR_IRSEEKER = "HT infrared sensor";  // untranslated
Blockly.Msg.SENSOR_IRSEEKER_GETSAMPLE_TOOLTIP = "Gets the position of an infrared beacon.";  // untranslated
Blockly.Msg.SENSOR_IS_ARM = "je ruka";
Blockly.Msg.SENSOR_IS_PIN = "je";
Blockly.Msg.SENSOR_IS_PRESSED = "stisknuto?";
Blockly.Msg.SENSOR_IS_TILTED = "tilted?";  // untranslated
Blockly.Msg.SENSOR_IS_TOUCHED = "dotýká se?";
Blockly.Msg.SENSOR_JOYSTICK = "joystick";
Blockly.Msg.SENSOR_KEY = "klávesa";
Blockly.Msg.SENSOR_KEY_ANY = "libovolná";
Blockly.Msg.SENSOR_KEY_DOWN = "dolů";
Blockly.Msg.SENSOR_KEY_ENTER = "enter";
Blockly.Msg.SENSOR_KEY_ESCAPE = "esc";
Blockly.Msg.SENSOR_KEY_LEFT = "vlevo";
Blockly.Msg.SENSOR_KEY_RIGHT = "vpravo";
Blockly.Msg.SENSOR_KEY_UP = "nahoru";
Blockly.Msg.SENSOR_LIGHT = "světelný senzor";
Blockly.Msg.SENSOR_LIGHTVEML = "visible/UV light sensor";  // untranslated
Blockly.Msg.SENSOR_LIGHTVEML_GETSAMPLE_TOOLTIP = "the current reading visible/UV light sensor";  // untranslated
Blockly.Msg.SENSOR_MIC = "mikrofon";
Blockly.Msg.SENSOR_MOISTURE = "moisture sensor";  // untranslated
Blockly.Msg.SENSOR_MOISTURE_GETSAMPLE_TOOLTIP = "Gets the current reading from the moisture sensor in percent.";  // untranslated
Blockly.Msg.SENSOR_MOTION = "motion sensor";  // untranslated
Blockly.Msg.SENSOR_MOTION_ARDUINO = "motion sensor HC-SR501";  // untranslated
Blockly.Msg.SENSOR_MOTION_GETSAMPLE_TOOLTIP = "Gets the current reading from the motion sensor (true/false).";  // untranslated
Blockly.Msg.SENSOR_MS_TIMER = "v ms";
Blockly.Msg.SENSOR_OUT = "sensor";  // untranslated
Blockly.Msg.SENSOR_OUT_ANALOG_GETSAMPLE_TOOLTIP = "Returns the value from the specified analog pin. The value is between 0 and 1024.";  // untranslated
Blockly.Msg.SENSOR_OUT_DIGITAL_GETSAMPLE_TOOLTIP = "Returns the value from the specified digital pin. The value is either HIGH »1« or LOW »0«.";  // untranslated
Blockly.Msg.SENSOR_PIN = "pin";
Blockly.Msg.SENSOR_PINTOUCH = "pin";  // untranslated
Blockly.Msg.SENSOR_PINTOUCH_BOB3 = "arm";  // untranslated
Blockly.Msg.SENSOR_PIN_ANALOG_GETSAMPLE_TOOLTIP = "Returns the value from the specified analog pin. The value is between 0 and 1024.";  // untranslated
Blockly.Msg.SENSOR_PIN_DIGITAL_GETSAMPLE_TOOLTIP = "Returns the value from the specified digital pin. The value is either HIGH »1« or LOW »0«.";  // untranslated
Blockly.Msg.SENSOR_PIN_PULSEHIGH_GETSAMPLE_TOOLTIP = "Returns the pulse HIGH on a pin in microseconds or -1 if no complete pulse was received within the timeout.";  // untranslated
Blockly.Msg.SENSOR_PIN_PULSELOW_GETSAMPLE_TOOLTIP = "Returns the pulse LOW on a pin in microseconds or -1 if no complete pulse was received within the timeout.";  // untranslated
Blockly.Msg.SENSOR_POTENTIOMETER = "potentiometer";  // untranslated
Blockly.Msg.SENSOR_POTENTIOMETER_GETSAMPLE_TOOLTIP = "Gets the current reading from the potentiometer in volts (0-5V).";  // untranslated
Blockly.Msg.SENSOR_PULSE = "pulse sensor";  // untranslated
Blockly.Msg.SENSOR_PULSE_GETSAMPLE_TOOLTIP = "Gets the current reading from the pulse sensor.";  // untranslated
Blockly.Msg.SENSOR_PULSE_GETSAMPLE_TOOLTIP_ARDUINO = "Gets the current reading from the pulse sensor. The value is between 0 and 1023.";  // untranslated
Blockly.Msg.SENSOR_RADIO_RSSI = "radiový RSSI senzor";
Blockly.Msg.SENSOR_RESET = "vynuluj";
Blockly.Msg.SENSOR_RESET_II = "";  // untranslated
Blockly.Msg.SENSOR_RFID = "RFID reader";  // untranslated
Blockly.Msg.SENSOR_RFID_ARDUINO = "RFID-RC522 reader";  // untranslated
Blockly.Msg.SENSOR_RFID_GETSAMPLE_TOOLTIP = "Gets the current reading from the RFID reader.";  // untranslated
Blockly.Msg.SENSOR_RSSI = "signal strength";  // untranslated
Blockly.Msg.SENSOR_RSSI_VALUE_GETSAMPLE_TOOLTIP = "Gets the signal strength from the last received message.";  // untranslated
Blockly.Msg.SENSOR_SONAR = "sonar";
Blockly.Msg.SENSOR_SOUND = "zvukový senzor";
Blockly.Msg.SENSOR_SOUND_CALLIOPE = "mikrofon";
Blockly.Msg.SENSOR_TEMPERATURE = "senzor teploty";
Blockly.Msg.SENSOR_TEMPERATURE_ARDUINO = "temperature sensor TMP36";  // untranslated
Blockly.Msg.SENSOR_TEMPERATURE_SENSEBOX = "temperature/pressure sensor BMP280";  // untranslated
Blockly.Msg.SENSOR_TIME = "čas";
Blockly.Msg.SENSOR_TIMER = "časovač";
Blockly.Msg.SENSOR_TOP = "vršek";
Blockly.Msg.SENSOR_TOUCH = "dotykový senzor";
Blockly.Msg.SENSOR_ULTRASONIC = "ultrazvukový senzor";
Blockly.Msg.SENSOR_ULTRASONIC_ARDUINO = "ultrasonic sensor HC-SR04";  // untranslated
Blockly.Msg.SENSOR_ULTRASONIC_DISTANCE_GETSAMPLE_TOOLTIP_ARDUINO = "Gets the current reading from the ultrasonic sensor in cm. Maximum distance to messure is 400 cm.";  // untranslated
Blockly.Msg.SENSOR_ULTRASONIC_DISTANCE_GETSAMPLE_TOOLTIP_MBOT = "Gets the current reading from the ultrasonic sensor in cm. Maximum distance to messure is 400 cm. Minimum distance tp measure is 3 cm.";  // untranslated
Blockly.Msg.SENSOR_UNIT_ACCEL = "m/s²";  // untranslated
Blockly.Msg.SENSOR_UNIT_AMPERE = "A";  // untranslated
Blockly.Msg.SENSOR_UNIT_CM = "cm";
Blockly.Msg.SENSOR_UNIT_DEGREE = "°";
Blockly.Msg.SENSOR_UNIT_MILLIG = "milli-g";  // untranslated
Blockly.Msg.SENSOR_UNIT_MM = "mm";  // untranslated
Blockly.Msg.SENSOR_UNIT_MS = "ms";
Blockly.Msg.SENSOR_UNIT_NEWTON = "N";  // untranslated
Blockly.Msg.SENSOR_UNIT_OMEGA = "ω";
Blockly.Msg.SENSOR_UNIT_PASCAL = "Pascal";  // untranslated
Blockly.Msg.SENSOR_UNIT_PERCENT = "%";
Blockly.Msg.SENSOR_UNIT_VOLT = "V";  // untranslated
Blockly.Msg.SENSOR_VALUE = "hodnota";
Blockly.Msg.SENSOR_WALL = "wall sensor";  // untranslated
Blockly.Msg.SERVER_NOT_AVAILABLE = "Open Roberta Lab není momentálně dostupný. </br> Zkontrolujte prosím svoje internetové připojení a zkuste stránku obnovit. Pokud problém přetrvává, kontaktujte prosím:</br>support-o-r@iais.fraunhofer.de";
Blockly.Msg.SERVO_MOTOR = "servo motor";  // untranslated
Blockly.Msg.SERVO_MOTOR_ARDUINO = "servo motor SG90";  // untranslated
Blockly.Msg.SERVO_TOOLTIP = "Represents a servo motor.";  // untranslated
Blockly.Msg.SET = "nastav";
Blockly.Msg.SETLANGUAGE_TOOLTIP = "Set the language.";  // untranslated
Blockly.Msg.SET_LED = "nastav LED";
Blockly.Msg.SET_RELAY = "turn relay";  // untranslated
Blockly.Msg.SET_RELAY_ARDUINO = "turn relay SRD-05VDC-SL-C";  // untranslated
Blockly.Msg.SET_RELAY_TOOLTIP = "Turns the relay on or off";  // untranslated
Blockly.Msg.SET_RGB_LED = "turn RGB LED";  // untranslated
Blockly.Msg.SIDE_BRUSH_OFF = "turn side brush off";  // untranslated
Blockly.Msg.SIDE_BRUSH_OFF_TOOLTIP = "Turns the side brush off.";  // untranslated
Blockly.Msg.SIDE_BRUSH_STATUS = "turn side brush";  // untranslated
Blockly.Msg.SIDE_BRUSH_TOOLTIP = "Turns the side brush on or off .";  // untranslated
Blockly.Msg.SIM_BLOCK_NOT_SUPPORTED = "Bohužel tento blok nemůžete použít v simulaci!";
Blockly.Msg.SIM_CONFIGURATION_WARNING_SENSOR_MISSING = "Tento senzor není v nastavení! Chování programu ve skutečném robotovi bude jiné než jste čekali!";
Blockly.Msg.SIM_CONFIGURATION_WARNING_WRONG_INFRARED_SENSOR_PORT = "Infračervený senzor není připojen v nastavení! Chování programu ve skutečném robotovi bude jiné než jste čekali, zkontrolujte prosím konfiguraci robota!";
Blockly.Msg.SIM_CONFIGURATION_WARNING_WRONG_SENSOR_PORT = "V tomto bloku jste použili špatný port senzoru! Chování programu ve skutečném robotovi bude jiné než jste čekali, zkontrolujte prosím konfiguraci robota!";
Blockly.Msg.SINGLE_MOTOR_ON_TOOLTIP_CALLIOPE = "Turns the single motor on with a specific power. Power can be positiv or negativ for reverse direction.";  // untranslated
Blockly.Msg.SLEEP = "spi";
Blockly.Msg.SLOT_FRONT = "front";  // untranslated
Blockly.Msg.SLOT_LEFT = "left";  // untranslated
Blockly.Msg.SLOT_LEFT_PITCH = "left pitch";  // untranslated
Blockly.Msg.SLOT_LEFT_ROLL = "left roll";  // untranslated
Blockly.Msg.SLOT_LEFT_YAW = "left yaw";  // untranslated
Blockly.Msg.SLOT_LEFT_YAW_PITCH = "left yaw pitch";  // untranslated
Blockly.Msg.SLOT_MIDDLE = "middle";  // untranslated
Blockly.Msg.SLOT_PITCH = "pitch";  // untranslated
Blockly.Msg.SLOT_REAR = "rear";  // untranslated
Blockly.Msg.SLOT_RIGHT = "right";  // untranslated
Blockly.Msg.SLOT_RIGHT_PITCH = "right pitch";  // untranslated
Blockly.Msg.SLOT_RIGHT_ROLL = "right roll";  // untranslated
Blockly.Msg.SLOT_RIGHT_YAW = "right yaw";  // untranslated
Blockly.Msg.SLOT_RIGHT_YAW_PITCH = "right yaw pitch";  // untranslated
Blockly.Msg.SLOT_SIDE = "side";  // untranslated
Blockly.Msg.SLOT_TILTED_ANY = "any";  // untranslated
Blockly.Msg.SLOT_TILTED_BACK = "back";  // untranslated
Blockly.Msg.SLOT_TILTED_DOWN = "down";  // untranslated
Blockly.Msg.SLOT_TILTED_FRONT = "front";  // untranslated
Blockly.Msg.SLOT_TILTED_NO = "not";  // untranslated
Blockly.Msg.SLOT_TILTED_UP = "up";  // untranslated
Blockly.Msg.SLOT_YAW = "yaw";  // untranslated
Blockly.Msg.SOUND_GETSAMPLE_TOOLTIP = "Gets the current reading from the sound sensor in the range 0 to 100. 0 is quiet and 100 is loud.";  // untranslated
Blockly.Msg.SOUND_TOOLTIP = "Představuje zvukový senzor.";
Blockly.Msg.SSID = "SSID";  // untranslated
Blockly.Msg.START = "start";
Blockly.Msg.START_ACTIVITY = "aktivita";
Blockly.Msg.START_ACTIVITY_TOOLTIP = "Spustí doplňkovou aktivitu.";
Blockly.Msg.START_PROGRAM = "start";
Blockly.Msg.START_PROGRAM_AUTOMOMOUSLIFE = "autonomous behaviour";  // untranslated
Blockly.Msg.START_PROGRAM_DEBUG = "zobrazovat data ze senzorů";
Blockly.Msg.START_TOOLTIP = "Počáteční bod hlavního programu.";
Blockly.Msg.STEPMOTOR_TOOLTIP = "Represents a step motor.";  // untranslated
Blockly.Msg.STEPS_PER_REVOLUTION = "steps per revolution";  // untranslated
Blockly.Msg.STEP_MOTOR = "step motor";  // untranslated
Blockly.Msg.STEP_MOTOR_ARDUINO = "step motor 28BYJ-48";  // untranslated
Blockly.Msg.STEP_MOTOR_ON_TOOLTIP = "Turns motor on with a provided speed in rpm and stops motor after execution of provided number of rotations.";  // untranslated
Blockly.Msg.STRENGTH = "síla";
Blockly.Msg.SWITCH = "switch";  // untranslated
Blockly.Msg.SWITCH_LED_MATRIX_TOOLTIP = "Enables/Disables the LED matrix to use the dual purpose pins.";  // untranslated
Blockly.Msg.TAB_CONFIGURATION = "Konfigurace robota";
Blockly.Msg.TAB_PROGRAM = "Program";
Blockly.Msg.TEMPERATURE_GETSAMPLE_TOOLTIP = "Gets the current reading from the temperatur in °C sensor.";  // untranslated
Blockly.Msg.TEMPERATURE_TOOLTIP = "Represents a temperature sensor.";  // untranslated
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "append text";  // untranslated
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "to";  // untranslated
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Append some text to the first text.";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "to lower case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "to Title Case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "to UPPER CASE";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Return a copy of the text in a different case.";  // untranslated
Blockly.Msg.TEXT_CHARAT_FIRST = "get first letter";  // untranslated
Blockly.Msg.TEXT_CHARAT_FROM_END = "get letter # from end";  // untranslated
Blockly.Msg.TEXT_CHARAT_FROM_START = "get letter #";  // untranslated
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "in text";  // untranslated
Blockly.Msg.TEXT_CHARAT_LAST = "get last letter";  // untranslated
Blockly.Msg.TEXT_CHARAT_RANDOM = "get random letter";  // untranslated
Blockly.Msg.TEXT_CHARAT_TAIL = "";  // untranslated
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Returns the letter at the specified position.";  // untranslated
Blockly.Msg.TEXT_COMMENT_TOOLTIP = "Write a comment to your code here, to make it easier for you and others to read and understand your code. It will also generate an inline comment in the generated source code";  // untranslated
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Add an item to the text.";  // untranslated
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "join";  // untranslated
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Add, remove, or reorder sections to reconfigure this text block.";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "to letter # from end";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "to letter #";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "to last letter";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "in text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "get substring from first letter";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "get substring from letter # from end";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "get substring from letter #";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Returns a specified portion of the text.";  // untranslated
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "in text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "find first occurrence of text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "find last occurrence of text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_TAIL = "";  // untranslated
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Returns the index of the first/last occurrence of the first text in the second text. Returns 0 if text is not found.";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 is empty";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Returns true if the provided text is empty.";  // untranslated
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "create text with";  // untranslated
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Create a piece of text by joining together any number of items.";  // untranslated
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "length of %1";  // untranslated
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Returns the number of letters (including spaces) in the provided text.";  // untranslated
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "print %1";  // untranslated
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Print the specified text, number or other value.";  // untranslated
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Prompt for user for a number.";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Prompt for user for some text.";  // untranslated
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "prompt for number with message";  // untranslated
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "prompt for text with message";  // untranslated
Blockly.Msg.TEXT_TEXT_HELPURL = "https://en.wikipedia.org/wiki/String_(computer_science)";  // untranslated
Blockly.Msg.TEXT_TEXT_TOOLTIP = "A letter, word, or line of text.";  // untranslated
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "trim spaces from both sides of";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "trim spaces from left side of";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "trim spaces from right side of";  // untranslated
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Return a copy of the text with spaces removed from one or both ends.";  // untranslated
Blockly.Msg.THETA = "theta";  // untranslated
Blockly.Msg.TIMEOUT = "timeout";  // untranslated
Blockly.Msg.TIMER_GETSAMPLE_TOOLTIP = "Gets the current reading from the timer.";  // untranslated
Blockly.Msg.TIMER_RESET_TOOLTIP = "Vynuluje časovač.";
Blockly.Msg.TITLE = "title";  // untranslated
Blockly.Msg.TO = "to";  // untranslated
Blockly.Msg.TODAY = "Today";  // untranslated
Blockly.Msg.TOOLBOX_ACTION = "Akce";
Blockly.Msg.TOOLBOX_ANIMATION = "Animace";
Blockly.Msg.TOOLBOX_CLEANING = "Cleaning";  // untranslated
Blockly.Msg.TOOLBOX_COLOUR = "Barvy";
Blockly.Msg.TOOLBOX_COMMUNICATION = "Zprávy";
Blockly.Msg.TOOLBOX_CONTROL = "Ovládání";
Blockly.Msg.TOOLBOX_DECISION = "Podmínky";
Blockly.Msg.TOOLBOX_DISPLAY = "Displej";
Blockly.Msg.TOOLBOX_DRIVE = "Jízda";
Blockly.Msg.TOOLBOX_IMAGE = "Obrázky";
Blockly.Msg.TOOLBOX_LIGHT = "LED na kostce";
Blockly.Msg.TOOLBOX_LIST = "Seznamy";
Blockly.Msg.TOOLBOX_LOGIC = "Logické spojky";
Blockly.Msg.TOOLBOX_LOOP = "Cykly";
Blockly.Msg.TOOLBOX_MATH = "Matematika";
Blockly.Msg.TOOLBOX_MOVE = "Pohyb";
Blockly.Msg.TOOLBOX_PIN = "Pin";
Blockly.Msg.TOOLBOX_PROCEDURE = "Funkce";
Blockly.Msg.TOOLBOX_SENSOR = "Senzory";
Blockly.Msg.TOOLBOX_SOUND = "Zvuky";
Blockly.Msg.TOOLBOX_TEXT = "Text";
Blockly.Msg.TOOLBOX_VARIABLE = "Proměnné";
Blockly.Msg.TOOLBOX_VISION = "Zrak";
Blockly.Msg.TOOLBOX_WAIT = "Čekání";
Blockly.Msg.TOOLBOX_WALK = "Chůze";
Blockly.Msg.TOUCH_ISPRESSED_TOOLTIP = "Is the touch sensor pressed?";  // untranslated
Blockly.Msg.TOUCH_TOOLTIP = "Je dotykový senzor stisknut?";
Blockly.Msg.TOUR1_DESCRIPTION00 = "další";
Blockly.Msg.TOUR1_DESCRIPTION01 = "Vítejte,<br>klikněte na  »další« a zahajte prohlídku Open Roberta Lab.<br>Ukážu vám, jak můžete programovat svého robota pomocí NEPO.<br>Prohlídku můžete kdykoliv ukončit kliknutím na »X« v pravém horním rohu.";
Blockly.Msg.TOUR1_DESCRIPTION02 = "Menu ;-)";
Blockly.Msg.TOUR1_DESCRIPTION03 = "Zde naleznete vše pro programování vašeho robota!<br><span class=\"typcn typcn-document-text\"></span> Uložit a nahrát programy<br><span class=\"typcn typcn-ev3\"></span> Připojit vašeho robota k Open Roberta Lab nebo se přepnout na jiný systém<br><span class=\"typcn typcn-lightbulb\"></span> Nápověda<br><span class=\"typcn typcn-user\"></span>Vše o uživatelských účtech<br><span class=\"typcn typcn-th-large-outline\"></span> Podívejte se do galerie a zkuste programy od jiných uživatelů!<br><span class=\"typcn typcn-world\"></span> Klikněte zde pro přepnutí do jiného jazyka";
Blockly.Msg.TOUR1_DESCRIPTION04 = "Klikněte zde a přepněte se do nastavení robota";
Blockly.Msg.TOUR1_DESCRIPTION05 = "Nastavení robota můžete přizpůsobit později,<br>pokud máte postaveného jiného robota.<br>Pokud žádného robota nemáte a chcete otestovat svůj program v simulaci, <br>použije se toto nastavení.";
Blockly.Msg.TOUR1_DESCRIPTION06 = "Klikněte zde a přepnete se zpět do oblasti pro programování!";
Blockly.Msg.TOUR1_DESCRIPTION07 = "Nástroje.<br>Zde naleznete všechny programové bloky.";
Blockly.Msg.TOUR1_DESCRIPTION07a = "Pokud jste pokročilý uživatel, zde se přepnete do pokročilého rozhraní.<br>Tam najdete více bloků pro programování.<br><span class=\"typcn typcn-media-stop-outline\"></span> režim Začátečník<br><span class=\"typcn typcn-star-outline\"></span> režim Pokročilý";
Blockly.Msg.TOUR1_DESCRIPTION08 = "Každý program začíná startovním blokem«.<br>Další programové bloky, které má robot vykonat, připojte k tomuto bloku.<br>Jednoduše přetáhněte požadovaný blok pod startovní blok.";
Blockly.Msg.TOUR1_DESCRIPTION09 = "Zde najdete pár klávesových zkratek!<br>Zleva doprava:<br><span class=\"typcn typcn-media-play\"></span>  Klikněte zde pro spuštění programu ve skutečném robotovi<br><span class=\"typcn typcn-cloud-storage\"></span> Uloží program, předtím se ale musíte přihlásit<br><span class=\"typcn typcn-zoom\"></span> Klikněte zde a přibližte si bloky<br><span class=\"typcn typcn-archive\"></span> Odpadkový koš! Jednoduše přesuňte bloky do koše a tím je smažete.<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Pozor: Po smazání bloků je už nelze obnovit!<br>";
Blockly.Msg.TOUR1_DESCRIPTION10 = "Klikněte na »Akce«";
Blockly.Msg.TOUR1_DESCRIPTION12 = "Nyní přetáhněte nový blok pod blok začátku programu";
Blockly.Msg.TOUR1_DESCRIPTION13 = "Nyní otevřete simulátor...";
Blockly.Msg.TOUR1_DESCRIPTION13a = "a otestuje svůj program v simulátoru!";
Blockly.Msg.TOUR1_DESCRIPTION15 = "Výborně,<br>váš robot jede 20cm dopředu,<br>to je přesně to, co jste naprogramovali!";
Blockly.Msg.TOUR1_DESCRIPTION16 = "Nashledanou a uživejte si dalších pokusů!";
Blockly.Msg.ULTRASONIC_GETSAMPLE_TOOLTIP = "Gets the current reading from the ultrasonic sensor in cm. Maximum distance to messure is 255 cm.";  // untranslated
Blockly.Msg.ULTRASONIC_TOOLTIP = "Představuje ultrazvukový senzor.";
Blockly.Msg.UNDO = "Undo";  // untranslated
Blockly.Msg.VACUUM_OFF = "turn vacuum off";  // untranslated
Blockly.Msg.VACUUM_OFF_TOOLTIP = "Turns the vacuum off.";  // untranslated
Blockly.Msg.VACUUM_ON = "turn vacuum on %";  // untranslated
Blockly.Msg.VACUUM_ON_TOOLTIP = "Turns on the vacuum speed in procent";  // untranslated
Blockly.Msg.VALIDATION_CONTAINS_SPECIAL_CHARACTERS = "Povolené speciální znaky: »=+!?.,%#+&^@_-«";
Blockly.Msg.VALIDATION_FIELD_REQUIRED = "Toto pole nemůže být prázdné!";
Blockly.Msg.VALIDATION_MAX_LENGTH = "Maximální délka je 25 znaků!";
Blockly.Msg.VALIDATION_PASSWORD_MIN_LENGTH = "Heslo musí mít nejméně 6 znaků!";
Blockly.Msg.VALIDATION_SECOND_PASSWORD_EQUAL = "Obě hesla musí být stejná!";
Blockly.Msg.VALIDATION_TOKEN_LENGTH = "Symbol musí mít alespoň 8 znaků!";
Blockly.Msg.VALIDATION_VALID_EMAIL_ADDRESS = "Zadejte prosím platnou e-mailovou adresu!";
Blockly.Msg.VALUE_TO = "hodnota";
Blockly.Msg.VARIABLES_DEFAULT_NAME = "item";  // untranslated
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Create 'set %1'";  // untranslated
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Returns the value of this variable.";  // untranslated
Blockly.Msg.VARIABLES_GLOBAL_DECLARE_TOOLTIP = "Vytvoří globální proměnnou.";
Blockly.Msg.VARIABLES_LOCAL_DECLARE_TOOLTIP = "Vytvoří lokální proměnnou.";
Blockly.Msg.VARIABLES_SET = "set %1 to %2";  // untranslated
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Create 'get %1'";  // untranslated
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Sets this variable to be equal to the input.";  // untranslated
Blockly.Msg.VARIABLES_TITLE = "proměnná";
Blockly.Msg.VARIABLES_TYPE_ARRAY_BOOLEAN = "Seznam pravdivostních hodnot";
Blockly.Msg.VARIABLES_TYPE_ARRAY_COLOUR = "Seznam barev.";
Blockly.Msg.VARIABLES_TYPE_ARRAY_CONNECTION = "Seznam připojení";
Blockly.Msg.VARIABLES_TYPE_ARRAY_IMAGE = "Seznam obrázků";
Blockly.Msg.VARIABLES_TYPE_ARRAY_NUMBER = "Seznam čísel";
Blockly.Msg.VARIABLES_TYPE_ARRAY_STRING = "Seznam řetězců";
Blockly.Msg.VARIABLES_TYPE_BOOLEAN = "Pravdivostní hodnota";
Blockly.Msg.VARIABLES_TYPE_COLOUR = "Barva";
Blockly.Msg.VARIABLES_TYPE_CONNECTION = "Připojení";
Blockly.Msg.VARIABLES_TYPE_IMAGE = "Obrázek";
Blockly.Msg.VARIABLES_TYPE_NUMBER = "Číslo";
Blockly.Msg.VARIABLES_TYPE_STRING = "Řetězec";
Blockly.Msg.VARIABLE_USED_BEFORE_DECLARATION = "Proměnná je použita před jejím vytvořením.";
Blockly.Msg.VOICE_PITCH = "voice pitch";  // untranslated
Blockly.Msg.VOICE_SPEED = "voice speed";  // untranslated
Blockly.Msg.WAIT = "čekej (ms)";
Blockly.Msg.WAIT_FOR_TOOLTIP = "Čeká na hodnoty ze senzorů";
Blockly.Msg.WAIT_OR = "nebo čekej na";
Blockly.Msg.WAIT_TIME_TOOLTIP = "Čeká po určitý čas (v ms).";
Blockly.Msg.WAIT_TOOLTIP = "Čeká, až bude podmínka splněna.";
Blockly.Msg.WAIT_UNTIL = "čekej až";
Blockly.Msg.WIRELESS_TOOLTIP = "Represents a wireless connection";  // untranslated
Blockly.Msg.WRITE_TO_PIN_TOOLTIP = "Pošle hodnotu na vybraný pin.";
Blockly.Msg.X = "x";
Blockly.Msg.XEND = "end of X axis";  // untranslated
Blockly.Msg.XLABEL = "X axis label";  // untranslated
Blockly.Msg.XSTART = "start of X axis";  // untranslated
Blockly.Msg.XTICK = "distance between X ticks";  // untranslated
Blockly.Msg.Y = "y";
Blockly.Msg.YAW = "natočení";
Blockly.Msg.YEND = "end of Y axis";  // untranslated
Blockly.Msg.YES = "ano";
Blockly.Msg.YLABEL = "Y axis label";  // untranslated
Blockly.Msg.YOUNGER_THEN_14 = "Je mi méně než 16 let!";
Blockly.Msg.YSTART = "start of Y axis";  // untranslated
Blockly.Msg.YTICK = "distance between Y ticks";  // untranslated
Blockly.Msg.Z = "z";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.SENSOR_PINTOUCH_PRESSED_GETSAMPLE_TOOLTIP = Blockly.Msg.PIN_ISTOUCHED_TOOLTIP;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.KEY_GETSAMPLE_TOOLTIP = Blockly.Msg.KEY_ISPRESSED_TOOLTIP;
Blockly.Msg.SENSOR_INFRARED_GETSAMPLE_TOOLTIP = Blockly.Msg.INFRARED_GETSAMPLE_TOOLTIP;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.MODE_DOWN = Blockly.Msg.SENSOR_GESTURE_DOWN;
Blockly.Msg.SENSOR_ULTRASONIC_GETSAMPLE_TOOLTIP = Blockly.Msg.ULTRASONIC_GETSAMPLE_TOOLTIP;
Blockly.Msg.MODE_SHAKE = Blockly.Msg.SENSOR_GESTURE_SHAKE;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.SENSOR_ENCODER_GETSAMPLE_TOOLTIP = Blockly.Msg.ENCODER_GETSAMPLE_TOOLTIP;
Blockly.Msg.MODE_FACE_UP = Blockly.Msg.SENSOR_GESTURE_FACE_UP;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.MODE_FACE_DOWN = Blockly.Msg.SENSOR_GESTURE_FACE_DOWN;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.SENSOR_COLOUR_GETSAMPLE_TOOLTIP = Blockly.Msg.COLOUR_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_SOUND_GETSAMPLE_TOOLTIP_CALLIOPE = Blockly.Msg.MICROPHONE_GETSAMPLE_TOOLTIP;
Blockly.Msg.MODE_FREEFALL = Blockly.Msg.SENSOR_GESTURE_FREEFALL;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.SENSOR_TIMER_GETSAMPLE_TOOLTIP = Blockly.Msg.TIMER_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_ACCELEROMETER_VALUE_GETSAMPLE_TOOLTIP = Blockly.Msg.ACCELEROMETER_ROTATION_TOOLTIP;
Blockly.Msg.ORA_ROBOT_PUSH_RUN = Blockly.Msg.MESSAGE_EDIT_START;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.MODE_UP = Blockly.Msg.SENSOR_GESTURE_UP;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.SENSOR_GYRO_GETSAMPLE_TOOLTIP = Blockly.Msg.GYRO_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_BATTERY_GETSAMPLE_TOOLTIP = Blockly.Msg.BATTERY_GETSAMPLE_TOOLTIP;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.SENSOR_LIGHT_GETSAMPLE_TOOLTIP = Blockly.Msg.LIGHT_GETSAMPLE_TOOLTIP;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.SENSOR_INFRARED_PRESENCE_GETSAMPLE_TOOLTIP = Blockly.Msg.INFRARED_PRESENCE_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_COMPASS_GETSAMPLE_TOOLTIP = Blockly.Msg.COMPASS_GETSAMPLE_TOOLTIP;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.SENSOR_SOUND_GETSAMPLE_TOOLTIP = Blockly.Msg.SOUND_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_FLAME_GETSAMPLE_TOOLTIP = Blockly.Msg.FLAME_GETSAMPLE_TOOLTIP;
Blockly.Msg.TOUCH_GETSAMPLE_TOOLTIP = Blockly.Msg.TOUCH_ISPRESSED_TOOLTIP;
Blockly.Msg.SENSOR_INFRARED_DISTANCE_GETSAMPLE_TOOLTIP = Blockly.Msg.INFRARED_DISTANCE_GETSAMPLE_TOOLTIP;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.SENSOR_KEY_GETSAMPLE_TOOLTIP = Blockly.Msg.KEY_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_TEMPERATURE_GETSAMPLE_TOOLTIP = Blockly.Msg.TEMPERATURE_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_TOUCH_GETSAMPLE_TOOLTIP = Blockly.Msg.TOUCH_GETSAMPLE_TOOLTIP;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;